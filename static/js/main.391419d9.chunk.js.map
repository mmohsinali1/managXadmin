{"version":3,"sources":["Common/tune.mp3","Common/Pagination.js","Services/Api/Constant.js","Services/requests.js","Services/Api/Api.js","Bills/Bill.js","User/User.js","Payments/Payment.js","Discount/Discount.js","Menu/RightMenu.js","Common/UserStatus.js","Menu/Navbarz.js","Menu/Signin.js","Menu/Navbary.js","Auth/Login.js","Main/Progress.js","Main/Projects.js","Main/AssignedAdmin.js","Main/Main.js","Auth/EmailVerified.js","Auth/Logout.js","Auth/Forget.js","Auth/Message.js","Auth/Reset.js","Auth/ResetLink.js","Common/EditProfile.js","Customer/Customer.js","Common/Phone.js","Customer/AddCustomer.js","Customer/EditCustomer.js","User/AddUser.js","User/EditUser.js","Common/ResourceAssignment.js","Services/Api/Survey.js","Bills/EditQuotation.js","Common/AddProject.js","Common/NotFound.js","Routes/PrivateRoutes.js","Common/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","index","Math","ceil","push","className","map","number","key","onClick","BASE_URl","request","options","axios","create","headers","Authorization","cookie","load","client","then","response","data","catch","err","status","remove","path","window","location","reload","console","error","message","Promise","reject","PresaleServices","getProjectStatus","url","method","login","forget","getUsers","sendUser","getStatusKey","id","resetPassword","getBills","getName","logOut","getDiscounts","getPayments","getRoles","getCustomers","createUser","getUser","editUser","getCustomer","editCustomer","createCustomer","getUserNames","assignResources","getUserProject","name","geteditProfile","editProfile","createProject","getProjectCustomers","Bill","props","onChangeHandler","e","preventDefault","state","searched","value","target","type","temp","split","reverse","join","filtered","filter","el","lc","toLowerCase","includes","searchingflag","setState","searching","indexOfLastItem","indexOfFirstItem","slice","pageNumber","currentFiltered","currentPage","editQuotation","reference_no","history","loggedIn","loaded","setLocation","pathname","res","cyber_security","concat","office365","length","log","this","tableRows","item","company_name","amount","quoted_date","payment_date","canWrite","FormOutlined","EyeOutlined","style","clear","width","marginLeft","class","placeholder","onChange","required","Component","Users","addUserPage","email","role_name","canwrite","EditOutlined","Discount","textAlign","SubMenu","Menu","RightMenu","prevProps","prevState","snapshot","mode","title","href","ItemGroup","Item","to","UserStatus","handleOk","callVisible","calling","api","room","audio","btnLoading","put","closed","callFrom","iframe","win","open","timer","setInterval","clearInterval","document","write","pause","currentTime","handleCancel","myId","socketio","broadcaster","host","hostname","forceTLS","encrypted","authEndpoint","auth","token","Accept","redirect","Audio","mp3_file","loop","echo","Echo","private","listen","on","joining","user","leaving","vcall","play","visible","onOk","onCancel","footer","loading","withRouter","Navbarz","current","showModal","showDrawer","onClose","src","alt","placement","closable","Signin","collapsed","Login","onInput","onSubmit","password","api_key","save","maxAge","setToken","toString","undefined","pattern","onBlur","Progress","progress","total","complete","Panel","Collapse","GenExtra","UpCircleOutlined","fontSize","color","DownCircleOutlined","MyProject","ProjectComp","due_date","percentage","strokeColor","percent","action","changeFile","UploadOutlined","stopPropagation","Projects","info","file","fileList","success","fetching","projectData","tasks","users","first","view","accordion","showArrow","header","extra","size","Index","project_data","taskInProgress","taskComplete","ProjectComplete","Project_Data","Total_Projects","Tasks_Completed","Tasks_In_Progress","canCreateProject","EmailVerified","match","params","LogOut","To","Forget","Message","Reset","password_confirmation","errors","repassword","OnInput","ResetLink","EditProfile","flag","setName","phone","Customers","addCustomerPage","verified","Phone","setValue","initial","AddUser","setPhone","onSubmitHandler","htmlFor","EditUser","roles","display","statuses","rolesFetched","role","_status","_role","user_role","localStorage","setItem","JSON","stringify","Option","Select","ResourceAssignment","selected","project","handleChange","projects","i","projectName","projectsFetched","parse","getItem","usersFetched","empty","projetName","showSearch","defaultValue","optionFilterProp","filterOption","input","option","children","indexOf","allowClear","ServeyServics","OfficeSurveyPaymnet","getQuestionAns","sendAnswer","sendAnswerGoogle","sendCyberAnswerGoogle","sendCyberAnswerln","sendAnswerln","sendAnswerFacebook","sendCyberAnswerFacebook","getAnswerDetail","sendCyberAnswer","getCyberQuestionAns","sendEditAnswer","getCyberAnswerDetail","sendCyberEditAnswer","getCyberPrice","getOfficePrice","officePayment","officePaymentRef","CyberPaymentRef","question","disabled","Edit","editData","checked","ans","refrence_no","refrenceNo","customer_name","quotation_date","price","pricelabel","editQuestion","$r","Object","values","q","Questions","onSaveHandler","survey_type","selectedAnswers","forEach","selected_ans","tag","setTimeout","postAns","btnloading","SurveyServics","getAnsDetail","check","splice","survey_questions","last_updated_by","last_updated_at","answers","onCrossHandler","change","q_visible","theme","border","borderRadius","padding","val","span","q_disabled","React","AddProject","customer_id","project_name","project_type","customersFetched","types","customer","NotFound","PrivateRoutes","setPermissions","payments","quotations","discounts","customers","resourceAssign","permissions","permissionsSet","setKey","read","scrollTo","render","Main","exact","EditQuotation","Logout","component","Navbary","Sider","Layout","Header","Content","Footer","MainLayOut","onCollapse","toggle","resourceAssignment","called","collapsible","selectedKeys","ProfileOutlined","UserAddOutlined","UsergroupAddOutlined","WalletOutlined","PayCircleOutlined","ReconciliationOutlined","minHeight","App","Boolean","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.391419d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tune.148c2dca.mp3\";","import React from \"react\";\r\n\r\nconst Pagination = ({itemsPerPage, totalItems, paginate}) => {\r\n    const pageNumbers = [];\r\n    for (let index = 1; index <= Math.ceil(totalItems / itemsPerPage); index++) {\r\n        pageNumbers.push(index);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className=\"page-item\">\r\n                        <a onClick={() => paginate(number)} className=\"page-link\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","export const BASE_URl = \"/api-gateway/\";","import axios from 'axios'\r\nimport cookie from \"react-cookies\";\r\n\r\n\r\nconst request = function (options) {\r\n\r\n    const onSuccess = function (response) {\r\n        return response.data;\r\n    };\r\n\r\n    const onError = function (err) {\r\n\r\n        if (err.response) {\r\n            if(err.response.status===401){\r\n                cookie.remove(\"admin_token\", {\r\n                    path: \"/\",\r\n                });\r\n\r\n                window.location.reload()\r\n            }\r\n            // Request was made but server responded with something other than 2xx\r\n            // console.error('Status:', err.response.status);\r\n            // console.error('Data:', err.response.data);\r\n            // console.error('Headers:', err.response.headers);\r\n        } else {\r\n\r\n            // Something else happened while setting up the request triggered the error\r\n            console.error('Error Message:', err.message);\r\n        }\r\n\r\n        //return Promise.reject(err.response || err.message);\r\n        return Promise.reject(err);\r\n    };\r\n    const client = axios.create({ headers: { Authorization: cookie.load('admin_token') } });\r\n    return client(options)\r\n        .then(onSuccess)\r\n        .catch(onError);\r\n};\r\n\r\nexport default request;","import {BASE_URl} from './Constant'\r\nimport request from '../requests'\r\n\r\nfunction getProjectStatus() {\r\n    return request({\r\n        url: `${BASE_URl}admin/getallprojectstatus`,\r\n        method: 'GET'\r\n    })\r\n}\r\n\r\nfunction login(data) {\r\n    return request({\r\n        url: `${BASE_URl}admin/login`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\n\r\nfunction forget(data){\r\n    return request({\r\n        url: `${BASE_URl}users/forgotPassword`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\n\r\n\r\nfunction createUser(data){\r\n    return request({\r\n        url: `${BASE_URl}admin/createuser`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\n\r\nfunction resetPassword(data){\r\n    return request({\r\n        url: `${BASE_URl}users/resetPassword`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\nfunction logOut(){\r\n    return request({\r\n        url: `${BASE_URl}logout`,\r\n        method: 'POST',\r\n\r\n    })\r\n}\r\nfunction getName(){\r\n    return request({\r\n        url: `${BASE_URl}admin/getname`,\r\n        method: 'GET',\r\n    })\r\n}\r\nfunction getRoles(){\r\n    return request({\r\n        url: `${BASE_URl}admin/getroles`,\r\n        method: 'GET',\r\n    })\r\n}\r\nfunction getUserNames(){\r\n    return request({\r\n        url: `${BASE_URl}admin/getassignresources`,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\nfunction getUserProject(name){\r\n    return request({\r\n        url: `${BASE_URl}admin/getprojectresources/`+name,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\nfunction getBills(){\r\n    return request({\r\n        url: `${BASE_URl}admin/getallbills`,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\nfunction getPayments(){\r\n    return request({\r\n        url: `${BASE_URl}admin/getallpayments`,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\n\r\n function getUsers() {\r\n     return request({\r\n         url: `${BASE_URl}admin/getallusers`,\r\n         method: 'GET',\r\n     })\r\n }\r\nfunction createCustomer(data){\r\n    return request({\r\n        url: `${BASE_URl}admin/createcustomer`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\n\r\nfunction getCustomer(id) {\r\n    return request({\r\n        url: `${BASE_URl}admin/geteditcustomer/`+id,\r\n        method: 'GET',\r\n    })\r\n}\r\nfunction editCustomer(data){\r\n    return request({\r\n        url: `${BASE_URl}admin/editcustomer/`+data.id,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\nfunction getUser(id) {\r\n    return request({\r\n        url: `${BASE_URl}admin/getedituser/`+id,\r\n        method: 'GET',\r\n    })\r\n}\r\nfunction geteditProfile(){\r\n    return request({\r\n        url: `${BASE_URl}users/getedit`,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\nfunction editUser(data){\r\n    return request({\r\n        url: `${BASE_URl}admin/edituser/`+data.id,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\n\r\nfunction editProfile(data){\r\n    return request({\r\n        url: `${BASE_URl}users/editprofile`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\nfunction sendUser(data){\r\n    return request({\r\n        url: `${BASE_URl}users/editprofile`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\n\r\nfunction assignResources(data){\r\n    return request({\r\n        url: `${BASE_URl}admin/assignresources`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\nfunction createProject(data){\r\n    return request({\r\n        url: `${BASE_URl}admin/createproject`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\n\r\n\r\nfunction getCustomers() {\r\n    return request({\r\n        url: `${BASE_URl}admin/getallcustomers`,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\nfunction getProjectCustomers() {\r\n    return request({\r\n        url: `${BASE_URl}admin/getcreateprojectdata`,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\nfunction getDiscounts() {\r\n    return request({\r\n        url: `${BASE_URl}admin/getalldiscounts`,\r\n        method: 'GET',\r\n    })\r\n}\r\nfunction getStatusKey(id) {\r\n    return request({\r\n        url: `${BASE_URl}admin/gettasks/${id}`,\r\n    })\r\n}\r\n const PresaleServices={\r\ngetProjectStatus,\r\n     login,\r\n     forget,\r\n     getUsers,\r\n     sendUser,\r\n     getStatusKey,\r\n     resetPassword,\r\n     getBills,\r\n     getName,\r\n     logOut,\r\n     getDiscounts,\r\n     getPayments,\r\n     getRoles,\r\n     getCustomers,\r\n     createUser,\r\n     getUser,\r\n     editUser,\r\n     getCustomer,\r\n     editCustomer,\r\n     createCustomer,\r\n     getUserNames,\r\n     assignResources,\r\n     getUserProject,\r\n     geteditProfile,\r\n     editProfile,\r\n     createProject,\r\n     getProjectCustomers\r\n};\r\n\r\n\r\nexport default PresaleServices","import React, {Component} from 'react';\r\nimport cookie from \"react-cookies\";\r\nimport Pagination from \"../Common/Pagination\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport PresaleServices from '../Services/Api/Api';\r\nimport { FormOutlined,EyeOutlined } from '@ant-design/icons';\r\nexport default class Bill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let loggedIn = null;\r\n        this.state = {\r\n            loggedIn,\r\n            data: [],\r\n            filtered: [],\r\n            searched: [],\r\n            currentPage: 1,\r\n            itemsPerPage: 5,\r\n            searching:false,\r\n            loaded:false\r\n        };\r\n        this.props.setLocation(this.props.history.location.pathname)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        e.preventDefault();\r\n        const {data, searched,itemsPerPage} = this.state;\r\n        const currentPage=1;\r\n        let value = e.target.value;\r\n        if(e.target.type==\"date\"){\r\n            let temp=value.split(\"-\")\r\n            temp=temp.reverse();\r\n            value=temp.join('/')\r\n        }\r\n        let filtered = [...data];\r\n        let key = e.target.name;\r\n        searched[key] = value;\r\n        for (key in searched) {\r\n            value = searched[key];\r\n            if (value !== \"\") {\r\n                filtered = filtered.filter(el => {\r\n                    const lc = el[key].toLowerCase();\r\n                    const filter = value.toLowerCase();\r\n                    return lc.includes(filter);\r\n                });\r\n            }\r\n        }\r\n        let searchingflag=false;\r\n        for (key in searched){\r\n\r\n            value=searched[key];\r\n            if(value!==\"\")\r\n                searchingflag=true\r\n        }\r\n        if(!searchingflag){\r\n            const indexOfLastItem = currentPage * itemsPerPage;\r\n            const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n            this.setState({\r\n                filtered: filtered.slice(\r\n                    indexOfFirstItem, indexOfLastItem\r\n                ),\r\n                searched: searched,\r\n                searching:false\r\n            });\r\n        }\r\n        else\r\n            this.setState({\r\n                filtered: filtered,\r\n                searched: searched,\r\n                searching:true\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        PresaleServices.getBills()\r\n            .then(res =>  {\r\n\r\n                const { currentPage, itemsPerPage} = this.state;\r\n                const indexOfLastItem = currentPage * itemsPerPage;\r\n                const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n                let currentFiltered;\r\n                let data=res.data.cyber_security\r\n                data= data.concat(res.data.office365)\r\n\r\n                this.setState({\r\n                    data\r\n                },()=>{\r\n                    if(data.length){\r\n                        const temp = [...data];\r\n                        currentFiltered = temp.slice(\r\n                            indexOfFirstItem,\r\n                            indexOfLastItem\r\n                        );}\r\n                    else {\r\n                        currentFiltered=[]\r\n                    }\r\n                    this.setState({filtered: currentFiltered,loaded:true});\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    paginate = pageNumber => {\r\n        const {data,itemsPerPage} = this.state;\r\n        const indexOfLastItem = pageNumber * itemsPerPage;\r\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n        const temp = [...data];\r\n        const currentFiltered = temp.slice(indexOfFirstItem, indexOfLastItem);\r\n        this.setState({currentPage: pageNumber, filtered: currentFiltered});\r\n    };\r\n\r\n    editQuotation=reference_no=>{\r\n        this.props.history.push(`/Edit/${reference_no}`)\r\n    };\r\n\r\n    render() {\r\n        const {filtered, itemsPerPage, data,searching,loaded} = this.state;\r\n\r\n        const tableRows = filtered.length ? (\r\n            filtered.map((item, index) => {\r\n                return (\r\n                    <tr className=\"text-left\" key={index}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.company_name}</td>\r\n                        <td>{item.amount}</td>\r\n                        <td>{item.status}</td>\r\n                        <td >{item.reference_no}</td>\r\n                        <td>{item.quoted_date}</td>\r\n                        <td>{item.payment_date}</td>\r\n                        {\r\n                            this.props.canWrite?<td>{\r\n                               item.status!==\"Paid\"? <FormOutlined onClick={() => this.editQuotation(item.reference_no)}/>\r\n                            : <EyeOutlined onClick={() => this.props.history.push(`/View/${item.reference_no}`)} />\r\n                            }\r\n                            </td>\r\n                        :null}</tr>\r\n                );\r\n            })\r\n        ) : (\r\n            loaded?<tr>\r\n                <td className=\"float-left\">\r\n                    <p className=\"text-danger float-left\">No record found</p>\r\n                </td>\r\n            </tr>:null\r\n        );\r\n        return (\r\n            <div>\r\n                <div className=\"content search-table-wrapper\"\r\n                     id=\"main-content\"\r\n                     style={{clear: \"both\", width: \"90%\", marginLeft: \"8%\"}}\r\n                >\r\n                    <div class=\"card mt-3\">\r\n                        <div class=\"card-header text-bolder\">\r\n                            <h4 className=\"font-weight-bold mb-0\">Manage Bills And Payments</h4>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <table class=\"table \">\r\n                                <thead>\r\n                                {/*                 <tr className=\"text-left\">\r\n                                <th >Customer Name</th>\r\n                                <th >Company Name</th>\r\n                                <th >Reference Number</th>\r\n                                <th >Amount</th>\r\n                                <th >Quotation date</th>\r\n\r\n                            </tr>*/}\r\n                                <tr>\r\n\r\n                                    <th>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Name\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n\r\n                                        />\r\n                                    </th>\r\n\r\n                                    <th width=\"170px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            placeholder=\"Company name\"\r\n                                            name=\"company_name\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n\r\n                                        />\r\n                                    </th>\r\n                                    <th width=\"180px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"amount\"\r\n                                            placeholder=\"amount\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                    <th width=\"180px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"status\"\r\n                                            placeholder=\"Status\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                    <th width=\"180px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"reference_no\"\r\n                                            placeholder=\"Reference number\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n\r\n                                    <th width=\"180px\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"quoted_date\"\r\n                                            placeholder=\"Quotation date\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                    <th width=\"180px\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control W-100 d-block\"\r\n                                        name=\"payment_date\"\r\n                                        placeholder=\"Payment date\"\r\n                                        onChange={this.onChangeHandler}\r\n                                        required\r\n                                    />\r\n                                </th>\r\n                                <th></th>\r\n                                </tr>\r\n                                <tr className=\"text-left\">\r\n                                    <th >Customer Name</th>\r\n                                    <th >Company name</th>\r\n                                    <th >Amount</th>\r\n                                    <th>Status</th>\r\n                                    <th>Reference Number</th>\r\n                                    <th >Quotation date</th>\r\n                                    <th>Payment date</th>\r\n\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody className=\"text-center\">{tableRows}</tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    {!searching?\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={data.length}\r\n                            paginate={this.paginate}\r\n                        />:null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport cookie from \"react-cookies\";\r\nimport Pagination from \"../Common/Pagination\";\r\n\r\nimport PresaleServices from '../Services/Api/Api';\r\nimport {Button} from \"antd\";\r\nimport { EditOutlined } from '@ant-design/icons';\r\nexport default class Users extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let loggedIn = null;\r\n        this.state = {\r\n            loggedIn,\r\n            data: [],\r\n            filtered: [],\r\n            searched: [],\r\n            currentPage: 1,\r\n            itemsPerPage: 5,\r\n            searching: false,\r\n            loaded: false\r\n        };\r\n        this.props.setLocation(this.props.history.location.pathname)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        e.preventDefault();\r\n        const {data, searched, itemsPerPage} = this.state;\r\n        const currentPage = 1;\r\n        let value = e.target.value;\r\n        if (e.target.type == \"date\") {\r\n            let temp = value.split(\"-\")\r\n            temp = temp.reverse();\r\n            value = temp.join('/')\r\n        }\r\n        let filtered = [...data];\r\n        let key = e.target.name;\r\n        searched[key] = value;\r\n        for (key in searched) {\r\n            value = searched[key];\r\n            if (value !== \"\") {\r\n                filtered = filtered.filter(el => {\r\n                    const lc = el[key].toLowerCase();\r\n                    const filter = value.toLowerCase();\r\n                    return lc.includes(filter);\r\n                });\r\n            }\r\n        }\r\n        let searchingflag = false;\r\n        for (key in searched) {\r\n\r\n            value = searched[key];\r\n            if (value !== \"\")\r\n                searchingflag = true\r\n        }\r\n        if (!searchingflag) {\r\n            const indexOfLastItem = currentPage * itemsPerPage;\r\n            const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n            this.setState({\r\n                filtered: filtered.slice(\r\n                    indexOfFirstItem, indexOfLastItem\r\n                ),\r\n                searched: searched,\r\n                searching: false\r\n            });\r\n        } else\r\n            this.setState({\r\n                filtered: filtered,\r\n                searched: searched,\r\n                searching: true\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        PresaleServices.getUsers()\r\n            .then(res => {\r\n\r\n                const {currentPage, itemsPerPage} = this.state;\r\n                const indexOfLastItem = currentPage * itemsPerPage;\r\n                const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n                let currentFiltered;\r\n                let data = res.data\r\n                this.setState({\r\n                    data\r\n                }, () => {\r\n                    if (data.length) {\r\n                        const temp = [...data];\r\n                        currentFiltered = temp.slice(\r\n                            indexOfFirstItem,\r\n                            indexOfLastItem\r\n                        );\r\n                    } else {\r\n                        currentFiltered = []\r\n                    }\r\n                    this.setState({filtered: currentFiltered, loaded: true});\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    paginate = pageNumber => {\r\n        const {data, itemsPerPage} = this.state;\r\n        const indexOfLastItem = pageNumber * itemsPerPage;\r\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n        const temp = [...data];\r\n        const currentFiltered = temp.slice(indexOfFirstItem, indexOfLastItem);\r\n        this.setState({currentPage: pageNumber, filtered: currentFiltered});\r\n    };\r\n\r\n    addUserPage=()=>{\r\n        this.props.history.push('/AddUser');\r\n    };\r\n\r\n\r\n//editUser bhj\r\n    editUser=(id)=>{\r\n      this.props.history.push(`/EditUser/${id}`)\r\n    };\r\n    render() {\r\n        const { filtered, itemsPerPage, data, searching, loaded} = this.state;\r\n\r\n        const tableRows = filtered.length ? (\r\n            filtered.map((item, index) => {\r\n                return (\r\n                    <tr className=\"text-left\" key={index}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.email}</td>\r\n                        <td>{item.status}</td>\r\n                        <td>{item.role_name}</td>\r\n                        {this.props.canwrite?<td >\r\n                            {/*//<button className=\" btn btn-large green\" > update</button>*/}\r\n                            <EditOutlined onClick={()=>this.editUser(item.id)} />\r\n                        </td>:null}\r\n\r\n                    </tr>\r\n                );\r\n            })\r\n        ) : (\r\n            loaded ? <tr>\r\n                <td className=\"float-left\">\r\n                    <p className=\"text-danger float-left\">No record found</p>\r\n                </td>\r\n            </tr> : null\r\n        );\r\n        return (\r\n            <div>\r\n\r\n\r\n                <div className=\"content search-table-wrapper\"\r\n                     id=\"main-content\"\r\n                     style={{clear: \"both\", width: \"90%\", marginLeft: \"8%\"}}\r\n                >\r\n                    <div className=\"container-fluid mt-5\">\r\n                        <div className=\"row\">\r\n\r\n                                <div className=\" col-md-12 card\">\r\n                                    <div className=\"card-body text-capitalize font-weight-bolder text-dark w-100\">\r\n                                        <h4 className=\"d-inline-block\">Users</h4>\r\n                                        {this.props.canwrite?\r\n                                        <span className=\"float-right\">\r\n                                            <Button  onClick={this.addUserPage} className=\"ant-btn ant-btn-primary w-100 \"> Add User</Button>\r\n                                        </span>:null}\r\n                                    </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card mt-3\">\r\n                        <div className=\"card-header text-bolder\">\r\n                            <h4 className=\"font-weight-bold mb-0\">Manage Users</h4>\r\n                        </div>\r\n                        {\r\n                            <div className=\"float-right\">\r\n                                {/*<AddUser addData={this.addHandler}/>*/}\r\n                            </div>\r\n\r\n                        }\r\n\r\n                        <div class=\"card-body\">\r\n                            <table class=\"table \">\r\n                                <thead>\r\n                                <tr>\r\n\r\n                                    <th>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Name\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n\r\n                                        />\r\n                                    </th>\r\n\r\n                                    <th width=\"170px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            placeholder=\"Email\"\r\n                                            name=\"email\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n\r\n                                        />\r\n                                    </th>\r\n                                    <th width=\"180px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"status\"\r\n                                            placeholder=\"Status\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                    <th width=\"180px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"role_name\"\r\n                                            placeholder=\"User Role\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                                <tr className=\"text-left\">\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Status</th>\r\n                                    <th>User Role</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody className=\"text-center\">{tableRows}</tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    {!searching ?\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={data.length}\r\n                            paginate={this.paginate}\r\n                        /> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport Pagination from \"../Common/Pagination\";\r\nimport {Redirect, Link} from 'react-router-dom'\r\nimport PresaleServices from '../Services/Api/Api';\r\n\r\n\r\nexport default class Discount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let loggedIn = null;\r\n        this.state = {\r\n            loggedIn,\r\n            data: [],\r\n            filtered: [],\r\n            searched: [],\r\n            currentPage: 1,\r\n            itemsPerPage: 5,\r\n            searching:false,\r\n            loaded:false\r\n        };\r\n        this.props.setLocation(this.props.history.location.pathname)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        e.preventDefault();\r\n        const {data, searched,itemsPerPage} = this.state;\r\n        const currentPage=1;\r\n        let value = e.target.value;\r\n        if(e.target.type==\"date\"){\r\n            let temp=value.split(\"-\")\r\n            temp=temp.reverse();\r\n            value=temp.join('/')\r\n        }\r\n        let filtered = [...data];\r\n        let key = e.target.name;\r\n        searched[key] = value;\r\n        for (key in searched) {\r\n            value = searched[key];\r\n            if (value !== \"\") {\r\n                filtered = filtered.filter(el => {\r\n                    const lc = el[key].toLowerCase();\r\n                    const filter = value.toLowerCase();\r\n                    return lc.includes(filter);\r\n                });\r\n            }\r\n        }\r\n        let searchingflag=false;\r\n        for (key in searched){\r\n\r\n            value=searched[key];\r\n            if(value!==\"\")\r\n                searchingflag=true\r\n        }\r\n        if(!searchingflag){\r\n            const indexOfLastItem = currentPage * itemsPerPage;\r\n            const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n            this.setState({\r\n                filtered: filtered.slice(\r\n                    indexOfFirstItem, indexOfLastItem\r\n                ),\r\n                searched: searched,\r\n                searching:false\r\n            });\r\n        }\r\n        else\r\n            this.setState({\r\n                filtered: filtered,\r\n                searched: searched,\r\n                searching:true\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        PresaleServices.getPayments()\r\n            .then(res =>  {\r\n\r\n                const { currentPage, itemsPerPage} = this.state;\r\n                const indexOfLastItem = currentPage * itemsPerPage;\r\n                const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n                let currentFiltered;\r\n                let data=res.data\r\n                this.setState({\r\n                    data\r\n                },()=>{\r\n                    if(data.length){\r\n                        const temp = [...data];\r\n                        currentFiltered = temp.slice(\r\n                            indexOfFirstItem,\r\n                            indexOfLastItem\r\n                        );}\r\n                    else {\r\n                        currentFiltered=[]\r\n                    }\r\n                    this.setState({filtered: currentFiltered,loaded:true});\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    paginate = pageNumber => {\r\n        const {data,itemsPerPage} = this.state;\r\n        const indexOfLastItem = pageNumber * itemsPerPage;\r\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n        const temp = [...data];\r\n        const currentFiltered = temp.slice(indexOfFirstItem, indexOfLastItem);\r\n        this.setState({currentPage: pageNumber, filtered: currentFiltered});\r\n    };\r\n\r\n\r\n    render() {\r\n        const {filtered, itemsPerPage, data,searching,loaded} = this.state;\r\n\r\n        const tableRows = filtered.length ? (\r\n            filtered.map((item, index) => {\r\n                return (\r\n                    <tr className=\"text-left\" key={index}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.company_name}</td>\r\n                        <td>{item.reference_no}</td>\r\n                        <td>{item.amount}</td>\r\n                        <td>{item.quoted_date}</td>\r\n                        <td>{item.payment_date}</td>\r\n                        <td style={{textAlign: \"center\"}}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3\">\r\n                                    {//<EditUser item={item} editData={this.editHandler}/>\r\n                                    }</div>\r\n\r\n                            </div>\r\n                        </td>\r\n\r\n                    </tr>\r\n                );\r\n            })\r\n        ) : (\r\n            loaded?<tr>\r\n                <td className=\"float-left\">\r\n                    <p className=\"text-danger float-left\">No record found</p>\r\n                </td>\r\n            </tr>:null\r\n        );\r\n        return (\r\n            <div>\r\n                <div className=\"content search-table-wrapper\"\r\n                     id=\"main-content\"\r\n                     style={{clear: \"both\", width: \"90%\", marginLeft: \"8%\"}}\r\n                >\r\n                    <div class=\"card mt-3\">\r\n                        <div class=\"card-header text-bolder\">\r\n                            <h4 className=\"font-weight-bold mb-0\">Manage Payments</h4>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <table class=\"table \">\r\n                                <thead>\r\n                                {/*                 <tr className=\"text-left\">\r\n                                <th >Customer Name</th>\r\n                                <th >Company Name</th>\r\n                                <th >Reference Number</th>\r\n                                <th >Amount</th>\r\n                                <th >Quotation date</th>\r\n\r\n                            </tr>*/}\r\n                                <tr>\r\n\r\n                                    <th>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Customer Name\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n\r\n                                        />\r\n                                    </th>\r\n\r\n                                    <th  >\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            placeholder=\"Company Name\"\r\n                                            name=\"company_name\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n\r\n                                        />\r\n                                    </th>\r\n                                    <th >\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"reference_no\"\r\n                                            placeholder=\"Reference Number\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                    <th >\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"amount\"\r\n                                            placeholder=\"Amount\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                    <th  >\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"quoted_date\"\r\n                                            placeholder=\"Quotation date\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                    <th >\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"payment_date\"\r\n                                            placeholder=\"payment_date\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                </tr>\r\n                                <tr className=\"text-left\">\r\n                                    <th >Customer Name</th>\r\n                                    <th >Company Name</th>\r\n                                    <th >Reference Number</th>\r\n                                    <th>Amount</th>\r\n                                    <th>Quotation Date</th>\r\n                                    <th>Payment Date</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody className=\"text-center\">{tableRows}</tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    {!searching?\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={data.length}\r\n                            paginate={this.paginate}\r\n                        />:null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport Pagination from \"../Common/Pagination\";\r\n\r\nimport PresaleServices from '../Services/Api/Api';\r\nimport {EyeOutlined, FormOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nexport default class Discount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let loggedIn = null;\r\n\r\n        this.state = {\r\n            loggedIn,\r\n            data: [],\r\n            filtered: [],\r\n            searched: [],\r\n            currentPage: 1,\r\n            itemsPerPage: 5,\r\n            searching:false,\r\n            loaded:false\r\n        };\r\n        this.props.setLocation(this.props.history.location.pathname)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        e.preventDefault();\r\n        const {data, searched,itemsPerPage} = this.state;\r\n        const currentPage=1;\r\n        let value = e.target.value;\r\n        if(e.target.type===\"date\"){\r\n            let temp=value.split(\"-\")\r\n            temp=temp.reverse();\r\n            value=temp.join('/')\r\n        }\r\n        let filtered = [...data];\r\n        let key = e.target.name;\r\n        searched[key] = value;\r\n        for (key in searched) {\r\n            value = searched[key];\r\n            if (value !== \"\") {\r\n                filtered = filtered.filter(el => {\r\n                    const lc = el[key].toLowerCase();\r\n\r\n                    const filter = value.toLowerCase();\r\n                    return lc.includes(filter);\r\n                });\r\n            }\r\n        }\r\n        let searchingflag=false;\r\n        for (key in searched){\r\n\r\n            value=searched[key];\r\n            if(value!==\"\")\r\n                searchingflag=true\r\n        }\r\n        if(!searchingflag){\r\n            const indexOfLastItem = currentPage * itemsPerPage;\r\n            const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n            this.setState({\r\n                filtered: filtered.slice(\r\n                    indexOfFirstItem, indexOfLastItem\r\n                ),\r\n                searched: searched,\r\n                searching:false\r\n            });\r\n        }\r\n        else\r\n            this.setState({\r\n                filtered: filtered,\r\n                searched: searched,\r\n                searching:true\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        PresaleServices.getDiscounts()\r\n            .then(res =>  {\r\n\r\n                const { currentPage, itemsPerPage} = this.state;\r\n                const indexOfLastItem = currentPage * itemsPerPage;\r\n                const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n                let currentFiltered;\r\n                let data=res.data\r\n                this.setState({\r\n                    data\r\n                },()=>{\r\n                    if(data.length){\r\n                        const temp = [...data];\r\n                        currentFiltered = temp.slice(\r\n                            indexOfFirstItem,\r\n                            indexOfLastItem\r\n                        );}\r\n                    else {\r\n                        currentFiltered=[]\r\n                    }\r\n                    this.setState({filtered: currentFiltered,loaded:true});\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    paginate = pageNumber => {\r\n        const {data,itemsPerPage} = this.state;\r\n        const indexOfLastItem = pageNumber * itemsPerPage;\r\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n        const temp = [...data];\r\n        const currentFiltered = temp.slice(indexOfFirstItem, indexOfLastItem);\r\n        this.setState({currentPage: pageNumber, filtered: currentFiltered});\r\n    };\r\n    editQuotation=reference_no=>{\r\n        this.props.history.push(`/Edit/${reference_no}/discount`)\r\n    };\r\n\r\n\r\n    render() {\r\n        const {filtered, itemsPerPage, data,searching,loaded} = this.state;\r\n\r\n        const tableRows = filtered.length ? (\r\n            filtered.map((item, index) => {\r\n                return (\r\n                    <tr className=\"text-left\" key={index}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.company_name}</td>\r\n                        <td>{item.reference_no}</td>\r\n                        <td>{item.amount}</td>\r\n                        <td>{item.quoted_date}</td>\r\n                        <td>{item.status}</td>\r\n                        {\r\n                            this.props.canWrite?<td>{\r\n                                    item.status!==\"Paid\"? <FormOutlined onClick={() => this.editQuotation(item.reference_no)}/>\r\n                                        : <EyeOutlined onClick={() => this.props.history.push(`/View/${item.reference_no}/discount`)} />\r\n                                }\r\n                                </td>\r\n                                :null}\r\n\r\n                    </tr>\r\n                );\r\n            })\r\n        ) : (\r\n            loaded?<tr>\r\n                <td className=\"float-left\">\r\n                    <p className=\"text-danger float-left\">No record found</p>\r\n                </td>\r\n            </tr>:null\r\n        );\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"content search-table-wrapper\"\r\n                     id=\"main-content\"\r\n                     style={{clear: \"both\", width: \"90%\", marginLeft: \"8%\"}}\r\n                >\r\n                    <div className=\"card mt-3\">\r\n                        <div className=\"card-header text-bolder\">\r\n                            <h4 className=\"font-weight-bold mb-0\">Manage Discount</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <table className=\"table \">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Customer Name\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n\r\n                                        />\r\n                                    </th>\r\n\r\n                                    <th width=\"170px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            placeholder=\"Company Name\"\r\n                                            name=\"company_name\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n\r\n                                        />\r\n                                    </th>\r\n                                    <th width=\"180px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"reference_no\"\r\n                                            placeholder=\"Reference Number\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                    <th width=\"180px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"amount\"\r\n                                            placeholder=\"Amount\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n\r\n                                    <th width=\"180px\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"quoted_date\"\r\n                                            placeholder=\"Quotation date\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                    <th width=\"180px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"status\"\r\n                                            placeholder=\"Status\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                </tr>\r\n                                <tr className=\"text-left\">\r\n                                    <th >Customer Name</th>\r\n                                    <th >Company Name</th>\r\n                                    <th >Reference Number</th>\r\n                                    <th>Amount</th>\r\n                                    <th>Payment Date</th>\r\n                                    <th>Status</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody className=\"text-center\">{tableRows}</tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n                    {!searching?\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={data.length}\r\n                            paginate={this.paginate}\r\n                        />:null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {Avatar, Menu} from 'antd';\r\nimport {Link, Redirect} from 'react-router-dom'\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\n\r\nclass RightMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let loggedIn = true;\r\n        this.state = {\r\n            loggedIn,\r\n            name:this.props.name\r\n        };\r\n\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.state.name!==this.props.name)\r\n            this.setState({name:this.props.name})\r\n    }\r\n\r\n    remove = () => {\r\n        this.setState({\r\n            loggedIn:false\r\n        })\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        const {loggedIn, name} = this.state\r\n        if (!loggedIn)\r\n            return <Redirect to='/logout'/>;\r\n        return (\r\n            <Menu mode=\"horizontal\">\r\n                <SubMenu\r\n                    title={\r\n                        <span className=\"submenu-title-wrapper\">\r\n                            <div className=\"customer-name\">\r\n                                {name}\r\n                                <br/><a href=\"javascript:void(0)\">View Profile</a>\r\n                    </div>\r\n\r\n\r\n            </span>\r\n                    }\r\n                >\r\n                    <Menu.ItemGroup>\r\n                        <Menu.Item key=\"setting:1\">\r\n                            <Link to={'/EditProfile'}> Edit Profile\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"setting:2\">\r\n                            <a onClick={this.remove}> LogOut</a>\r\n                        </Menu.Item>\r\n                    </Menu.ItemGroup>\r\n                </SubMenu>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RightMenu;","import React, {Component} from 'react'\r\nimport 'antd/dist/antd.css'\r\nimport socketio from 'socket.io-client';\r\nimport Echo from \"laravel-echo\";\r\nimport axios from 'axios'\r\nimport {Modal,Button} from \"antd\";\r\nimport {withRouter} from \"react-router\"\r\nimport mp3_file from './tune.mp3';\r\nimport PresaleServices from \"../Services/Api/Api\";\r\nclass UserStatus extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myId: this.props.id,\r\n            callVisible: false,\r\n            options: {\r\n                client: socketio,\r\n                broadcaster: 'socket.io',\r\n                host: window.location.hostname + ':5555', // this is laravel-echo-server host\r\n                forceTLS: true,\r\n                encrypted: false,\r\n                //authEndpoint is your apiUrl + /broadcasting/auth\r\n                authEndpoint: \"/broadcasting/auth\",\r\n                // As I'm using JWT tokens, I need to manually set up the headers.\r\n                auth: {\r\n                    headers: {\r\n                        'Authorization': \"Bearer \" + this.props.token,\r\n                        Accept: \"application/json\"\r\n                    }\r\n                }\r\n            }, api: {\r\n                Authorization: \"Bearer \" + this.props.token\r\n            },\r\n            callFrom: '',\r\n            redirect: false,\r\n            audio : new Audio(mp3_file),\r\n            btnLoading:false\r\n        }\r\n        this.state.audio.loop = true;\r\n    }\r\n\r\n    handleOk = e => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            callVisible: false\r\n        });\r\n        // return  <a href={'/video'}/>\r\n    };\r\n\r\n    calling = () => {\r\n        const {api, room,audio} = this.state;\r\n        this.setState({\r\n            btnLoading:true\r\n        })\r\n        axios.put('/dashboard/api/acceptcall/' + room, null, {headers: api})\r\n            .then(\r\n\r\n            () => {\r\n                this.setState({\r\n                    callVisible: false,\r\n                    btnLoading:false\r\n\r\n                })\r\n\r\n                if(!this.state.window||this.state.window.closed) {\r\n                    if(this.state.callFrom){\r\n                    let url = \"/dashboard/#/openvideo/\" + this.state.room + \"/\" + this.state.callFrom\r\n                    const iframe = '<html><body style=\"margin:0\" class=\"iframe-body\"><iframe width=\"100%\" height=\"100%\" frameborder=\"none\" src=\"' + url + '\" ></iframe></body></html>';\r\n                    const win = window.open(\"\", \"\", \"width=900px,height=900px,toolbar=no,menubar=no,resizable=yes\");\r\n                    let timer = setInterval(function () {\r\n                        if (win.closed) {\r\n                            clearInterval(timer);\r\n                            console.log(\"popup closed\")\r\n                        }\r\n                    }, 1000);\r\n                    win.document.write(iframe);\r\n                    this.setState({\r\n                        window: win\r\n                    })\r\n                    audio.pause()\r\n                    audio.currentTime = 0;\r\n                }}\r\n            })\r\n    }\r\n\r\n\r\n    handleCancel = () => {\r\n\r\n        const {api, room,audio} = this.state\r\n        axios.put('/dashboard/api/rejectcall/' + room, null, {headers: api}).then(\r\n            () => {\r\n                this.setState({\r\n                    callVisible: false,\r\n                    btnLoading:false\r\n\r\n                }, () => {\r\n                    audio.pause()\r\n                    audio.currentTime = 0;\r\n\r\n                })\r\n            })\r\n    };\r\n    push = () => {\r\n        this.setState({\r\n            callVisible: false\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        const echo = new Echo(this.state.options);\r\n        const {api} = this.state\r\n        const {myId} = this.state;\r\n        if (myId !== -1) {\r\n            echo.private('startchat.' + myId)\r\n                .listen('TestEvent', e => {\r\n\r\n                    this.setState({\r\n                        room: e.room,\r\n                        callFrom: e.name\r\n                    })\r\n                }).on('error', (e) => {\r\n                console.log(\"error:\")\r\n                console.error(e)\r\n            });\r\n        }\r\n        echo.join(\"chat\").joining((user) => {\r\n\r\n            axios.put('/dashboard/api/user/' + user.id + '/online', null, {headers: api});\r\n\r\n        })\r\n            .leaving((user) => {\r\n                axios.put('/dashboard/api/user/' + user.id + '/offline', null, {headers: api});\r\n\r\n            })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.id !== this.props.id && this.props.id !== -1) {\r\n            const echo = new Echo(this.state.options);\r\n            const myId = this.props.id;\r\n            const {audio}=this.state\r\n            echo.private('startchat.' + myId)\r\n                .listen('TestEvent', e => {\r\n                PresaleServices.getName().then(\r\n\r\n                    this.setState({\r\n                        callVisible: true,\r\n                        callFrom: e.name,\r\n                        room: e.vcall.room\r\n                    },()=> audio.play())\r\n\r\n                )\r\n\r\n                }\r\n\r\n                ).listen('EndCall', e => {\r\n\r\n                this.setState({\r\n                    callVisible: false,\r\n                })\r\n                audio.pause()\r\n                audio.currentTime = 0;\r\n            })\r\n                .on('error', (e) => {\r\n                    console.log(\"error:\")\r\n                    console.error(e)\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\nconst {btnLoading}=this.state;\r\n        return <div>\r\n\r\n            <Modal\r\n                title=\"Video Call From...\"\r\n                visible={this.state.callVisible}\r\n                onOk={this.handleOk}\r\n                onCancel={this.handleCancel}\r\n                footer={null}\r\n            >\r\n\r\n\r\n\r\n                <div className=\"text-center\">\r\n                    <h4 className=\"text-center\">{this.state.callFrom}</h4>\r\n                    {/*  <p onClick={this.push}>\r\n                        <Link  to={'/video'} > Video Call</Link></p>*/}\r\n                    <Button loading={btnLoading} href=\"javascript:void(0)\" onClick={this.calling} className=\"ant-btn  ant-btn-primary m-2\">Accept\r\n                        Call</Button>\r\n                    <a href=\"javascript:void(0)\" onClick={this.handleCancel}\r\n                       className=\"ant-btn ant-btn-primary ant-btn-gray m-2\">Cancel Call</a>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}\r\n;\r\nexport default withRouter(UserStatus)\r\n","import \"antd/dist/antd.css\";\r\n\r\nimport React, {Component} from 'react';\r\nimport '../Main/style.scss'\r\nimport RightMenu from './RightMenu'\r\nimport {Link} from \"react-router-dom\"\r\nimport {Button, Drawer} from 'antd';\r\nimport UserStatus from \"../Common/UserStatus\";\r\n\r\nclass Navbarz extends Component {\r\n    state = {\r\n        current: 'mail',\r\n        visible: false,\r\n        callVisible: false\r\n    };\r\n    showModal = () => {\r\n        this.setState({\r\n            callVisible: true\r\n        });\r\n    };\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n            name:\"\"\r\n        });\r\n    };\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.state.name!==this.props.name)\r\n            this.setState({name:this.props.name})\r\n    }\r\n    handleOk = e => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            callVisible: false\r\n        });\r\n    // return  <a href={'/video'}/>\r\n    };\r\n\r\n    handleCancel = e => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            callVisible: false\r\n        });\r\n    };\r\npush=()=>{\r\n        this.setState({\r\n            callVisible: false\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <nav className=\"menuBar\">\r\n                <div className=\"logo\">\r\n                    <Link to={'/'}><img src=\"images/logo.png\" alt=\"image\"/> </Link>\r\n                </div>\r\n                <div className=\"menuCon\">\r\n                    <div className=\"leftMenu\">\r\n                        <UserStatus token={this.props.token} id={this.props.id}\r\n                        history={this.props.history}\r\n                        />\r\n                    </div>\r\n                    <div className=\"rightMenu\">\r\n                        <RightMenu name={this.props.name} />\r\n                    </div>\r\n                    <Button className=\"barsMenu\" type=\"primary\" onClick={this.showDrawer}>\r\n                        <span className=\"barsBtn\"></span>\r\n                    </Button>\r\n                    <Drawer\r\n                        placement=\"right\"\r\n                        closable={false}\r\n                        onClose={this.onClose}\r\n                        visible={this.state.visible}\r\n                    >\r\n\r\n                        <RightMenu name={this.state.name} />\r\n                    </Drawer>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbarz;","import React, {Component} from 'react';\r\nimport {Menu} from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Signin extends Component {\r\n    render() {\r\n        return (\r\n            <Menu mode=\"horizontal\">\r\n                <Menu mode=\"horizontal\">\r\n                    <Menu.Item key=\"mail\">\r\n                        <Link to={'/'}>Login</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"app\">\r\n                        <Link  to={'/forget'}>Forgot Password?</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin;","import '../Main/style.scss'\r\n\r\nimport React, {Component} from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport Signin from './Signin'\r\nimport {Link} from \"react-router-dom\"\r\nimport {Button, Drawer} from 'antd';\r\n\r\n\r\nclass Navbarz extends Component {\r\n    state = {\r\n        current: 'mail',\r\n        visible: false,\r\n        collapsed:this.props.collapsed\r\n    };\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <nav className=\"menuBar\">\r\n\r\n                <div className=\"logo\">\r\n                    <Link to={'/Main'}><img src=\"images/logo.png\" alt=\"image\"/> </Link>\r\n                </div>\r\n                <div className=\"menuCon\">\r\n                    <div className=\"leftMenu\">\r\n                        {null}\r\n                    </div>\r\n                    <div className=\"rightMenu\">\r\n                       <Signin/>\r\n                    </div>\r\n                    <Button className=\"barsMenu\" type=\"primary\" onClick={this.showDrawer}>\r\n                        <span className=\"barsBtn\"></span>\r\n                    </Button>\r\n                    <Drawer\r\n                        title=\"Basic Drawer\"\r\n                        placement=\"right\"\r\n                        closable={false}\r\n                        onClose={this.onClose}\r\n                        visible={this.state.visible}\r\n                    >\r\n\r\n                        <Signin/>\r\n                    </Drawer>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbarz;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport cookie from \"react-cookies\";\r\nimport { Card, message} from \"antd\";\r\nimport PresaleServices from '../Services/Api/Api'\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            setToken: this.props.setToken,\r\n            token:cookie.load('admin_token')\r\n        };\r\n\r\n    }\r\ncomponentDidMount() {\r\n        const {token}=this.state\r\nif(token!==undefined&&token!==\"\"){\r\n    console.log(this.props.history.location.pathname,\"path\")\r\n    if(!(this.props.history.location.pathname.includes('Login')))\r\n        window.location.reload()\r\n    else\r\n        this.props.history.push(\"/Main\")\r\n        this.props.setToken(token)\r\n}\r\n}\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    onInput=e=>{\r\n        if(e.target.type===\"email\")\r\n        {\r\n            // if(!e.target.value.toLowerCase().includes('vaporvm')){\r\n            //     message.error(\"Please enter valid credentials to login\");\r\n            // }\r\n        }\r\n    }\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const {email, password,} = this.state;\r\n        if (email !== \"\" && password !== \"\") {\r\n            if(!email.toLowerCase().includes('vaporvm')){\r\n            message.error(\"Please enter valid credentials to login\");\r\n                this.setState({loading: false});\r\n            }else{\r\n            PresaleServices.login(this.state)\r\n                .then(res => {\r\n                    if (res&&res.api_key) {\r\n                        cookie.save(\"admin_token\", res.api_key, {\r\n                            path: \"/\",\r\n                            maxAge: 5 * 3600\r\n                        });\r\n                        this.setState({loading: false});\r\n                        this.state.setToken(res.api_key);\r\n                        if(!(this.props.history.location.pathname.includes('Login')))\r\n                            window.location.reload()\r\n                        else\r\n                            this.props.history.push(\"/Main\")\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    if(err.toString().includes(401)){\r\n                        message.error(\"User is Inactive\");\r\n\r\n                    }\r\n                    else\r\n                    message.error(\"Please enter valid credentials to login\");\r\n                    this.setState({loading: false});\r\n                })\r\n        }\r\n        }\r\n        else{\r\n            message.error(\"Please enter valid credentials to login\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const {email, password, loading} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"container login-wrapper mt-5\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-5\">\r\n                            <Card loading={loading} className=\"card mt-3\">\r\n                                <div className=\"card-header\"><h2 className=\"text-center\">Login to your account</h2>\r\n                                </div>\r\n                                <form className=\"was-validated mx-4 my-4\">\r\n                                    <div className=\"form-group\">\r\n\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Email\"\r\n                                            name=\"email\"\r\n                                            required\r\n                                            onChange={this.onChange}\r\n                                            value={email}\r\n                                            pattern=\"^[a-zA-Z]+.*@[A-Za-z]+([.][a-zA-Z]+)+$\"\r\n                                            onBlur={this.onInput}\r\n                                        />\r\n                                        <div className=\"valid-feedback\"></div>\r\n                                        <div className=\"invalid-feedback\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter password\"\r\n                                            name=\"password\"\r\n                                            required\r\n                                            onChange={this.onChange}\r\n                                            value={password}\r\n                                            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$\"\r\n                                        />\r\n                                    </div>\r\n                                    {/*<Link*/}\r\n                                    {/*    className=\"forgot my-2 text-success fade-in float-right\"*/}\r\n                                    {/*    to=\"/Forget\"*/}\r\n                                    {/*>*/}\r\n                                    {/*    Forgot Password?*/}\r\n                                    {/*</Link>*/}\r\n                                    <button type=\"submit\" className=\" ant-btn ant-btn-primary btn-success btn-block \"\r\n                                            onClick={this.onSubmit}>\r\n                                        Login\r\n                                    </button>\r\n\r\n                                </form>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React, {Component} from 'react';\r\n\r\nimport {Card} from 'antd';\r\n\r\nconst data = [\r\n    {\r\n        title: \"Title 1\"\r\n    },\r\n    {\r\n        title: \"Title 2\"\r\n    },\r\n    {\r\n        title: \"Title 3\"\r\n    },\r\n\r\n];\r\n\r\nclass Progress extends Component {\r\n\r\n    render() {\r\n        const {progress,total,complete,loading}=this.props;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <Card loading={loading}>\r\n                        <img src=\"images/in-progress.png\" alt=\"Projects In-Progress\"/>\r\n                        <div className=\"summary-info\">\r\n                            <p>Projects In-progress</p>\r\n                            <h2 className=\"blue-text\">{progress}</h2>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Card loading={loading}>\r\n                        <img src=\"images/completed.png\" alt=\"Project Completed\"/>\r\n                        <div className=\"summary-info\">\r\n                            <p>Completed Tasks</p>\r\n                            <h2 className=\"green-text\">{complete}</h2>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <Card loading={loading}>\r\n                        <img src=\"images/task-inprogress.png\" alt=\"Tasks Progress\"/>\r\n                        <div className=\"summary-info\">\r\n                            <p>Tasks In-Progress</p>\r\n                            <h2 className=\"yellow-text\">{total}</h2>\r\n                        </div>\r\n\r\n                    </Card>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Progress\r\n","import React, {Component} from 'react';\r\nimport {Card, Collapse, Progress, Spin, Upload, message} from \"antd\";\r\nimport {UploadOutlined} from '@ant-design/icons'\r\nimport PresaleServices from '../Services/Api/Api'\r\nimport cookie from \"react-cookies\";\r\nimport {DownCircleOutlined, UpCircleOutlined} from '@ant-design/icons';\r\nimport AssignedAdmin from  './AssignedAdmin'\r\nconst {Panel} = Collapse;\r\n\r\nconst props = {\r\n    name: 'file',\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    headers: {\r\n        Authorization: cookie.load('admin_token')\r\n    },\r\n\r\n};\r\nconst GenExtra = (props) => (\r\n    !props.collapsed ?\r\n        <DownCircleOutlined style={{fontSize: '23px', color: '#b1c63d'}}\r\n        /> :\r\n        <UpCircleOutlined style={{fontSize: '23px', color: '#b1c63d'}}\r\n        />\r\n);\r\nconst MyProject = (props) => {\r\n\r\n    return <div>{\r\n        props.data && props.data.map(e => {\r\n            return <div>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                {e.name}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        })\r\n    }</div>\r\n}\r\nconst ProjectComp = (props) => {\r\n\r\n    const canWrite = props.canWrite;\r\n    const history = props.history;\r\n    const token = props.token\r\n    return <div>{\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        {props.name}\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <div className=\"small\">Expected Completion Date</div>\r\n                        {props.due_date}\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <div className=\"small\">Progress</div>\r\n                        {props.percentage !== \"\" ?\r\n                            <Progress strokeColor={{\r\n                                '0%': '#108ee9',\r\n                                '100%': '#87d068',\r\n                            }} percent={props.percentage}\r\n                                      className=\"m-0 custom-space g\"\r\n                                      status=\"active\"\r\n                            />: null\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"col-md-2\">\r\n                        {props.percentage === 100 ? (\r\n\r\n                            <Upload name={'file'}\r\n                                    action={'/api-gateway/admin/uploadprojectfile/' + props.name}\r\n                                    headers={{\r\n                                        Authorization: token\r\n                                    }}\r\n                                    onChange={props.changeFile}\r\n\r\n                            >\r\n                                <a >\r\n                                    <UploadOutlined/> Upload report\r\n                                </a>\r\n                            </Upload>\r\n                        ) : null\r\n\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        {canWrite ? <a className=\"font-weight-bolder\" style={{color: \"#85c63d\", fontSize: 15}}\r\n                                       onClick={e => {\r\n                                           e.stopPropagation()\r\n                                           history.push(`/Resource/${props.name}`)\r\n                                       }}>\r\n                                Assign Resource\r\n                            </a>\r\n                            : null\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    }</div>\r\n\r\n}\r\n\r\nclass Projects extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            percentage: [],\r\n            projectData: [],\r\n            fetching: false,\r\n            first: true,\r\n            collapsed: [],\r\n            due_date: [],\r\n            users:[],\r\n            loaded:false\r\n        };\r\n\r\n    }\r\n     changeFile=(info) =>{\r\n        if (info.file.status !== 'uploading') {\r\n            console.log(info.file, info.fileList);\r\n        }\r\n        if (info.file.status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n    }\r\n\r\n\r\n    onChange = (key) => {\r\n\r\n        let {collapsed} = this.state\r\n        if (key === undefined) {\r\n            collapsed = []\r\n        } else {\r\n            collapsed = []\r\n            collapsed[key] = true\r\n        }\r\n        this.setState({\r\n            collapsed: collapsed\r\n        })\r\n        if (key !== undefined) {\r\n            this.setState({\r\n                fetching: true\r\n            });\r\n            PresaleServices.getStatusKey(key).then(res => {\r\n\r\n                    const {percentage, due_date} = this.state\r\n                    percentage[key] = res.percentage\r\n                    due_date[key] = res.due_date\r\n\r\n                    this.setState({\r\n                        projectData: res.tasks,\r\n                        users:res.users,\r\n                        fetching: false,\r\n                        percentage: percentage,\r\n                        due_date: due_date,\r\n                        loaded:true\r\n\r\n                    })\r\n\r\n                }\r\n            ).catch(err => console.log(err))\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        let {fetching, projectData, percentage, due_date,users} = this.state;\r\n\r\n        const {loading} = this.props;\r\n        let view = <Collapse\r\n            accordion={true}\r\n            onChange={this.onChange}\r\n\r\n        >\r\n            {\r\n                this.props.data && this.props.data.map((e) => {\r\n\r\n                    return <Panel showArrow={false}\r\n                                  header={<ProjectComp name={e.name} due_date={due_date[e.key] ?\r\n                                      due_date[e.key] : ''\r\n\r\n\r\n                                  } percentage={e.key in percentage ?\r\n                                      percentage[e.key] : ''}\r\n                                                       canWrite={this.props.canWrite}\r\n                                                       history={this.props.history}\r\n                                                       changeFile={this.changeFile}\r\n                                                       token={this.props.token}\r\n\r\n                                  />\r\n                                  }\r\n                                  key={e.key} extra={<GenExtra collapsed={e.key in this.state.collapsed}/>}>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                {\r\n                                    fetching ? <Spin size=\"large\" className=\"ml-5\"/> :\r\n                                        <div>\r\n                                            <MyProject data={projectData}\r\n                                            />\r\n                                        </div>\r\n\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                {/*<AssignedAdmin users={users} loaded={this.state.loaded}/>*/}\r\n                            </div>\r\n                        </div>\r\n                    </Panel>\r\n                })\r\n            }\r\n        </Collapse>;\r\n        return (\r\n            <div className=\"row \">\r\n                <div className=\"col-md-12 \">\r\n                    <Card loading={loading}>\r\n                        {view}\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects\r\n","import React, {Component} from 'react'\r\nimport {Spin} from \"antd\";\r\n\r\nclass AssignedAdmin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            users: this.props.users\r\n        }\r\n    }\r\n\r\ncomponentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.users!==this.props.users){\r\n            this.setState({\r\n                users:this.props.users\r\n            })\r\n        }\r\n}\r\n\r\n    render() {\r\n\r\n        const {users,} = this.state;\r\n        let myUser = users&&users.length ? users.map(e => {\r\n            return <div className=\"user-info\">\r\n                <div className=\"user-name\">{e.name}</div>\r\n\r\n\r\n            </div>\r\n        }) : <p>No admin is assigned</p>;\r\n        const v = (this.props.loaded?\r\n            <div className=\"user-status-wrapper\"> {myUser}\r\n            </div>:<Spin size={\"large\"}/>\r\n        )\r\n\r\n\r\n        return v\r\n\r\n    };\r\n}\r\n\r\nexport default AssignedAdmin\r\n","import React, {Component} from 'react';\r\nimport Progress from \"./Progress\";\r\n\r\nimport PresaleServices from '../Services/Api/Api'\r\nimport {Redirect} from 'react-router-dom'\r\nimport './style.scss'\r\nimport Projects from './Projects'\r\nimport Pagination from \"../Common/Pagination\";\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let loggedIn = null;\r\n        this.state = {\r\n            loggedIn,\r\n            data: [],\r\n            loading: true,\r\n            taskInProgress: null,\r\n            taskComplete: null,\r\n            ProjectComplete: null,\r\n            name: this.props.name,\r\n            company_name: this.props.company_name,\r\n            token:this.props.token,\r\n            project_data:[],\r\n            filtered:[],\r\n            searched:[],\r\n            searching:false,\r\n            itemsPerPage:5,\r\n            currentPage: 1,\r\n        };\r\n\r\n        if(this.state.token!==\"\"&&this.state.token!==undefined) {\r\n            this.state.loggedIn = true;\r\n        }\r\n\r\n        this.props.setLocation(this.props.history.location.pathname)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.name !== this.state.name || this.props.company_name !== this.state.company_name) {\r\n            this.setState({\r\n                name: this.props.name,\r\n                company_name: this.props.company_name\r\n            })\r\n\r\n        }\r\n    }\r\n    onChangeHandler = e => {\r\n        e.preventDefault();\r\n\r\n        const {data, searched,itemsPerPage,project_data} = this.state;\r\n        const currentPage=1;\r\n        let value = e.target.value;\r\n        if(e.target.type===\"date\"){\r\n            let temp=value.split(\"-\")\r\n            temp=temp.reverse();\r\n            value=temp.join('/')\r\n        }\r\n        let filtered = [...project_data];\r\n        let key = e.target.name;\r\n        searched[key] = value;\r\n        for (key in searched) {\r\n            value = searched[key];\r\n            if (value !== \"\") {\r\n                filtered = filtered.filter(el => {\r\n                    const lc = el[key].toLowerCase();\r\n                    const filter = value.toLowerCase();\r\n                    return lc.includes(filter);\r\n                });\r\n            }\r\n        }\r\n        let searchingflag=false;\r\n        for (key in searched){\r\n\r\n            value=searched[key];\r\n            if(value!==\"\")\r\n                searchingflag=true\r\n        }\r\n        if(!searchingflag){\r\n            const indexOfLastItem = currentPage * itemsPerPage;\r\n            const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n            this.setState({\r\n                filtered: filtered.slice(\r\n                    indexOfFirstItem, indexOfLastItem\r\n                ),\r\n                searched: searched,\r\n                searching:false\r\n            });\r\n        }\r\n        else\r\n            this.setState({\r\n                filtered: filtered,\r\n                searched: searched,\r\n                searching:true\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { currentPage, itemsPerPage} = this.state;\r\n        const indexOfLastItem = currentPage * itemsPerPage;\r\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n        let currentFiltered;\r\n        PresaleServices.getProjectStatus()\r\n            .then(response => {\r\n                this.setState({\r\n                    data: response.data,\r\n                    loading: false,\r\n                    project_data:response.data.Project_Data\r\n                },()=>{\r\n                        if(this.state.project_data){\r\n                            const temp = [...this.state.project_data];\r\n                            currentFiltered = temp.slice(\r\n                                indexOfFirstItem,\r\n                                indexOfLastItem\r\n                            );\r\n}\r\n                        else {\r\n                            currentFiltered=[]\r\n                        }\r\n                    this.setState({filtered: currentFiltered});\r\n                })\r\n\r\n            }).catch(err => console.log(err))\r\n\r\n\r\n    }\r\n    paginate = pageNumber => {\r\n        const {project_data,itemsPerPage} = this.state;\r\n        const indexOfLastItem = pageNumber * itemsPerPage;\r\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n        const temp = [...project_data];\r\n        const currentFiltered = temp.slice(indexOfFirstItem, indexOfLastItem);\r\n        this.setState({currentPage: pageNumber, filtered: currentFiltered});\r\n    };\r\n//token\r\n    render() {\r\n        const {loggedIn} = this.state;\r\n        if (loggedIn === false || loggedIn === null) {\r\n            return <Redirect to=\"/\"/>;\r\n        }\r\n        const {data, loading,project_data,searching,itemsPerPage,filtered} = this.state;\r\n        return <div>\r\n            <section className=\"dashboard-section\">\r\n                <div className=\"container mt-4\">\r\n\r\n                    <Progress progress={data.Total_Projects} complete={data.Tasks_Completed}\r\n                              total={data.Tasks_In_Progress} loading={loading}/>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 \">\r\n                            <card className=\"row ant-card ant-card-bordered my-3 p-3\">\r\n                                <div className=\"col-md-4\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mt-2\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Search Project\"\r\n                                        onChange={this.onChangeHandler}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-3 offset-md-5\">\r\n                                    {this.props.canCreateProject?<button className=\"ant-btn ant-btn-primary float-right\" onClick={()=>this.props.history.push('/AddProject')}>\r\n                                      Add Project\r\n                                    </button>:null}\r\n                                </div>\r\n                            </card>\r\n                        </div>\r\n                    </div>\r\n                    <Projects loading={loading} data={filtered}\r\n                              canWrite={this.props.canWrite} history={this.props.history}\r\n                              token={this.props.token}\r\n                    />\r\n                    <div className=\"col-md-12 p-0\">\r\n                        <card className=\"d-block text-center ant-card ant-card-bordered my-3 p-3\">\r\n                    {!searching?\r\n\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={project_data?project_data.length:0}\r\n                            paginate={this.paginate}\r\n                        />:null}\r\n                        </card>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Index\r\n","import React, {Component} from 'react';\r\n\r\nclass EmailVerified extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:this.props.match.params.email,\r\n        };\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"container login-wrapper mt-5\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"card text-center\">\r\n                                <div className=\"card-header\">\r\n                                    <h2 className=\"text-center my-3\">Email Address Verified</h2>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <p>\r\n                                        Thank you for verifying your email address.\r\n                                        Please\r\n                                        <a href=\"javascript:void(0)\"\r\n                                           onClick={()=>this.props.history.push(\"/Login\")}\r\n                                        > Click here </a><br/>\r\n                                        to login\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmailVerified;\r\n","import React, {Component} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport cookie from \"react-cookies\";\r\nimport PresaleServices from '../Services/Api/Api'\r\nimport {message} from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nclass LogOut extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            setToken: this.props.setToken\r\n        };\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        const api = {\r\n            Authorization: \"Bearer \" + this.props.token\r\n\r\n        }\r\n\r\n        axios.put('/dashboard/api/user/' + this.props.id + '/offline', null, {headers: api})\r\n            .then(() => {\r\n                PresaleServices.logOut(this.state)\r\n                    .then(res => {\r\n\r\n                        if (res) {\r\n                            cookie.remove(\"admin_token\", {\r\n                                path: \"/\",\r\n                            });\r\n                            this.setState({loading: false});\r\n                            this.props.setToken(\"\");\r\n                            this.setState({loading: false});\r\n                        }\r\n                    })\r\n                    .catch(() => {\r\n                        message.error(\"Email or password not valid\");\r\n                        this.setState({loading: false});\r\n                    })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <Redirect To={\"/Login\"}/>\r\n    }\r\n}\r\n\r\nexport default LogOut;","import React, {Component} from 'react';\r\n\r\nimport PresaleServices from '../Services/Api/Api'\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport {message} from \"antd\";\r\n\r\nexport default class Forget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n        };\r\n\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        if (!this.state.email.toLowerCase().includes('vaporvm')) {\r\n            message.error(\"this email is not registered with us.\");\r\n            this.setState({loading: false});\r\n        } else {\r\n            PresaleServices.forget(this.state).then(res => {\r\n                this.props.history.push('/Message')\r\n            }).catch(err => {\r\n                message.error(\"this email is not registered with us.\")\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {email} = this.state;\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"container login-wrapper mt-5\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-5\">\r\n                            <div className=\"card mt-3 \">\r\n                                <form className=\"was-validated mx-4 my-4\">\r\n                                    <div className=\"form-group \">\r\n\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            id=\"email\"\r\n                                            placeholder=\"Enter email\"\r\n                                            name=\"email\"\r\n                                            required\r\n                                            onChange={this.onChange}\r\n                                            value={email}\r\n                                            pattern=\"^[a-zA-Z]+.*@[A-Za-z]+([.][a-zA-Z]+)+$\"\r\n                                        />{this.state.email !== \"\" ? <div>\r\n                                        <div className=\"valid-feedback\">Valid.</div>\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Please fill out this field.\r\n                                        </div>\r\n                                    </div> : null}\r\n                                    </div>\r\n                                    <button\r\n                                        value={\"Reset password\"}\r\n                                        onClick={this.onSubmit}\r\n                                        className=\"ant-btn ant-btn-primary w-100 mt-3\"\r\n                                    >\r\n                                        Request Reset link\r\n                                    </button>\r\n                                    <Link\r\n                                        className=\"forgot w-100 text-center m-auto d-block pt-3\"\r\n                                        to=\"/Login\"\r\n                                    >\r\n                                        Back to Login\r\n                                    </Link>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass Message extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"container login-wrapper mt-5\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"card text-center\">\r\n                                <div className=\"card-header\">\r\n                                    <h2 className=\"text-center my-3\">Reset Your Password</h2>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n\r\n                                    <p>We have sent you an email with password reset link. Please check your inbox to reset your password.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Message\r\n\r\n","import React, {Component} from 'react';\r\n\r\n\r\nimport {message} from \"antd\";\r\nimport PresaleServices from '../Services/Api/Api';\r\n\r\nexport default class Reset extends Component {\r\n    state = {\r\n        token: this.props.match.params.token,\r\n        password: \"\",\r\n        password_confirmation: \"\",\r\n        errors: {},\r\n        success: \"\"\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    onInput = e => {\r\n        const password = e.target.value;\r\n        if (!password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\")) {\r\n            message.error(\"password must be 8 characters long and should have at least one capital letter and one digit in it.\")\r\n        }\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.password!==this.state.password_confirmation){\r\n            message.error(\"Password and Confirm Password do not match\")\r\n        }\r\n        else if(this.state.password.length<8){\r\n            message.error(\"Password must be at least 8 characters long with at least one number and one capital letter\")\r\n        }\r\n        else if(!this.state.password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\")){\r\n            message.error(\"Password must be at least 8 characters long with at least one number and one capital letter\")\r\n        }\r\n        else {\r\n            const data = this.state;\r\n            PresaleServices.resetPassword({\r\n                password: data.password,\r\n                repassword: data.password_confirmation\r\n                , token: data.token\r\n            }).then(() => this.props.history.push(\"/ResetLink\")).catch(err =>\r\n                message.error(\"Can't reset password\"))\r\n\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {password_confirmation, password, errors} = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"container login-wrapper mt-5\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-5\">\r\n                            <div className=\"card mt-3\">\r\n                                <form className=\"was-validated mx-4 my-4\" onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Password\"\r\n                                            name=\"password\"\r\n                                            onChange={this.onChange}\r\n                                            value={password}\r\n                                            onBlur={e => this.OnInput(e)}\r\n                                            required\r\n                                        />\r\n                                        <small id=\"passwordHelp\" className=\"form-text text-danger\">\r\n                                            {errors.password}\r\n                                        </small>\r\n                                        <small\r\n                                            id=\"passwordHelp\"\r\n                                            className=\"form-text text-success text-bold\"\r\n                                        >\r\n                                            {this.state.success}\r\n                                        </small>\r\n                                        {/*<div className=\"valid-feedback\">{this.state.success}</div>*/}\r\n                                        {/*<div className=\"invalid-feedback\">*/}\r\n                                        {/*    {errors.password}*/}\r\n                                        {/*</div>*/}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Confirm password\"\r\n                                            name=\"password_confirmation\"\r\n                                            onChange={this.onChange}\r\n                                            value={password_confirmation}\r\n                                            required\r\n                                        />\r\n                                        <div className=\"valid-feedback\">{this.state.success}</div>\r\n                                        <div className=\"invalid-feedback\">\r\n                                            {errors.password}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/*<Link*/}\r\n                                    {/*    className=\"forgot my-2 text-primary fade-in\"*/}\r\n                                    {/*    to=\"/Login\"*/}\r\n                                    {/*>*/}\r\n                                    {/*    Back to login*/}\r\n                                    {/*</Link>*/}\r\n                                    <button className=\"ant-btn ant-btn-primary w-100 d-block\">\r\n                                        change password\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n\r\nimport {Link, } from \"react-router-dom\";\r\n\r\nexport default class ResetLink extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"card mt-3\">\r\n                                <div className=\"card-body mx-3 my-3 text-center\">\r\n                                    <p>your password has been changed successfully</p>\r\n                                    <p>Please <span><Link to={'/Login'}>Login</Link> </span> to continue</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n\r\nimport PresaleServices from '../Services/Api/Api'\r\nimport {Button, message, Card} from \"antd\";\r\n\r\nexport default class EditProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            setName: this.props.setName,\r\n            repassword: \"\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    onInput = e => {\r\n        const password = e.target.value;\r\n        if (password !== \"\") {\r\n            if (password.length < 8 || !password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\")) {\r\n                message.error(\"Password must be at least 8 characters long with at least one number and one capital letter\")\r\n            }\r\n        }\r\n    }\r\n    onSubmit = e => {\r\n        let flag = true\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        e.preventDefault();\r\n        if (this.state.name === \"\") {\r\n            flag = false\r\n            message.error(\"name is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.password != this.state.repassword) {\r\n            flag = false\r\n            message.error(\"Password and Confirm Password do not match\")\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.password.length > 0 && this.state.password.length < 8) {\r\n            flag = false\r\n            message.error(\"Password must be at least 8 characters long with at least one number and one capital letter \")\r\n            this.setState({\r\n                loading: false\r\n            })\r\n\r\n        }\r\n\r\n        if (this.state.password !== \"\" && !this.state.password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\")) {\r\n            {\r\n                flag = false\r\n                message.error(\"Password must be at least 8 characters long with at least one number and one capital letter\")\r\n\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            }\r\n        }\r\n        if (flag) {\r\n\r\n            PresaleServices.editProfile(this.state).then(\r\n                res => {\r\n                    this.props.setName(this.state.name);\r\n\r\n                    this.props.history.push('/EditProfile');\r\n                    message.success(\"profile has been updated\")\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                }).catch(err => {\r\n                    message.error(\"can't update user\");\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                }\r\n            )\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        PresaleServices.geteditProfile().then(res => {\r\n                if (res) {\r\n                    this.setState({\r\n                        name: res.name,\r\n                        email: res.email,\r\n\r\n                        loading: false\r\n                    })\r\n\r\n                } else {\r\n                    //message.error(\"Profile not updated\");\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                }\r\n            }\r\n        ).catch(err => {\r\n            message.error(err);\r\n        });\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        if (e.target.type !== \"email\") {\r\n            e.preventDefault();\r\n            this.setState({\r\n                [e.target.name]: e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {name, email, password, repassword, loading} = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"container login-wrapper mt-5\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-8\">\r\n                            <Card className=\"card\" loading={loading}>\r\n                                <div className=\"card-header\"><h2>Personal Details</h2></div>\r\n                                <div className=\"card-body row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label>Full Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Full Name\"\r\n                                            name=\"name\"\r\n                                            value={name}\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label>Email Address</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Email Address\"\r\n                                            name=\"email\"\r\n                                            value={email}\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label>New Password</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"New Password\"\r\n                                            value={password}\r\n                                            onBlur={this.onInput}\r\n                                            onChange={this.onChangeHandler}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label>Confirm Password</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            name=\"repassword\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            value={repassword}\r\n                                            onChange={this.onChangeHandler}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <Button type=\"primary\" className=\"ant-btn ant-btn-primary mt-3 float-right\"\r\n                                                onClick={this.onSubmit}>\r\n                                            Update\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport Pagination from \"../Common/Pagination\";\r\nimport PresaleServices from '../Services/Api/Api';\r\nimport {Button} from \"antd\";\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\nexport default class Customers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let loggedIn = null;\r\n        this.state = {\r\n            loggedIn,\r\n            data: [],\r\n            filtered: [],\r\n            searched: [],\r\n            currentPage: 1,\r\n            itemsPerPage: 5,\r\n            searching:false,\r\n            loaded:false\r\n        };\r\n        this.props.setLocation(this.props.history.location.pathname)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        e.preventDefault();\r\n        const {data, searched,itemsPerPage} = this.state;\r\n        const currentPage=1;\r\n        let value = e.target.value;\r\n        if(e.target.type==\"date\"){\r\n            let temp=value.split(\"-\")\r\n            temp=temp.reverse();\r\n            value=temp.join('/')\r\n        }\r\n        let filtered = [...data];\r\n        let key = e.target.name;\r\n        searched[key] = value;\r\n        for (key in searched) {\r\n            value = searched[key];\r\n            if (value !== \"\") {\r\n                filtered = filtered.filter(el => {\r\n                    const lc = el[key].toLowerCase();\r\n                    const filter = value.toLowerCase();\r\n                    return lc.includes(filter);\r\n                });\r\n            }\r\n        }\r\n        let searchingflag=false;\r\n        for (key in searched){\r\n\r\n            value=searched[key];\r\n            if(value!==\"\")\r\n                searchingflag=true\r\n        }\r\n        if(!searchingflag){\r\n            const indexOfLastItem = currentPage * itemsPerPage;\r\n            const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n            this.setState({\r\n                filtered: filtered.slice(\r\n                    indexOfFirstItem, indexOfLastItem\r\n                ),\r\n                searched: searched,\r\n                searching:false\r\n            });\r\n        }\r\n        else\r\n            this.setState({\r\n                filtered: filtered,\r\n                searched: searched,\r\n                searching:true\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        PresaleServices.getCustomers()\r\n            .then(res =>  {\r\n                const { currentPage, itemsPerPage} = this.state;\r\n                const indexOfLastItem = currentPage * itemsPerPage;\r\n                const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n                let currentFiltered;\r\n                let data=res.data\r\n                this.setState({\r\n                    data\r\n                },()=>{\r\n                    if(data.length){\r\n                        const temp = [...data];\r\n                        currentFiltered = temp.slice(\r\n                            indexOfFirstItem,\r\n                            indexOfLastItem\r\n                        );}\r\n                    else {\r\n                        currentFiltered=[]\r\n                    }\r\n                    this.setState({filtered: currentFiltered,loaded:true});\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    paginate = pageNumber => {\r\n        const {data,itemsPerPage} = this.state;\r\n        const indexOfLastItem = pageNumber * itemsPerPage;\r\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\r\n        const temp = [...data];\r\n        const currentFiltered = temp.slice(indexOfFirstItem, indexOfLastItem);\r\n        this.setState({currentPage: pageNumber, filtered: currentFiltered});\r\n    };\r\n    addCustomerPage=()=>{\r\n        this.props.history.push('/AddCustomer');\r\n    };\r\n    editUser=(id)=>{\r\n\r\n        this.props.history.push(`/EditCustomer/${id}`)\r\n    };\r\n    render() {\r\n        const {filtered, itemsPerPage, data,searching,loaded} = this.state;\r\n\r\n        const tableRows = filtered.length ? (\r\n            filtered.map((item, index) => {\r\n                return (\r\n                    <tr className=\"text-left\" key={index}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.email}</td>\r\n                        <td>{item.phone}</td>\r\n                        <td>{item.company_name}</td>\r\n                        <td>{item.verified}</td>\r\n                        <td style={{textAlign: \"center\"}}>\r\n                            {this.props.canwrite?<span >\r\n                                {/*<button className=\" btn btn-large green\"> update</button>*/}\r\n                                <EditOutlined  onClick={()=>this.editUser(item.id)}/>\r\n                            </span>:null}\r\n                        </td>\r\n\r\n                    </tr>\r\n                );\r\n            })\r\n        ) : (\r\n            loaded?<tr>\r\n                <td className=\"float-left\">\r\n                    <p className=\"text-danger float-left\">No record found</p>\r\n                </td>\r\n            </tr>:null\r\n        );\r\n        return (\r\n            <div>\r\n                {/*<Header HeaderText={\"Billings and Purchased\"}/>*/}\r\n                <div className=\"content search-table-wrapper\"\r\n                     id=\"main-content\"\r\n                     style={{clear: \"both\", width: \"90%\", marginLeft: \"8%\"}}\r\n                >\r\n                    <div className=\"container-fluid mt-5\">\r\n                        <div className=\"row\">\r\n                                <div className=\"col-md-12 card\">\r\n                                    <div className=\"card-body text-capitalize font-weight-bolder text-dark w-100\">\r\n                                        <h4 className=\"d-inline-block\">Customers</h4>\r\n                                        {this.props.canwrite?\r\n                                            <span className=\"float-right\">\r\n                                           {this.props.canwrite?\r\n                                               <span className=\"float-right\">\r\n                                            <Button  onClick={this.addCustomerPage} className=\"ant-btn ant-btn-primary w-100 \"> Add Customer</Button>\r\n                                        </span>:null}\r\n                                        </span>:null}\r\n                                    </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card mt-3\">\r\n                        <div className=\"card-header text-bolder\">\r\n                            <h4 className=\"font-weight-bold mb-0\"> Manage Customers</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <table className=\"table \">\r\n                                <thead>\r\n\r\n                                <tr>\r\n\r\n                                    <th>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Name\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n\r\n                                        />\r\n                                    </th>\r\n\r\n                                    <th width=\"170px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            placeholder=\"Email\"\r\n                                            name=\"email\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n\r\n                                        />\r\n                                    </th>\r\n                                    <th width=\"180px\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"phone\"\r\n                                            placeholder=\"Phone Number\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                    <th width=\"190px\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"company_name\"\r\n                                            placeholder=\"Company Name\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n                                    </th>\r\n                                    <th>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control W-100 d-block\"\r\n                                            name=\"verified\"\r\n                                            placeholder=\"Account status\"\r\n                                            onChange={this.onChangeHandler}\r\n                                            required\r\n                                        />\r\n\r\n                                    </th>\r\n                                </tr>\r\n                                <tr className=\"text-left\">\r\n                                    <th >Name</th>\r\n                                    <th >Email</th>\r\n                                    <th >Phone Number</th>\r\n                                    <th>Company Name</th>\r\n                                    <th>Account Status</th>\r\n\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody className=\"text-center\">{tableRows}</tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    {!searching?\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={data.length}\r\n                            paginate={this.paginate}\r\n                        />:null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nclass Phone extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            value:this.props.initial!==undefined?this.props.initial:\"\"\r\n        }\r\n\r\n\r\n    }\r\n    setValue=e=>{\r\n        this.setState({\r\n            value:e\r\n        })\r\n        this.props.setValue(e)\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.initial!==this.props.initial)\r\n        {\r\n            this.setState({\r\n                value:this.props.initial\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <PhoneInput\r\n                placeholder=\"Enter phone number\"\r\n                value={this.state.value}\r\n                onChange={this.setValue}\r\n                className={\"form-control\"}/>\r\n        )}\r\n}\r\nexport default Phone","import React, {Component} from \"react\";\r\nimport {Button, message} from \"antd\";\r\nimport PresaleServices from \"../Services/Api/Api\";\r\nimport Phone from \"../Common/Phone\";\r\n\r\nexport default class AddUser extends Component {\r\n    state = {\r\n        email: \"\", password: \"\", repassword: \"\", company_name: \"\", phone: \"\", name: \"\", loading: false\r\n    };\r\n    onChangeHandler = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    setPhone = phone => {\r\n        this.setState({\r\n            phone: phone\r\n        })\r\n    }\r\n    onSubmitHandler = e => {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        e.preventDefault();\r\n        let flag = false\r\n\r\n        if (this.state.name === \"\") {\r\n            flag = true;\r\n            message.error(\"Name is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.email === \"\") {\r\n            flag = true;\r\n            message.error(\"Email is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.phone === \"\") {\r\n            flag = true;\r\n            message.error(\"Phone is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.company_name === \"\") {\r\n            flag = true;\r\n            message.error(\"Company name is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.password !== this.state.repassword) {\r\n            flag = true\r\n            message.error(\"Password and Confirm Password do not match\")\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n\r\n        if (this.state.password === \"\") {\r\n            flag = true;\r\n            message.error(\"Password is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n\r\n        if (this.state.repassword === \"\") {\r\n            flag = true;\r\n            message.error(\"Confirm Password is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.password !== \"\") {\r\n\r\n            if (this.state.password.length < 8 || !this.state.password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\")) {\r\n                {\r\n                    flag = true;\r\n                    message.error(\"password must be 8 characters long and should have at least one capital letter and one digit in it.\")\r\n\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        if (!flag) {\r\n            PresaleServices.createCustomer(this.state).then(() => {\r\n                message.success(\"Costumer created successfully.\");\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n                this.props.history.push('/Customers')\r\n            }).catch(() => {\r\n                message.error(\"can't create user.\")\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n            })\r\n\r\n        }\r\n    };\r\n    onCancel = () => {\r\n        this.props.history.push('/Customers')\r\n    }\r\n\r\n    render() {\r\n        const {email, password, repassword, company_name, phone, name, loading} = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-2\">\r\n                        <div className=\" col-md-12 \">\r\n                            <div className=\" card\">\r\n                                <div className=\"card-body text-capitalize font-weight-bolder text-dark w-100\">\r\n                                    <h1>Add Customer</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card mt-5\">\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmitHandler}>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Name:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Name\"\r\n                                                name=\"name\"\r\n                                                required\r\n                                                value={name}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Email:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Email\"\r\n                                                name=\"email\"\r\n                                                required\r\n                                                value={email}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Company Name:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Company\"\r\n                                                name=\"company_name\"\r\n                                                required\r\n                                                value={company_name}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Phone:</label>\r\n                                            <Phone setValue={this.setPhone} initial={phone}/>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Password:</label>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Password\"\r\n                                                name=\"password\"\r\n                                                required\r\n                                                value={password}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Confirm Password:</label>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Confirm Password\"\r\n                                                name=\"repassword\"\r\n                                                required\r\n                                                value={repassword}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <span className=\"float-right\">\r\n                                             <Button loading={loading} onClick={this.onSubmitHandler}\r\n                                                     className=\"ant-btn ant-btn-primary w-100 \"> Submit</Button>\r\n\r\n                                        </span>\r\n                                        <span className=\"float-right\">\r\n                                             <Button onClick={this.onCancel}\r\n                                                     className=\"ant-btn ant-btn-primary ant-btn-gray w-100 \"> cancel</Button>\r\n                                        </span>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {Button, message} from \"antd\";\r\nimport PresaleServices from \"../Services/Api/Api\";\r\nimport Phone from \"../Common/Phone\";\r\n\r\nexport default class EditUser extends Component {\r\n    state = {\r\n        loading: false,\r\n        id: this.props.match.params.id,\r\n        email: \"\", password: \"\", repassword: \"\", company_name: \"\", name: \"\",\r\n        phone: \"\"\r\n    };\r\n    setPhone=phone=>{\r\n        this.setState({\r\n            phone: phone\r\n        })\r\n    }\r\n    onChangeHandler = e => {\r\n        if (e.target.name !== \"email\") {\r\n            e.preventDefault();\r\n            this.setState({\r\n                [e.target.name]: e.target.value\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        PresaleServices.getCustomer(this.state.id).then(res => {\r\n            if (res) {\r\n                this.setState({\r\n                    email: res.data.email, password: \"\",\r\n                    repassword: \"\", company_name: res.data.company_name,\r\n                    phone: res.data.phone, name: res.data.name,\r\n                });\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        let flag = false\r\n\r\n        if (this.state.name === \"\") {\r\n            flag = true\r\n            message.error(\"name is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.email === \"\") {\r\n            flag = true\r\n            message.error(\"email is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.phone === \"\") {\r\n            flag=true;\r\n            message.error(\"Phone is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.company_name === \"\") {\r\n            flag=true;\r\n            message.error(\"Company name is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        \r\n        if (this.state.password !== this.state.repassword) {\r\n            flag = true\r\n            message.error(\"Password and Confirm Password do not match\")\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n\r\n        if (this.state.password.length) {\r\n            if (!this.state.password || (this.state.password.length < 8 || !this.state.password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\"))) {\r\n                {\r\n                    flag = true\r\n                    message.error(\"password must be 8 characters long and should have at least one capital letter and one digit in it.\")\r\n\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        if (!flag) {\r\n            PresaleServices.editCustomer(this.state).then(() => {\r\n                message.success(\"Customer Updated successfully.\");\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                this.props.history.push('/Customers')\r\n            }).catch(() => {\r\n                message.error(\"can't update user.\")\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n        }\r\n    };\r\n    onCancel = () => {\r\n\r\n        this.props.history.push('/Customers')\r\n\r\n    }\r\n\r\n    render() {\r\n        const {email, password, repassword, company_name, phone, name, loading} = this.state;\r\n        \r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-2\">\r\n                        <div className=\" col-md-12 \">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body text-capitalize font-weight-bolder text-dark w-100\">\r\n                                    <h1>Edit Customer</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card mt-5\">\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmitHandler}>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Name:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"username\"\r\n                                                name=\"name\"\r\n                                                required\r\n                                                value={name}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Email:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Email\"\r\n                                                name=\"email\"\r\n                                                required\r\n                                                value={email}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"phone\">Phone:</label>\r\n                                            <Phone setValue={this.setPhone} initial={phone}/>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Company Name:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Company Name\"\r\n                                                name=\"company_name\"\r\n                                                required\r\n                                                value={company_name}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Password:</label>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Password\"\r\n                                                name=\"password\"\r\n                                                required\r\n                                                value={password}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Confirm Password:</label>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Confirm Password\"\r\n                                                name=\"repassword\"\r\n                                                required\r\n                                                value={repassword}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <span className=\"float-right\">\r\n                                             <Button loading={loading} onClick={this.onSubmitHandler}\r\n                                                     className=\"ant-btn ant-btn-primary w-100 \"> Submit</Button>\r\n                                        </span>\r\n                                        <span className=\"float-right\">\r\n                                             <Button onClick={this.onCancel}\r\n                                                     className=\"ant-btn ant-btn-primary w-100 \"> cancel</Button>\r\n                                        </span>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {Button, message} from \"antd\";\r\nimport PresaleServices from \"../Services/Api/Api\";\r\n\r\nexport default class AddUser extends Component {\r\n    state = {\r\n        email: \"\", password: \"\", repassword: \"\", role_name: \"\", status: \"\", name: \"\",\r\n        roles: [{value: \"\", display: \"Select role\"}],\r\n        statuses: [{value: \"\", display: \"Select status\"}, {value: \"Active\", display: \"Active\"}, {\r\n            value: \"Inactive\",\r\n            display: \"Inactive\"\r\n        }],\r\n        fetching: false\r\n    };\r\n\r\n    onChangeHandler = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    onSubmitHandler = e => {\r\n        this.setState({\r\n            fetching: true\r\n        });\r\n        e.preventDefault();\r\n        let flag = false\r\n        if (this.state.name === \"\") {\r\n            flag = true;\r\n\r\n            message.error(\"name is required\");\r\n            this.setState({\r\n                fetching: false\r\n            })\r\n        }\r\n        if (this.state.email !== \"\") {\r\n            if (!this.state.email.toLowerCase().includes('vaporvm')) {\r\n                flag = true\r\n\r\n                message.error(\"can't create user\");\r\n                this.setState({\r\n                    fetching: false\r\n                })\r\n            }\r\n        }\r\n        if (this.state.email === \"\") {\r\n            flag = true\r\n\r\n            message.error(\"email is required\");\r\n            this.setState({\r\n                fetching: false\r\n            })\r\n        }\r\n\r\n        if (this.state.status === \"\") {\r\n            flag = true;\r\n            message.error(\"Status is required\");\r\n            this.setState({\r\n                fetching: false\r\n            })\r\n        }\r\n        if (this.state.role_name === \"\") {\r\n            flag = true\r\n            message.error(\"User role name is required\");\r\n            this.setState({\r\n                fetching: false\r\n            })\r\n        }\r\n        if (this.state.password !== this.state.repassword) {\r\n            message.error(\"Password and Confirm Password do not match\")\r\n            flag = true\r\n            this.setState({\r\n                fetching: false\r\n            })\r\n        }\r\n        if (this.state.password === \"\") {\r\n            flag = true\r\n            message.error(\"Password is required\");\r\n            this.setState({\r\n                fetching: false\r\n            })\r\n        }\r\n        if (this.state.repassword === \"\") {\r\n            flag = true;\r\n\r\n            message.error(\"Confirm Password is required\");\r\n            this.setState({\r\n                fetching: false\r\n            })\r\n        }\r\n        if (this.state.password !== \"\") {\r\n            if (this.state.password.length < 8 || !this.state.password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\")) {\r\n                {\r\n                    flag = true\r\n                    message.error(\"password must be 8 characters long and should have at least one capital letter and one digit in it.\")\r\n                    this.setState({\r\n                        fetching: false\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        if (!flag) {\r\n            PresaleServices.createUser(this.state).then(() => {\r\n                this.setState({\r\n                    fetching: false\r\n                });\r\n                message.success(\"User created successfully.\")\r\n                this.props.history.push('/Users')\r\n            }).catch(() => {\r\n                message.error(\"Email is already taken.\");\r\n                this.setState({\r\n                    fetching: false\r\n                });\r\n            })\r\n\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        PresaleServices.getRoles().then(res => {\r\n            if (res) {\r\n                let rolesFetched = res.map(role => {\r\n                    return {value: role, display: role};\r\n                });\r\n                rolesFetched = [{value: \"\", display: \"Select Role\"}].concat(\r\n                    rolesFetched\r\n                );\r\n                this.setState({roles: rolesFetched});\r\n            }\r\n        });\r\n    }\r\n\r\n    onCancel = () => {\r\n\r\n        this.props.history.push('/Users')\r\n    }\r\n\r\n    render() {\r\n        const {statuses, roles, email, password, repassword, role_name, status, name, fetching} = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-2\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\" card\">\r\n                                <div className=\"card-body text-capitalize font-weight-bolder text-dark w-100\">\r\n                                    <h1>User</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\" card mt-5\">\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmitHandler}>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Name:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Name\"\r\n                                                name=\"name\"\r\n                                                required\r\n                                                value={name}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Email:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Email\"\r\n                                                name=\"email\"\r\n                                                required\r\n                                                value={email}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"Select status\">Select status</label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"status\"\r\n                                                value={status}\r\n                                                onChange={this.onChangeHandler}\r\n                                                required\r\n                                            >\r\n                                                {statuses.map(_status => (\r\n                                                    <option key={_status.value} value={_status.value}>\r\n                                                        {_status.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"Select hospital\">Select Role</label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"role_name\"\r\n                                                value={role_name}\r\n                                                onChange={this.onChangeHandler}\r\n                                                required\r\n                                            >\r\n                                                {roles.map(_role => (\r\n                                                    <option key={_role.value} value={_role.value}>\r\n                                                        {_role.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Password:</label>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Password\"\r\n                                                name=\"password\"\r\n                                                required\r\n                                                value={password}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Confirm Password:</label>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Confirm Password\"\r\n                                                name=\"repassword\"\r\n                                                required\r\n                                                value={repassword}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <span className=\"float-right\">\r\n                                             <Button loading={fetching} onClick={this.onSubmitHandler}\r\n                                                     className=\"ant-btn ant-btn-primary w-100 \"> Submit</Button>\r\n                                        </span>\r\n                                        <span className=\"float-right mx-md-2 mx-sm-0\">\r\n                                             <Button onClick={this.onCancel}\r\n                                                     className=\"ant-btn ant-btn-primary ant-btn-gray w-100 \"> cancel</Button>\r\n                                        </span>\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {Button, message} from \"antd\";\r\nimport PresaleServices from \"../Services/Api/Api\";\r\n\r\nexport default class EditUser extends Component {\r\n    state = {\r\n        loading: false,\r\n        id: this.props.match.params.id,\r\n        email: \"\", password: \"\", repassword: \"\", role_name: \"\", status: \"\", name: \"\",\r\n        roles: [{value: \"\", display: \"Select role\"}],\r\n        statuses: [{value: \"\", display: \"Select status\"}, {value: \"Active\", display: \"Active\"}, {\r\n            value: \"Inactive\",\r\n            display: \"Inactive\"\r\n        }],\r\n\r\n    };\r\n    onChangeHandler = e => {\r\n        if (e.target.name !== \"email\") {\r\n            e.preventDefault();\r\n            this.setState({\r\n                [e.target.name]: e.target.value\r\n            });\r\n        }\r\n        ;\r\n    }\r\n\r\n    componentDidMount() {\r\n        PresaleServices.getUser(this.state.id).then(res => {\r\n            if (res) {\r\n                let rolesFetched = res.roles.map(role => {\r\n                    return {value: role, display: role};\r\n                });\r\n                rolesFetched = [{value: \"\", display: \"Select Role\"}].concat(\r\n                    rolesFetched\r\n                );\r\n                this.setState({\r\n                    roles: rolesFetched,\r\n                    email: res.users.data.email, password: \"\",\r\n                    repassword: \"\", role_name: res.users.data.role_name,\r\n                    status: res.users.data.status, name: res.users.data.name,\r\n                });\r\n                localStorage.setItem(\"data\", JSON.stringify(res.users.data))\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmitHandler = e => {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        e.preventDefault();\r\n        let flag = false\r\n        if (this.state.name === \"\") {\r\n            flag = true\r\n\r\n            message.error(\"Name is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.email === \"\") {\r\n            flag = true\r\n\r\n            message.error(\"Email is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n\r\n        if (this.state.status === \"\") {\r\n            flag = true\r\n\r\n            message.error(\"Status is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.user_role === \"\") {\r\n            flag = true\r\n\r\n            message.error(\"User role name is required\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.password !== this.state.repassword) {\r\n            message.error(\"Password and Confirm Password do not match\")\r\n            flag = true\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n\r\n        if (!this.state.email.toLowerCase().includes('vaporvm')) {\r\n            flag = true\r\n\r\n            message.error(\"Can't create user\");\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n        if (this.state.password.length > 0) {\r\n            if (!this.state.password || ((this.state.password.length < 8)\r\n                || !this.state.password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\"))) {\r\n                {\r\n                    flag = true\r\n\r\n                    message.error(\"password must be 8 characters long and should have at least one capital letter and one digit in it.\")\r\n\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        if (!flag) {\r\n            PresaleServices.editUser(this.state).then(() => {\r\n                message.success(\"User is updated .\");\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                this.props.history.push('/Users')\r\n            }).catch(() => {\r\n                message.error(\"Can't update user.\");\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n        }\r\n    };\r\n    onCancel = () => {\r\n\r\n        this.props.history.push('/Users')\r\n\r\n    }\r\n\r\n    render() {\r\n        const {statuses, roles, email, password, repassword, role_name, status, name, loading} = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-2\">\r\n                        <div className=\" col-md-12 \">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body text-capitalize font-weight-bolder text-dark w-100\">\r\n                                    <h1>Edit User</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card mt-5\">\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmitHandler}>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Name:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"username\"\r\n                                                name=\"name\"\r\n                                                required\r\n                                                value={name}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Email:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Email\"\r\n                                                name=\"email\"\r\n                                                required\r\n                                                value={email}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"Select hospital\">Select status</label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"status\"\r\n                                                value={status}\r\n                                                onChange={this.onChangeHandler}\r\n                                                required\r\n                                            >\r\n                                                {statuses.map(_status => (\r\n                                                    <option key={_status.value} value={_status.value}>\r\n                                                        {_status.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"Select hospital\">Select Role</label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"role_name\"\r\n                                                value={role_name}\r\n                                                onChange={this.onChangeHandler}\r\n                                                required\r\n                                            >\r\n                                                {roles.map(_role => (\r\n                                                    <option key={_role.value} value={_role.value}>\r\n                                                        {_role.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Password:</label>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Password\"\r\n                                                name=\"password\"\r\n                                                required\r\n                                                value={password}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Confirm Password:</label>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Confirm Password\"\r\n                                                name=\"repassword\"\r\n                                                required\r\n                                                value={repassword}\r\n                                                onChange={this.onChangeHandler}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <span className=\"float-right\">\r\n                                             <Button loading={loading} onClick={this.onSubmitHandler}\r\n                                                     className=\"ant-btn ant-btn-primary w-100 \"> Submit</Button>\r\n\r\n                                        </span>\r\n                                        <span className=\"float-right\">\r\n                                             <Button onClick={this.onCancel}\r\n                                                     className=\"ant-btn ant-btn-primary ant-btn-gray w-100 \"> cancel</Button>\r\n                                        </span>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Button, message, Card} from \"antd\";\r\nimport PresaleServices from \"../Services/Api/Api\";\r\nimport {Select} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst {Option} = Select;\r\n\r\nclass ResourceAssignment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            usersFetched: [],\r\n            projects: [],\r\n            selected: [],\r\n            projectsFetched: [],\r\n            empty: [],\r\n            project: this.props.match.params.projectName ? this.props.match.params.projectName : \"\",\r\n            loading:false\r\n        };\r\n        this.props.setLocation(this.props.history.location.pathname)\r\n    }\r\n\r\n\r\n    onSubmit = e => {\r\n        this.setState({\r\n            loading:true,\r\n        });\r\n        e.preventDefault();\r\n        const {selected, project} = this.state\r\n        if (selected.length === 0) {\r\n            message.error(\"Please select User\")\r\n            this.setState({\r\n                loading:false,\r\n            });\r\n        } else if (project === \"\") {\r\n            message.error(\"Please select Project.\")\r\n            this.setState({\r\n                loading:false,\r\n            });\r\n        } else {\r\n            PresaleServices.assignResources(\r\n                {\r\n                    users: this.state.selected,\r\n                    project: project\r\n                }\r\n            ).then(() => {\r\n                message.success(\"Resource (s) Assigned.\")\r\n                this.setState({\r\n                 loading:false,\r\n                });\r\n                this.props.history.push('/')\r\n            }).catch(() => {\r\n                message.error(\"can't assign resources.\")\r\n            })\r\n\r\n        }\r\n    }\r\n    handleChange = value => {\r\n        this.setState({\r\n            selected: value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        PresaleServices.getUserNames().then(res => {\r\n                localStorage.setItem(\"data\", JSON.stringify(res))\r\n                let projectsFetched;\r\n                if (res) {\r\n                    let usersFetched = res.users.map(user => {\r\n                        return {value: user.id, display: user.name};\r\n                    });\r\n                    usersFetched = [].concat(\r\n                        usersFetched\r\n                    );\r\n\r\n                    projectsFetched = res.projects.map(project => {\r\n                        return {value: project.name, display: project.name, users: project.selected};\r\n                    });\r\n                    projectsFetched = [].concat(\r\n                        projectsFetched\r\n                    );\r\n\r\n\r\n                    let users = []\r\n                    for (let i = 0; i < usersFetched.length; i += 1) {\r\n                        users.push(\r\n                            <Option key={usersFetched[i].value}> {usersFetched[i].display}</Option>\r\n                        )\r\n                    }\r\n                    let projects = [];\r\n\r\n                    for (let i = 0; i < projectsFetched.length; i += 1) {\r\n                        projects.push(\r\n                            <Option key={projectsFetched[i].value}> {projectsFetched[i].display}</Option>\r\n                        )\r\n                    }\r\n                    this.setState({\r\n                            usersFetched: users,\r\n                            projectsFetched: projects,\r\n                            projects: projectsFetched,\r\n\r\n                        },\r\n                        () => {\r\n\r\n                            let index = -1\r\n                            const {projects} = this.state\r\n                            if (this.state.projectName !== \"\") {\r\n                                for (let i = 0; i < projects.length; i++) {\r\n\r\n                                    if (this.state.project === projects[i].value)\r\n                                        index = i\r\n                                }\r\n                                if (index !== -1) {\r\n                                    const users = this.state.projects[index].users\r\n                                    for (let i = 0; i < users.length; i++) {\r\n                                        users[i] = users[i] + \"\"\r\n                                    }\r\n                                    this.setState({\r\n                                        selected: users,\r\n\r\n                                    })\r\n                                } else {\r\n\r\n                                    this.setState({\r\n                                        selected: this.state.empty,\r\n\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                    )\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let index = -1;\r\n        const {projects} = this.state;\r\n        for (let i = 0; i < projects.length; i++) {\r\n            if (e === projects[i].value)\r\n                index = i\r\n        }\r\n        const users = projects[index].users\r\n        for (let i = 0; i < users.length; i++) {\r\n            users[i] = users[i] + \"\"\r\n        }\r\n        this.setState({\r\n            selected: users,\r\n            project: e\r\n        })\r\n    }\r\n    onCancel = () => {\r\n        if( this.props.match.params.projectName ){\r\n        let projectsFetched;\r\n        const res = JSON.parse(localStorage.getItem(\"data\"))\r\n        let usersFetched = res.users.map(user => {\r\n            return {value: user.id, display: user.name};\r\n        });\r\n        usersFetched = [].concat(\r\n            usersFetched\r\n        );\r\n\r\n        projectsFetched = res.projects.map(project => {\r\n            return {value: project.name, display: project.name, users: project.selected};\r\n        });\r\n        projectsFetched = [].concat(\r\n            projectsFetched\r\n        );\r\n\r\n\r\n        let users = []\r\n        for (let i = 0; i < usersFetched.length; i += 1) {\r\n            users.push(\r\n                <Option key={usersFetched[i].value}> {usersFetched[i].display}</Option>\r\n            )\r\n        }\r\n        let projects = []\r\n\r\n        for (let i = 0; i < projectsFetched.length; i += 1) {\r\n            projects.push(\r\n                <Option key={projectsFetched[i].value}> {projectsFetched[i].display}</Option>\r\n            )\r\n        }\r\n        this.setState({\r\n                usersFetched: users,\r\n                projectsFetched: projects,\r\n                projects: projectsFetched,\r\n\r\n            },\r\n            () => {\r\n\r\n                let index = -1\r\n                const {projects} = this.state\r\n                if (this.state.projectName !== \"\") {\r\n                    for (let i = 0; i < projects.length; i++) {\r\n\r\n                        if (this.state.project === projects[i].value)\r\n                            index = i\r\n                    }\r\n                    if (index !== -1) {\r\n                        const users = this.state.projects[index].users\r\n                        for (let i = 0; i < users.length; i++) {\r\n                            users[i] = users[i] + \"\"\r\n                        }\r\n                        this.setState({\r\n                            selected: users,\r\n\r\n                        })\r\n                    } else {\r\n\r\n                        this.setState({\r\n                            selected: this.state.empty,\r\n\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        )}\r\n        else {\r\n            this.setState({\r\n                projetName:\"\",\r\n                selected:[],\r\n                project:\"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {usersFetched, projectsFetched, project, selected,loading} = this.state;\r\n        return (\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                <h3 className=\"mt-5\">Resource Assignments</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"Select Project\">Select Project</label>\r\n                    <Select\r\n                        showSearch\r\n                        className=\"form-control\"\r\n                        placeholder=\"Please select users\"\r\n                        style={{width: '100%'}}\r\n                        defaultValue={\"Please Select Project\"}\r\n                        optionFilterProp=\"children\"\r\n                        onChange={this.onChangeHandler}\r\n                        filterOption={(input, option) =>\r\n                            option.props.children[1].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                        value={project}\r\n                    >\r\n                        {projectsFetched}\r\n                    </Select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"Select hospital\">Select Users</label>\r\n                    <Select\r\n                        showSearch\r\n                        className=\"form-control\"\r\n                        mode=\"multiple\"\r\n                        optionFilterProp=\"children\"\r\n                        style={{width: '100%'}}\r\n                        placeholder=\"Please select users\"\r\n                        onChange={this.handleChange}\r\n                        value={selected}\r\n                        allowClear\r\n                        filterOption={(input, option) =>\r\n                            option.props.children[1].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                        // onSearch={this.onSearch}\r\n\r\n                    >\r\n                        {usersFetched}\r\n                    </Select>\r\n                </div>\r\n                <Button loading={loading} className=\" ant-btn btn-success ant-btn-primary float-right \"\r\n                        onClick={this.onSubmit}>\r\n                    Assign User\r\n                </Button>\r\n\r\n                <Button className=\" ant-btn btn-success ant-btn-primary ant-btn-gray float-right\"\r\n                        onClick={this.onCancel}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ResourceAssignment;","import request from '../requests'\r\nimport {BASE_URl} from './Constant'\r\n\r\nfunction getQuestionAns() {\r\n    return request({\r\n        url: `${BASE_URl}api/getQA`,\r\n        method: 'GET'\r\n    })\r\n}\r\n\r\nfunction sendAnswer(data) {\r\n    return request({\r\n        url: `${BASE_URl}office365/add`,\r\n        method: 'POST',\r\n        data,\r\n    })\r\n}\r\nfunction sendAnswerln(data) {\r\n    return request({\r\n        url: `${BASE_URl}office365/addln`,\r\n        method: 'POST',\r\n        data,\r\n    })\r\n}\r\n\r\nfunction sendAnswerFacebook(data) {\r\n    return request({\r\n        url: `${BASE_URl}office365/addf`,\r\n        method: 'POST',\r\n        data,\r\n    })\r\n}\r\nfunction sendCyberAnswerFacebook(data) {\r\n    return request({\r\n        url: `${BASE_URl}cyber/addf`,\r\n        method: 'POST',\r\n        data,\r\n    })\r\n}\r\nfunction sendAnswerGoogle(data) {\r\n    return request({\r\n        url: `${BASE_URl}office365/addg`,\r\n       // url: `auth/google`,\r\n        method: 'POST',\r\n        data,\r\n    })\r\n}\r\n\r\nfunction sendCyberAnswerGoogle(data) {\r\n    return request({\r\n        url: `${BASE_URl}cyber/addg`,\r\n       // url: `auth/google`,\r\n        method: 'POST',\r\n        data,\r\n    })\r\n}\r\n\r\nfunction getAnswerDetail(id) {\r\n    return request({\r\n        url: `${BASE_URl}admin/viewquotation/${id}`,\r\n        method: 'GET'\r\n    });\r\n}\r\nfunction sendCyberPayments(data) {\r\n    return request({\r\n        url: `${BASE_URl}cyberpayment`,\r\n        method: 'POST',\r\n        data\r\n    });\r\n}\r\n\r\n    function sendEditAnswer(data) {\r\n        return request({\r\n            url: `${BASE_URl}admin/editquotation`,\r\n            method: 'POST',\r\n            data,\r\n        })\r\n    }\r\n\r\n    function getCyberQuestionAns() {\r\n        return request({\r\n            url: `${BASE_URl}api/getQA/1`,\r\n            method: 'GET'\r\n        })\r\n    }\r\n\r\n    function sendCyberAnswer(data) {\r\n        return request({\r\n            url: `${BASE_URl}cyber/add`,\r\n            method: 'POST',\r\n            data,\r\n        })\r\n    }\r\nfunction sendCyberAnswerln(data) {\r\n    return request({\r\n        url: `${BASE_URl}cyber/addln`,\r\n        method: 'POST',\r\n        data,\r\n    })\r\n}\r\n\r\n\r\nfunction getCyberAnswerDetail(id) {\r\n    return request({\r\n        url: `${BASE_URl}cyber/detail/${id}`,\r\n        method: 'GET'\r\n    })\r\n}\r\n\r\nfunction sendCyberEditAnswer(data) {\r\n    return request({\r\n        url: `${BASE_URl}cyber/edit`,\r\n        method: 'POST',\r\n        data,\r\n    })\r\n}\r\n\r\nfunction login(data) {\r\n    return request({\r\n        url: `${BASE_URl}login`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\n\r\nfunction  getCyberPrice(id){\r\n    return request({\r\n        url: `${BASE_URl}cyber/quotation/${id}`,\r\n        method: 'GET',\r\n    })\r\n}\r\nfunction getOfficePrice(id){\r\n    return request({\r\n        url: `${BASE_URl}office365/quotation/${id}`,\r\n        method: 'GET',\r\n    })\r\n}\r\nfunction officePaymentRef(data) {\r\n    return request({\r\n        url: `${BASE_URl}office365/donePayment`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\nfunction CyberPaymentRef(data) {\r\n    return request({\r\n        url: `${BASE_URl}cyber/donePayment`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\n\r\nfunction officePayment(data) {\r\n    return request({\r\n        url: `${BASE_URl}admin/editquotation`,\r\n        //url: `${BASE_URl}office365/payment`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\n\r\nfunction OfficeSurveyPaymnet(data) {\r\n    return request({\r\n        url: `/dashboard/api/pay/token`,\r\n        //url: `${BASE_URl}office365/payment`,\r\n        method: 'POST',\r\n        data\r\n    })\r\n}\r\nconst ServeyServics = {\r\n    OfficeSurveyPaymnet,\r\n    getQuestionAns,\r\n    sendAnswer,\r\n    sendAnswerGoogle,\r\n    sendCyberAnswerGoogle,\r\n    sendCyberAnswerln,\r\n    sendAnswerln,\r\n    sendAnswerFacebook,\r\n    sendCyberAnswerFacebook,\r\n    getAnswerDetail,\r\n    sendCyberAnswer,\r\n    getCyberQuestionAns,\r\n    sendEditAnswer,\r\n    getCyberAnswerDetail,\r\n    sendCyberEditAnswer,\r\n    login,\r\n    getCyberPrice,\r\n    getOfficePrice,\r\n    officePayment,\r\n   // CyberPaymment,\r\n   // OfficeSurveyRef,\r\n    officePaymentRef,\r\n    CyberPaymentRef\r\n};\r\n\r\n\r\nexport default ServeyServics\r\n","import React from \"react\";\r\nimport Button from \"antd/es/button\";\r\nimport {Col, Collapse, Icon, message, Row, Spin, Card} from 'antd'\r\nimport SurveyServics from '../Services/Api/Survey'\r\n\r\nconst {Panel} = Collapse;\r\nconst GenExtra = (props) => {\r\n    return <div>\r\n        <p className=\"font-weight-bolder\" style={{fontSize: 10}}>\r\n            <span className=\"ant-typography-ellipsis-single-line\"> {props.question}</span>\r\n            {!props.disabled ?\r\n                <Icon title=\"edit\"  style={{fontSize: 20}} type=\"edit\"/>\r\n                : null}\r\n        </p>\r\n    </div>\r\n};\r\n\r\nclass Edit extends React.Component {\r\n    state = {\r\n        loading: true,\r\n        editData: [],\r\n        checked: [],\r\n        ans: \"\",\r\n        refrence_no: this.props.match.params.refrenceNo,\r\n        customer_name: \"\",\r\n        company_name: \"\",\r\n        status: \"\",\r\n        quotation_date: \"\",\r\n        payment_date: \"\",\r\n        disabled: this.props.history.location.pathname.toLowerCase().includes(\"view\"),\r\n        price: 0,\r\n        pricelabel: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.path)\r\n            this.props.setLocation('/Discounts')\r\n        else\r\n            this.props.setLocation('/Quotations')\r\n        this.getAnsDetail();\r\n\r\n    }\r\n\r\n\r\n    onChange = (e, el) => {\r\n        if (e.target.type === \"number\") {\r\n            let number = e.target.value;\r\n            if (number.match(\"^([0-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|1000)$\")) {\r\n                let editQuestion = this.state.editData;\r\n                let $r = Object.values(editQuestion).map(q => {\r\n                    if (q.id === el.id) {\r\n                        q['selected_ans'] = e.target.value;\r\n                        return q;\r\n                    }\r\n                    return q;\r\n                });\r\n                this.setState({editData: $r});\r\n            } else {\r\n                message.error(\"Quantity must be between 0 and 1000\");\r\n                let editQuestion = this.state.editData;\r\n                let $r = Object.values(editQuestion).map(q => {\r\n                    if (q.id === el.id) {\r\n                        q['selected_ans'] = \"\";\r\n                        return q;\r\n                    }\r\n                    return q;\r\n                });\r\n                this.setState({editData: $r});\r\n            }\r\n        }\r\n        if (e.target.type === \"radio\") {\r\n            let editQuestion = this.state.editData;\r\n            let $r = Object.values(editQuestion).map(q => {\r\n                if (q.id === el.id) {\r\n                    q['selected_ans'] = e.target.value;\r\n                    return q;\r\n                }\r\n                return q;\r\n            });\r\n            this.setState({editData: $r});\r\n            //localStorage.setItem(\"data\",JSON.stringify($r))\r\n        }\r\n        if (e.target.type === \"checkbox\") {\r\n            if (e.target.checked) {\r\n                let question = this.state.editData;\r\n                let $r = Object.values(question).map(q => {\r\n                    if (q.id === el.id) {\r\n                        q['selected_ans'] = e.target.value;\r\n                        return q;\r\n                    }\r\n                    return q;\r\n                });\r\n                this.setState({Questions: $r});\r\n                // localStorage.setItem(\"data\",JSON.stringify($r))\r\n\r\n            } else {\r\n                let question = this.state.editData;\r\n                let $r = Object.values(question).map(q => {\r\n                    if (q.id === el.id) {\r\n                        q['selected_ans'] = \"\";\r\n                        return q;\r\n                    }\r\n                    return q;\r\n                });\r\n                this.setState({Questions: $r});\r\n                // localStorage.setItem(\"data\",JSON.stringify($r));\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    onSaveHandler = () => {\r\n        if (!this.state.disabled) {\r\n            if (this.state.survey_type === \"Office 365\") {\r\n                if (this.state.checked.length === 0) {\r\n                    message.error(\"services options are necessary\")\r\n                    return\r\n                }\r\n            }\r\n            this.setState({loading: true});\r\n            let reference_no = this.props.match.params.refrenceNo;\r\n            const selectedAnswers = {reference_no};\r\n            Object.values(this.state.editData).forEach((q, index) => {\r\n                if (q.selected_ans !== undefined) {\r\n                    selectedAnswers[q.tag] = q.selected_ans;\r\n                }\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    loading: false,\r\n                })\r\n            }, 400);\r\n            message.success(\"item have been updated\")\r\n        }\r\n    };\r\n    onSubmitHandler = () => {\r\n        if (!this.state.disabled) {\r\n            if (this.state.survey_type === \"Office 365\") {\r\n                if (this.state.checked.length === 0) {\r\n                    message.error(\"services options are necessary\")\r\n                    return\r\n                }\r\n            }\r\n            let refrence_no = this.props.match.params.refrenceNo;\r\n            let price = this.state.price\r\n            const selectedAnswers = {refrence_no, price};\r\n\r\n            Object.values(this.state.editData).forEach((q, index) => {\r\n                if (q.selected_ans !== undefined) {\r\n                    selectedAnswers[q.tag] = q.selected_ans;\r\n                }\r\n            });\r\n            this.postAns(selectedAnswers);\r\n            this.setState({btnloading: true})\r\n        }\r\n    };\r\n    postAns = (selectedAnswers) => {\r\n        if (this.state.survey_type === \"Office 365\") {\r\n            if (this.state.checked.length === 0) {\r\n                message.error(\"Services options are necessary\")\r\n                return\r\n            }\r\n        }\r\n        const {history, match} = this.props;\r\n        let id = match.params.refrenceNo;\r\n        this.setState({loading: true});\r\n\r\n        SurveyServics.sendEditAnswer(selectedAnswers)\r\n            .then(response => {\r\n\r\n                if (response.data.success) {\r\n\r\n                    this.getAnsDetail();\r\n                    message.success(\"quotation updated successfully\")\r\n                }\r\n            })\r\n            .catch(err => message.error(\"quotation can not be updated\"));\r\n\r\n    };\r\n\r\n    check = e => {\r\n        if (!this.state.disabled) {\r\n            let {editData} = this.state\r\n\r\n            if (e.target.type === \"checkbox\") {\r\n\r\n                if (this.state.checked.includes(e.target.name)) {\r\n\r\n                    const {checked} = this.state\r\n                    checked.splice(checked.indexOf(e.target.name), 1);\r\n                    editData[7].selected_ans = checked.join()\r\n\r\n                    this.setState({\r\n                        checked: checked,\r\n                        editData: editData\r\n                    })\r\n\r\n                } else {\r\n                    if (e.target.name === \"None\") {\r\n                        let checked = []\r\n                        checked.push(e.target.name)\r\n                        editData[7].selected_ans = checked.join()\r\n\r\n                        this.setState({\r\n                            checked: checked,\r\n                            editData: editData\r\n                        })\r\n                    } else {\r\n                        let {checked} = this.state\r\n                        if (checked.includes(\"None\")) {\r\n                            checked = []\r\n                        }\r\n                        checked.push(e.target.name)\r\n                        editData[7].selected_ans = checked.join()\r\n                        this.setState({\r\n                            checked: checked,\r\n                            editData: editData\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    getAnsDetail = () => {\r\n        let id = this.props.match.params.refrenceNo;\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        SurveyServics.getAnswerDetail(id).then(response => {\r\n            this.setState({\r\n                editData: response.data.survey_questions,\r\n                loading: false,\r\n                survey_type: response.data.survey_type,\r\n                customer_name: response.data.customer_name,\r\n                company_name: response.data.company_name,\r\n                quotation_date: response.data.quoted_date,\r\n                payment_date: response.data.payment_date,\r\n                status: response.data.status,\r\n                last_updated_by:response.data.last_updated_by,\r\n                last_updated_at:response.data.last_updated_at,\r\n                pricelabel: response.data.price ? response.data.price : 0,\r\n                price: ''\r\n            }, () => {\r\n                if (this.state.status === \"Paid\" && !this.state.disabled) {\r\n                    this.setState({\r\n                        disabled: true\r\n                    })\r\n                }\r\n                if (this.state.survey_type === \"Office 365\") {\r\n                    const ans=this.state.editData[7].selected_ans\r\n                    let answers = ans.split(\",\")\r\n                    const checked = []\r\n                    for (let i = 0; i < answers.length; i += 1) {\r\n                        checked.push(answers[i])\r\n                    }\r\n                    this.setState({\r\n                        checked: checked,\r\n                        loading:false\r\n                    })\r\n\r\n                }\r\n            });\r\n            localStorage.setItem(\"data\", JSON.stringify(response.data.survey_questions))\r\n        })\r\n\r\n    };\r\n    onCrossHandler = () => {\r\n\r\n        this.setState({\r\n            editData: JSON.parse(localStorage.getItem(\"data\"))\r\n        }, () => {\r\n            let {editData} = this.state\r\n            let ans = editData[7].selected_ans\r\n            let answers = ans.split(\",\")\r\n            const checked = []\r\n            for (let i = 0; i < answers.length; i += 1) {\r\n                checked.push(answers[i])\r\n            }\r\n            editData[7].selected_ans = ans\r\n            this.setState({\r\n                checked: checked,\r\n                editData: editData\r\n            })\r\n\r\n        })\r\n    };\r\n    change = e => {\r\n        if (!this.state.disabled) {\r\n            this.setState({\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            loading, refrence_no,\r\n            customer_name,\r\n            company_name,\r\n            status,\r\n            quotation_date,\r\n            payment_date,\r\n            disabled,\r\n            price,\r\n            pricelabel,\r\n            last_updated_by,\r\n            last_updated_at\r\n        } = this.state;\r\n\r\n        const view = this.state.editData && this.state.editData.map(el => {\r\n            if (el.q_visible) {\r\n                return <Collapse\r\n                >\r\n                    <Panel header={el.question} showArrow={false}\r\n                           extra={<GenExtra disabled={disabled} question={el.selected_ans}/>}>\r\n                        <div>\r\n                            <span className=\"right-tick\">\r\n                                {!disabled ? <Icon title={\"save\"} type=\"check\" onClick={this.onSaveHandler}\r\n                                                   theme={\"outlined\"}\r\n                                                   className=\"mr-3\"\r\n                                                   style={{\r\n                                                       color: \"#85c63d\", fontSize: \"20px\", border: \"2px solid\",\r\n                                                       borderRadius: \"50%\", padding: \"5px\"\r\n                                                   }}\r\n                                /> : null}\r\n                                {!disabled ? <Icon title={\"cross\"} type=\"cross\" onClick={this.onCrossHandler}\r\n                                                   theme={\"outlined\"}\r\n                                                   style={{\r\n                                                       color: \"red\", fontSize: \"20px\", border: \"2px solid\",\r\n                                                       borderRadius: \"50%\", padding: \"5px\"\r\n                                                   }}\r\n                                /> : null}\r\n                            </span>\r\n                            {el.ans.map((val, e) => <Row>\r\n                                    <fieldset id={el.tag} onChange={e => this.onChange(e, el)}>\r\n                                        <Col span={24}>\r\n                                            <div className=\"inputGroup\">\r\n                                                {el.tag !== \"additional_cloud_migration\" ?\r\n                                                    <input className=\"form-control\" value={val}\r\n                                                           id={el.tag + val}\r\n                                                           disabled={disabled}\r\n                                                           checked={el.selected_ans === val}\r\n                                                        // defaultChecked={el.selected_ans === val }\r\n                                                           name={el.tag} type={el.type}/> :\r\n                                                    <input value={val}\r\n                                                           disabled={disabled}\r\n                                                           checked={this.state.checked.includes(val)}\r\n                                                           id={el.tag + val}\r\n                                                           name={val}\r\n                                                           type={el.type}\r\n                                                           onInput={this.check}\r\n                                                    />\r\n                                                }\r\n                                                <label htmlFor={el.tag + val}>{val}</label>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </fieldset>\r\n                                </Row>\r\n                            )}\r\n                        </div>\r\n                    </Panel>\r\n                </Collapse>\r\n            } else {\r\n                if (el.q_disabled) {\r\n                    return <Collapse\r\n                    >\r\n                        <Panel header={el.question} showArrow={false} extra={<GenExtra question={el.selected_ans} disabled={disabled}/>}>\r\n                            <div>\r\n                            <span className=\"right-tick\">\r\n                                {!disabled ? <Icon title={\"save\"} type=\"check\" onClick={this.onSaveHandler}\r\n                                                   theme={\"outlined\"}\r\n                                                   className=\"mr-3\"\r\n                                                   style={{\r\n                                                       color: \"#85c63d\", fontSize: \"20px\", border: \"2px solid\",\r\n                                                       borderRadius: \"50%\", padding: \"5px\"\r\n                                                   }}\r\n                                /> : null}\r\n                                {!disabled ? <Icon title={\"cross\"} type=\"cross\" onClick={this.onCrossHandler}\r\n                                                   theme={\"outlined\"}\r\n                                                   style={{\r\n                                                       color: \"red\", fontSize: \"20px\", border: \"2px solid\",\r\n                                                       borderRadius: \"50%\", padding: \"5px\"\r\n                                                   }}\r\n                                /> : null}\r\n                            </span>\r\n                                <Row>\r\n                                    <fieldset id={el.tag}>\r\n                                        <Col span={24}>\r\n                                            <input className=\"form-control\"\r\n                                                   disabled={disabled}\r\n                                                   name={el.tag}\r\n                                                   value={el.selected_ans}\r\n                                                   placeholder={el.selected_ans === null ? 0 : el.selected_ans}\r\n                                                   type={el.type}\r\n                                                   onChange={e => this.onChange(e, el)}/>\r\n                                        </Col>\r\n                                    </fieldset>\r\n                                </Row>\r\n\r\n                            </div>\r\n                        </Panel>\r\n                    </Collapse>\r\n                }\r\n            }\r\n        });\r\n        return <section className=\"edit-collapse-section\">\r\n            <div className=\"container mt-2\">\r\n                <Card loading={loading}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <p>Customer Name</p>\r\n                            <p>{customer_name}</p>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            <p>Company Name</p>\r\n                            <p>{company_name}</p>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            <p>Refrence No</p>\r\n                            <p>{refrence_no}</p>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            <p>Quotation Date</p>\r\n                            <p>{quotation_date}</p>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            <p>Payment Date</p>\r\n                            <p>{payment_date}</p>\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                            <p>Status </p>\r\n                            <p>{status}</p>\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                            <p>Last Updated By </p>\r\n                            <p>{last_updated_by}</p>\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                            <p>Last Updated At </p>\r\n                            <p>{last_updated_at}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-2\">\r\n                            <p>Price </p>\r\n                            <p>{pricelabel}</p>\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                            <p>Price</p>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <input type=\"text\" className=\"form-control\" value={price} name=\"price\"\r\n                                       onChange={this.change}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"row float-right mt-4\"}>\r\n                        <Button className={\"float-right\"} loading={loading} type=\"primary\"\r\n                                onClick={() => this.props.history.push( this.props.match.params.path?'/Discounts':'/Quotations')}>\r\n                            Back\r\n                        </Button>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-10 offset-1\">\r\n                        {loading ? <div className=\"text-center mt-5\"><Spin size=\"large\"/></div> : view}\r\n                        <div className=\"mt-3 float-right\">\r\n                            {!disabled ? <Button loading={loading} type=\"primary\" onClick={this.onSubmitHandler}>\r\n                                Update\r\n                            </Button> : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                </div>\r\n                <div className=\"row\">\r\n                </div>\r\n            </div>\r\n        </section>\r\n    }\r\n}\r\n\r\nexport default Edit;\r\n","import React, {Component} from 'react';\r\nimport {Button, message, Card} from \"antd\";\r\nimport PresaleServices from \"../Services/Api/Api\";\r\nimport {Select} from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nclass AddProject extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            customersFetched: [],\r\n            types: [{value: \"\", display: \"Select type\"}, {value: \"Office 365\", display: \"Office 365\"}, {\r\n                value: \"Cyber\",\r\n                display: \"Cyber\"\r\n            }, {\r\n                value: \"Manage Services\",\r\n                display: \"Manage Services\"\r\n            }],\r\n            customer_id: \"\",\r\n            project_name: \"\",\r\n            project_type: \"\"\r\n\r\n        }\r\n\r\n        this.props.setLocation('/Main')\r\n    }\r\n\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const {customer_id, project_name, project_type,} = this.state\r\n        let flag=false\r\n        if (customer_id==\"\") {\r\n            message.error(\"please Choose user\")\r\n            flag=true\r\n        }\r\n        if (project_name === \"\") {\r\n            message.error(\"Project name is necessary\")\r\n            flag=true\r\n        }\r\n        if (project_type === \"\") {\r\n            message.error(\"Project type is necessary\")\r\n            flag=true\r\n        }\r\n        if(!flag) {\r\n            PresaleServices.createProject(\r\n                {\r\n                    id:customer_id,\r\n                    name:project_name,\r\n                    project_type:project_type\r\n                }\r\n            ).then(() => {\r\n                message.success(\"Project created successfully.\")\r\n                this.props.history.push('/')\r\n            }).catch(() => {\r\n                message.error(\"name already taken.\")\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        PresaleServices.getProjectCustomers().then(res => {\r\n            if (res) {\r\n                if(res.length===0){\r\n                    message.error(\"please create customer first\")\r\n                }\r\n                let customersFetched = res.map(customer => {\r\n                    return {value: customer.id, display: customer.name};\r\n                });\r\n                customersFetched = [{value: \"\", display: \"Select Customer\"}].concat(\r\n                    customersFetched\r\n                );\r\n                this.setState({customersFetched: customersFetched});\r\n            }\r\n        });\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })}\r\n    onCancel=()=>{\r\n        this.props.history.push('/')\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            customer_id, types,\r\n            project_name, project_type, customersFetched\r\n\r\n        } = this.state\r\n        return (\r\n            <div className=\"col-md-6 offset-md-3\">\r\n\r\n                <h3 className=\"mt-5\">Add Project</h3>\r\n                <div className=\"form-group\">\r\n\r\n                    <input\r\n                        type=\"project\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Project Name\"\r\n                        name=\"project_name\"\r\n                        required\r\n                        onChange={this.onChange}\r\n                        value={project_name}\r\n\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"Select status\">select Type</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        name=\"project_type\"\r\n                        value={project_type}\r\n                        onChange={this.onChange}\r\n                        required\r\n                    >\r\n                        {types.map(type => (\r\n                            <option key={type.value} value={type.value}>\r\n                                {type.display}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"Select status\">select Customer</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        name=\"customer_id\"\r\n                        value={customer_id}\r\n                        onChange={this.onChange}\r\n                        required\r\n                    >\r\n                        {customersFetched.map(customer => (\r\n                            <option key={customer.value} value={customer.value}>\r\n                                {customer.display}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <Button className=\" ant-btn btn-success ant-btn-primary float-right \"\r\n                        onClick={this.onSubmit}>\r\n                   Create Project\r\n                </Button>\r\n\r\n                <Button className=\" ant-btn btn-success ant-btn-primary ant-btn-gray float-right\"\r\n                        onClick={this.onCancel} >\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default AddProject;","import React, {Component} from \"react\";\r\nclass NotFound extends Component {\r\n\r\n\r\n    onSubmit=()=>{\r\n        this.props.history.push(\"/\")\r\n    };\r\n    render() {\r\n        return<div className=\"page-wrap d-flex flex-row align-items-center\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <span className=\"display-1 d-block\">404</span>\r\n                        <div className=\"mb-4 lead\">The page you are looking for was not found.</div>\r\n                        <button type=\"submit\" className=\" ant-btn ant-btn-primary btn-success btn-block \"\r\n                                onClick={this.onSubmit}>\r\n                             back to Home Page\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nexport default NotFound","import React, {Component} from 'react'\r\nimport cookie from \"react-cookies\";\r\nimport Bill from '../Bills/Bill'\r\nimport Users from '../User/User'\r\nimport Payments from '../Payments/Payment'\r\nimport Discounts from '../Discount/Discount'\r\nimport Navbarz from '../Menu/Navbarz'\r\nimport 'antd/dist/antd.css'\r\nimport '../Main/style.scss'\r\nimport Navbary from '../Menu/Navbary'\r\nimport {HashRouter, Route, Switch} from 'react-router-dom'\r\nimport Login from \"../Auth/Login\";\r\nimport Main from '../Main/Main'\r\nimport EmailVerified from \"../Auth/EmailVerified\";\r\nimport Logout from \"../Auth/Logout\";\r\nimport Forget from \"../Auth/Forget\";\r\nimport Message from '../Auth/Message'\r\nimport Reset from \"../Auth/Reset\";\r\nimport ResetLink from '../Auth/ResetLink';\r\nimport PresaleServices from \"../Services/Api/Api\";\r\nimport EditProfile from \"../Common/EditProfile\";\r\nimport Customers from \"../Customer/Customer\";\r\nimport AddCustomer from \"../Customer/AddCustomer\";\r\nimport EditCustomer from \"../Customer/EditCustomer\";\r\nimport AddUser from \"../User/AddUser\";\r\nimport EditUser from \"../User/EditUser\";\r\nimport ResourceAssignment from \"../Common/ResourceAssignment\";\r\nimport EditQuotation from '../Bills/EditQuotation'\r\nimport AddProject from \"../Common/AddProject\";\r\nimport NotFound from '../Common/NotFound'\r\nimport {message} from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nclass PrivateRoutes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: cookie.load(\"admin_token\"),\r\n            name: \"\",\r\n            id: -1,\r\n            company_name: \"VaporVM\",\r\n            location: \"\",\r\n\r\n            permissions: [],\r\n            users: {\r\n                read: false,\r\n                write: false\r\n            }, payments: {\r\n                read: false,\r\n                write: false\r\n            }, quotations: {\r\n                read: false,\r\n                write: false\r\n            }, discounts: {\r\n                read: false,\r\n                write: false\r\n            },\r\n            customers: {\r\n                read: false,\r\n                write: false\r\n            },\r\n            projects: {\r\n                read: false,\r\n                write: false\r\n            },\r\n            permissionsSet: false,\r\n\r\n            resourceAssign: false\r\n        }\r\n        this.props.setToken(this.state.token)\r\n\r\n    }\r\n\r\n    setPermissions = () => {\r\n        let users = [], payments = [], quotations = [], discounts = [], customers = [], resourceAssign = false,\r\n            projects = []\r\n        this.state.permissions.forEach(e => {\r\n            if (e.includes(\"users\")) {\r\n                if (e.includes(\"create\")) {\r\n                    users['read'] = true\r\n                    users['write'] = true\r\n                } else {\r\n                    users['read'] = true\r\n                    users['write'] = false\r\n                }\r\n            }\r\n            if (e.includes(\"payments\")) {\r\n                if (e.includes(\"create\")) {\r\n                    payments['read'] = true\r\n                    payments['write'] = true\r\n                } else {\r\n                    payments['read'] = true\r\n                    payments['write'] = false\r\n                }\r\n            }\r\n            if (e.includes(\"quotations\")) {\r\n                if (e.includes(\"create\")) {\r\n                    quotations['read'] = true\r\n                    quotations['write'] = true\r\n                } else {\r\n                    quotations['read'] = true\r\n                    quotations['write'] = false\r\n                }\r\n            }\r\n            if (e.includes(\"discounts\")) {\r\n                if (e.includes(\"create\")) {\r\n                    discounts['read'] = true\r\n                    discounts['write'] = true\r\n                } else {\r\n                    discounts['read'] = true\r\n                    discounts['write'] = false\r\n                }\r\n            }\r\n            if (e.includes(\"customers\")) {\r\n                if (e.includes(\"create\")) {\r\n                    customers['read'] = true\r\n                    customers['write'] = true\r\n                } else {\r\n                    customers['read'] = true\r\n                    customers['write'] = false\r\n                }\r\n            }\r\n            if (e.includes(\"projects\")) {\r\n                if (e.includes(\"create\")) {\r\n                    projects['read'] = true\r\n                    projects['write'] = true\r\n                } else {\r\n                    projects['read'] = true\r\n                    projects['write'] = false\r\n                }\r\n            }\r\n            if (e.includes(\"resource-assignment\")) {\r\n                resourceAssign = true\r\n            }\r\n\r\n        })\r\n        this.setState({\r\n\r\n            users: users,\r\n            payments: payments,\r\n            quotations: quotations,\r\n            discounts: discounts,\r\n            customers: customers,\r\n            resourceAssign: resourceAssign,\r\n            projects: projects,\r\n            permissionsSet: true\r\n        }, () => {\r\n            this.props.setPermissions(this.state.users, this.state.customers, this.state.quotations,\r\n                this.state.discounts, this.state.payments, this.state.resourceAssign\r\n            )\r\n        })\r\n    }\r\n    setToken = token => {\r\n\r\n        this.setState({\r\n            token: token,\r\n        });\r\n        if (token === \"\") {\r\n            this.setState({\r\n                name: \"\",\r\n                company_name: \"\"\r\n            })\r\n        }\r\n        this.props.setToken(token)\r\n    }\r\n    setName = name => {\r\n\r\n        this.setState({\r\n            name: name,\r\n        });\r\n\r\n    }\r\n\r\n    setLocation = location => {\r\n\r\n        this.setState({\r\n            location: location\r\n        });\r\n        this.props.setKey(location)\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.state.token !== \"\"&&this.state.token !==undefined)\r\n            PresaleServices.getName().then(res => {\r\n                    this.setState({\r\n                            name: res.name,\r\n                            permissions: res.permissions,\r\n                            id: res.id\r\n                        }\r\n\r\n                        , () => {\r\n                            const api = {\r\n                                Authorization: \"Bearer \" + this.state.token\r\n                            }\r\n\r\n                            axios.put('/dashboard/api/user/' + res.id + '/online', null, {headers: api});\r\n                            if (this.state.permissions.length === 0) {\r\n                                message.error('you do not have enough rights')\r\n\r\n                            } else\r\n                                this.setPermissions();\r\n                        })\r\n\r\n                }\r\n            ).catch(() => {\r\n                cookie.remove(\"admin_token\", {\r\n                    path: \"/\",\r\n                });\r\n\r\n                this.setToken(\"\")\r\n                this.props.setToken(\"\")\r\n                this.props.history.push('/Login')\r\n            });\r\n    }\r\n\r\n    setLocation = location => {\r\n\r\n        this.setState({\r\n            location: location\r\n        });\r\n        this.props.setKey(location);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.state.token !== \"\" && this.state.token !== prevState.token && this.props.calling !== true) {\r\n            PresaleServices.getName().then(res => {\r\n                    const api = {\r\n                        Authorization: \"Bearer \" + this.state.token\r\n                    }\r\n                    axios.put('/dashboard/api/user/' + res.id + '/online', null, {headers: api});\r\n                    this.setState({\r\n                            name: res.name,\r\n                            permissions: res.permissions,\r\n                            id: res.id\r\n                        }\r\n                    )\r\n                    this.setPermissions();\r\n\r\n                }\r\n            ).catch(() => {\r\n                cookie.remove(\"admin_token\", {\r\n                    path: \"/\",\r\n                });\r\n                this.setToken(\"\")\r\n\r\n                this.props.setToken(\"\")\r\n                this.props.history.push('/Login')\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        window.scrollTo(0, 0)\r\n        let {\r\n            token, name, location, users, customers, quotations, discounts, projects,\r\n            payments, resourceAssign\r\n        } = this.state;\r\n\r\n        if (token === undefined)\r\n            token = \"\";\r\n\r\n        let condition = token !== undefined && token !== \"\" &&\r\n            (!this.state.permissionsSet || this.state.permissions.length !== 0);\r\n        return condition ?\r\n            <HashRouter>\r\n                <Navbarz name={name} location={location} token={this.state.token} history={this.props.history}\r\n                         id={this.state.id}\r\n                />\r\n                <div>\r\n                    <Switch>\r\n\r\n\r\n                        />\r\n                        <Route path={'//dashboard'} render={(props) => <Main{...props}\r\n                                                                                       name={this.state.name}\r\n                                                                                       company_name={this.state.company_name}\r\n                                                                                       setLocation={this.setLocation}\r\n                                                                                       canWrite={resourceAssign}\r\n                                                                                       token={this.state.token}\r\n                                                                                       canCreateProject={this.state\r\n                                                                                           .projects['write']}\r\n                        />}/>\r\n                        <Route path={'/Login'} render={(props) => <Main{...props}\r\n                                                                       name={this.state.name}\r\n                                                                       company_name={this.state.company_name}\r\n                                                                       setLocation={this.setLocation}\r\n                                                                       canWrite={resourceAssign}\r\n                                                                       token={this.state.token}\r\n                                                                       canCreateProject={this.state\r\n                                                                           .projects['write']}\r\n                        />}/>\r\n                        <Route\r\n\r\n                            exact path={'/EditProfile'} render={(props) => <EditProfile{...props}\r\n                                                                                       setName={this.setName}\r\n\r\n\r\n                        />}/>\r\n                        {users['write'] ?\r\n                            <Route\r\n                                exact path={'/AddUser'} render={(props) => <AddUser{...props}\r\n                                                                                   setName={this.setName}\r\n\r\n\r\n                            />}/> : null}\r\n                        {users['write'] ?\r\n                            <Route\r\n                                exact path={'/EditUser/:id'} render={(props) => <EditUser{...props}\r\n                                                                                         setName={this.setName}\r\n\r\n\r\n                            />}/> : null}\r\n                        {customers['write'] ?\r\n                            <Route\r\n                                exact path={'/AddCustomer'} render={(props) => <AddCustomer{...props}\r\n                                                                                           setName={this.setName}\r\n\r\n\r\n                            />}/>\r\n                            : null}\r\n                        {projects['write'] ?\r\n                            <Route\r\n                                exact path={'/AddProject'} render={(props) => <AddProject{...props}\r\n                                                                                         setLocation={this.setLocation}\r\n\r\n\r\n                            />}/>\r\n                            : null}\r\n                        {customers['write'] ?\r\n                            <Route\r\n                                exact path={'/EditCustomer/:id'} render={(props) => <EditCustomer{...props}\r\n                                                                                                 setName={this.setName}\r\n\r\n\r\n                            />}/> : null\r\n                        }{projects['read'] ?\r\n                        <Route\r\n                            exact path={'/'} render={(props) => <Main{...props}\r\n                                                                     name={this.state.name}\r\n                                                                     company_name={this.state.company_name}\r\n                                                                     setLocation={this.setLocation}\r\n                                                                     canWrite={resourceAssign}\r\n                                                                     token={this.state.token}\r\n                                                                     canCreateProject={this.state\r\n                                                                         .projects['write']}\r\n                        />\r\n                        }\r\n                        /> : null}\r\n                        <Route\r\n                            exact path={'/Main'} render={(props) => <Main{...props}\r\n                                                                     name={this.state.name}\r\n                                                                     company_name={this.state.company_name}\r\n                                                                     setLocation={this.setLocation}\r\n                                                                     canWrite={resourceAssign}\r\n                                                                     token={this.state.token}\r\n                                                                     canCreateProject={this.state\r\n                                                                         .projects['write']}\r\n                        />\r\n                        }\r\n                        /> : null}\r\n                        {users['read'] ?\r\n                            <Route\r\n                                exact path={'/Users'} render={(props) => <Users{...props}\r\n                                                                               setLocation={this.setLocation}\r\n                                                                               canwrite={users['write']}\r\n                            />}\r\n\r\n                            /> : null}\r\n\r\n                        {resourceAssign ?\r\n                            <Route\r\n                                exact path={'/Resource'} render={(props) => <ResourceAssignment{...props}\r\n                                                                                               setLocation={this.setLocation}\r\n                                                                                               canwrite={users['write']}\r\n                            />}\r\n\r\n                            /> : null}\r\n                        {resourceAssign ?\r\n                            <Route\r\n                                exact path={'/Resource/:projectName'} render={(props) => <ResourceAssignment{...props}\r\n                                                                                                            setLocation={this.setLocation}\r\n                                                                                                            canwrite={users['write']}\r\n                            />}\r\n\r\n                            /> : null}\r\n                        {payments['read'] ?\r\n                            <Route\r\n                                exact path={'/Payments'} render={(props) => <Payments{...props}\r\n                                                                                     setLocation={this.setLocation}\r\n                            />}\r\n\r\n                            />\r\n                            : null}\r\n                        {discounts['read'] ?\r\n                            <Route\r\n                                exact path={'/Discounts'} render={(props) => <Discounts{...props}\r\n                                                                                       setLocation={this.setLocation}\r\n                                                                                       canWrite={discounts['write']}\r\n                            />}\r\n\r\n                            /> : null\r\n                        }\r\n                        {customers['read'] ?\r\n                            <Route\r\n                                exact path={'/Customers'} render={(props) => <Customers{...props}\r\n                                                                                       setLocation={this.setLocation}\r\n                                                                                       canwrite={customers['write']}\r\n                            />}\r\n\r\n                            /> : null}\r\n                        {quotations['read'] ?\r\n\r\n                            <Route\r\n                                exact path={'/Quotations'} render={(props) => <Bill{...props}\r\n                                                                                   setLocation={this.setLocation}\r\n\r\n                                                                                   canWrite={quotations['write']}\r\n                            />}\r\n\r\n                            /> : null}\r\n\r\n                        {quotations['write'] ?\r\n\r\n                            <Route\r\n                                exact path={'/Edit/:refrenceNo/:path'} render={(props) => <EditQuotation{...props}\r\n                                                                                                        setLocation={this.setLocation}\r\n                            />}\r\n\r\n                            /> : null}\r\n\r\n                        {quotations['write'] ?\r\n\r\n                            <Route\r\n                                exact path={'/View/:refrenceNo/:path'} render={(props) => <EditQuotation{...props}\r\n                                                                                                        setLocation={this.setLocation}\r\n                            />}\r\n\r\n                            /> : null}\r\n\r\n                        {quotations['write'] ?\r\n\r\n                            <Route\r\n                                exact path={'/Edit/:refrenceNo/'} render={(props) => <EditQuotation{...props}\r\n                                                                                                   setLocation={this.setLocation}\r\n                            />}\r\n\r\n                            /> : null}\r\n\r\n                        {quotations['write'] ?\r\n\r\n                            <Route\r\n                                exact path={'/View/:refrenceNo/'} render={(props) => <EditQuotation{...props}\r\n                                                                                                   setLocation={this.setLocation}\r\n                            />}\r\n\r\n                            /> : null}\r\n                        <Route\r\n                            exact path={'/logout'} render={(props) => <Logout{...props}\r\n                                                                             setToken={this.setToken}\r\n                                                                             token={this.state.token}\r\n                                                                             id={this.state.id}\r\n                        />}\r\n\r\n                        />\r\n\r\n                        {this.state.permissions.length ? <Route component={NotFound}/> : null}\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n            : <HashRouter>\r\n                <Navbary/>\r\n                <div>\r\n                    <Switch>\r\n                        < Route\r\n                            exact path={'/Login'} render={(props) => <Login{...props} setToken={this.setToken}\r\n                        />}\r\n                        />\r\n                        <Route path={'/VerifyEmail/:email'} component={EmailVerified}/>\r\n                        <Route path={'/Forget'} component={Forget}/>\r\n                        <Route path={'/Message'} component={Message}/>\r\n                        <Route exact path={'/Reset/:token'} component={Reset}/>\r\n                        <Route exact path={'/ResetLink'} component={ResetLink}/>\r\n                        <Route\r\n                            render={(props) => <Login{...props}\r\n                                                     setToken={this.setToken}\r\n                            />}/>\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n    }\r\n\r\n}\r\n\r\nexport default PrivateRoutes;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Link, HashRouter} from \"react-router-dom\"\r\nimport \"antd/dist/antd.css\";\r\nimport \"../index.css\";\r\nimport {Layout, Menu} from \"antd\";\r\nimport {\r\n  PayCircleOutlined,\r\n    WalletOutlined,\r\n    UserAddOutlined,\r\n    ProfileOutlined,\r\nUsergroupAddOutlined,\r\n   ReconciliationOutlined\r\n} from \"@ant-design/icons\";\r\nimport PrivateRoutes from \"../Routes/PrivateRoutes\";\r\nimport cookie from \"react-cookies\";\r\n\r\nconst {Header, Sider, Content,Footer} = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\nclass MainLayOut extends React.Component {\r\n\r\n    onCollapse = collapsed => {\r\n\r\n        this.setState({collapsed});\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: \"\",\r\n            collapsed: false,\r\n            key: \"/\",\r\n            calling:false,\r\n            called:false,\r\n            users:{\r\n                read:false,\r\n                write:false\r\n            },payments:{\r\n                read:false,\r\n                write:false\r\n            },quotations:{\r\n                read:false,\r\n                write:false\r\n            },discounts:{\r\n                read:false,\r\n                write:false\r\n            },\r\n            customers:{\r\n                read:false,\r\n                write:false\r\n            },\r\n            resourceAssignment:false\r\n        }\r\n    }\r\n\r\n    setKey = key => {\r\n        this.setState({\r\n            key: key\r\n        })\r\n    }\r\n    setToken = token => {\r\n        this.setState({\r\n            token: token,\r\n            calling:true\r\n        });\r\n        if(token===\"\")\r\n            this.setState({\r\n                calling:false\r\n            })\r\n\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        });\r\n    };\r\n    setPermissions=(users,customers,quotations,discounts,payments,resourceAssignment)=>{\r\n        this.setState({\r\n            users:users,customers:customers,quotations:quotations,\r\n            discounts:discounts,payments:payments,resourceAssignment:resourceAssignment\r\n            ,called:true\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const {token,users,customers,quotations,discounts,payments,resourceAssignment} = this.state;\r\n        let{key}=this.state;\r\n        return (token ? <Layout>\r\n                    <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n                        <HashRouter>\r\n                            <Menu className=\"mt-5\" theme=\"dark\" mode=\"inline\" selectedKeys={[key]}>\r\n                                    <Menu.Item key=\"/\">\r\n                                        <ProfileOutlined style={{fontSize: '36px', color: '#a8c438'}}/>\r\n                                        <span style={{fontSize: '16px', color: '#a8c438'}}>\r\n                                <Link to={'/'}> Projects\r\n                                </Link>\r\n                            </span>\r\n                                    </Menu.Item>\r\n                                {users['read']?\r\n                                    <Menu.Item key=\"/Users\">\r\n                                    <UserAddOutlined style={{ fontSize: '36px', color: '#a8c438' }} />\r\n                                    <span>\r\n                                 <Link to={'/Users'}> Users\r\n                            </Link>\r\n                            </span>\r\n\r\n                                </Menu.Item>:null}\r\n                                {customers['read']?\r\n                                    <Menu.Item key=\"/Customers\">\r\n                                    <UsergroupAddOutlined style={{fontSize: '36px', color: '#a8c438'}}/>\r\n                                    <span>\r\n                                <Link to={'/Customers'}> Customers\r\n                            </Link>\r\n                            </span>\r\n                                </Menu.Item>:null\r\n                                }\r\n                                {payments['read']?\r\n                                    <Menu.Item key=\"/Payments\">\r\n                                    <WalletOutlined style={{fontSize: '36px', color: '#a8c438'}}/>\r\n                                    <span>\r\n                                  <Link to={'/Payments'}> Payments\r\n                            </Link>\r\n                            </span>\r\n                                </Menu.Item>:null\r\n                                }\r\n                                {discounts['read']?\r\n                                <Menu.Item key=\"/Discounts\">\r\n                                    <PayCircleOutlined style={{fontSize: '36px', color: '#a8c438'}}/>\r\n                                    <span>\r\n                                        <Link to={'/Discounts'}> Discounts\r\n                                    </Link>\r\n                                    </span>\r\n                                </Menu.Item>:null\r\n                            }\r\n                            {quotations['read']?\r\n                                <Menu.Item key=\"/Quotations\">\r\n                                    <ReconciliationOutlined style={{fontSize: '36px', color: '#a8c438'}}/>\r\n                                    <span>\r\n                                         <Link to={'/Quotations'}> Quotations\r\n                                    </Link>\r\n                                    </span>\r\n                                </Menu.Item>:null\r\n                            }\r\n                                {resourceAssignment?\r\n                                    <Menu.Item key=\"/Resource\">\r\n                                        <ReconciliationOutlined style={{fontSize: '36px', color: '#a8c438'}}/>\r\n                                        <span>\r\n                                         <Link to={'/Resource'}> Resource Assignment\r\n                                    </Link>\r\n                                    </span>\r\n                                    </Menu.Item>:null\r\n                                }\r\n                            </Menu>\r\n                        </HashRouter>\r\n                    </Sider>\r\n\r\n                    <Layout className=\"site-layout\">\r\n                    <Content\r\n                            className=\"site-layout-background\"\r\n                            style={{\r\n                                //margin: \"24px 16px\",\r\n                                padding: 0,\r\n                                minHeight: 980\r\n                            }}\r\n\r\n                        >\r\n                            <PrivateRoutes token={this.state.token} setToken={this.setToken}\r\n                                           setKey={this.setKey} setPermissions={this.setPermissions}\r\n                                           calling={this.state.calling}\r\n                                           history={this.props.history}\r\n                            />\r\n                        </Content>\r\n                        <Footer style={{ textAlign: 'center' }}>CopyRights © Vaporvm.com 2020</Footer>\r\n                    </Layout>\r\n                </Layout> :\r\n                <PrivateRoutes token={this.state.token} setToken={this.setToken} setKey={this.setKey}\r\n                               setPermissions={this.setPermissions}\r\n                               calling={this.state.calling}\r\n                />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MainLayOut;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport '../src/Main/style.scss'\r\nimport MainLayOut from \"./Common/Layout\";\r\nimport 'antd/dist/antd.css'\r\nimport {HashRouter, Route,Switch} from 'react-router-dom'\r\nfunction App() {return(\r\n  <HashRouter>\r\n\r\n    <Route component={MainLayOut}/>\r\n\r\n    </HashRouter>\r\n)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'antd/dist/antd.css'\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}