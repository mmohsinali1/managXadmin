{"version":3,"sources":["Common/tune.mp3","Common/Pagination.js","Services/Api/Constant.js","Services/requests.js","Services/Api/Api.js","Bills/Bill.js","User/User.js","Payments/Payment.js","Discount/Discount.js","Menu/RightMenu.js","Common/UserStatus.js","Menu/Navbarz.js","Menu/Signin.js","Menu/Navbary.js","Auth/Login.js","Main/Progress.js","Main/AssignedAdmin.js","Main/Projects.js","Main/Main.js","Auth/EmailVerified.js","Auth/Logout.js","Auth/Forget.js","Auth/Message.js","Auth/Reset.js","Auth/ResetLink.js","Common/EditProfile.js","Customer/Customer.js","Common/Phone.js","Customer/AddCustomer.js","Customer/EditCustomer.js","User/AddUser.js","User/EditUser.js","Common/ResourceAssignment.js","Services/Api/Survey.js","Bills/EditQuotation.js","Common/AddProject.js","Common/NotFound.js","Routes/PrivateRoutes.js","Common/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","index","Math","ceil","push","className","map","number","key","onClick","BASE_URl","request","options","axios","create","headers","Authorization","cookie","load","client","then","response","data","catch","err","status","remove","path","window","location","reload","console","error","message","Promise","reject","PresaleServices","getProjectStatus","url","method","login","forget","getUsers","sendUser","getStatusKey","id","resetPassword","getBills","getName","logOut","getDiscounts","getPayments","getRoles","getCustomers","createUser","getUser","editUser","getCustomer","editCustomer","createCustomer","getUserNames","assignResources","getUserProject","name","geteditProfile","editProfile","createProject","getProjectCustomers","Bill","props","onChangeHandler","e","preventDefault","state","searched","value","target","type","temp","split","reverse","join","filtered","filter","el","lc","toLowerCase","includes","searchingflag","setState","searching","indexOfLastItem","indexOfFirstItem","slice","pageNumber","currentFiltered","currentPage","editQuotation","reference_no","history","loggedIn","loaded","setLocation","pathname","res","cyber_security","concat","office365","length","log","this","tableRows","item","company_name","amount","quoted_date","payment_date","canWrite","FormOutlined","EyeOutlined","style","clear","width","marginLeft","class","placeholder","onChange","required","Component","Users","addUserPage","email","role_name","canwrite","EditOutlined","Discount","textAlign","SubMenu","Menu","RightMenu","prevProps","prevState","snapshot","mode","title","href","ItemGroup","Item","to","UserStatus","handleOk","callVisible","calling","api","room","audio","put","iframe","callFrom","open","document","write","pause","currentTime","handleCancel","myId","socketio","broadcaster","host","hostname","forceTLS","encrypted","authEndpoint","auth","token","Accept","redirect","Audio","mp3_file","loop","echo","Echo","private","listen","on","joining","user","leaving","vcall","play","visible","onOk","onCancel","footer","withRouter","Navbarz","current","showModal","showDrawer","onClose","src","alt","placement","closable","Signin","collapsed","Login","onInput","onSubmit","loading","password","api_key","save","maxAge","setToken","toString","undefined","pattern","onBlur","Progress","progress","total","complete","AssignedAdmin","users","myUser","size","Panel","Collapse","GenExtra","UpCircleOutlined","fontSize","color","DownCircleOutlined","MyProject","ProjectComp","due_date","percentage","strokeColor","percent","action","changeFile","UploadOutlined","stopPropagation","Projects","info","file","fileList","success","fetching","projectData","tasks","first","view","accordion","showArrow","header","extra","Index","project_data","taskInProgress","taskComplete","ProjectComplete","Project_Data","Total_Projects","Tasks_Completed","Tasks_In_Progress","canCreateProject","EmailVerified","match","params","LogOut","To","Forget","Message","Reset","password_confirmation","errors","repassword","OnInput","ResetLink","EditProfile","flag","setName","phone","Customers","addCustomerPage","Phone","setValue","initial","AddUser","setPhone","onSubmitHandler","htmlFor","EditUser","roles","display","statuses","rolesFetched","role","_status","_role","user_role","localStorage","setItem","JSON","stringify","Option","Select","ResourceAssignment","selected","project","handleChange","projects","i","projectName","projectsFetched","parse","getItem","usersFetched","empty","projetName","showSearch","defaultValue","optionFilterProp","filterOption","input","option","children","indexOf","allowClear","ServeyServics","OfficeSurveyPaymnet","getQuestionAns","sendAnswer","sendAnswerGoogle","sendCyberAnswerGoogle","sendCyberAnswerln","sendAnswerln","sendAnswerFacebook","sendCyberAnswerFacebook","getAnswerDetail","sendCyberAnswer","getCyberQuestionAns","sendEditAnswer","getCyberAnswerDetail","sendCyberEditAnswer","getCyberPrice","getOfficePrice","officePayment","officePaymentRef","CyberPaymentRef","question","disabled","Edit","editData","checked","ans","refrence_no","refrenceNo","customer_name","quotation_date","price","pricelabel","editQuestion","$r","Object","values","q","Questions","onSaveHandler","survey_type","selectedAnswers","forEach","selected_ans","tag","setTimeout","postAns","btnloading","SurveyServics","getAnsDetail","check","splice","survey_questions","answers","onCrossHandler","change","q_visible","theme","border","borderRadius","padding","val","span","q_disabled","React","AddProject","customer_id","project_name","project_type","customersFetched","types","customer","NotFound","PrivateRoutes","setPermissions","payments","quotations","discounts","customers","resourceAssign","permissions","permissionsSet","setKey","read","scrollTo","render","Main","exact","EditQuotation","Logout","component","Navbary","Sider","Layout","Header","Content","Footer","MainLayOut","onCollapse","toggle","resourceAssignment","called","collapsible","selectedKeys","ProfileOutlined","UserAddOutlined","UsergroupAddOutlined","WalletOutlined","PayCircleOutlined","ReconciliationOutlined","minHeight","App","Boolean","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c14113fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tune.148c2dca.mp3\";","import React from \"react\";\n\nconst Pagination = ({itemsPerPage, totalItems, paginate}) => {\n    const pageNumbers = [];\n    for (let index = 1; index <= Math.ceil(totalItems / itemsPerPage); index++) {\n        pageNumbers.push(index);\n    }\n\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pageNumbers.map(number => (\n                    <li key={number} className=\"page-item\">\n                        <a onClick={() => paginate(number)} className=\"page-link\">\n                            {number}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\n\nexport default Pagination;\n","export const BASE_URl = \"/api-gateway/\";","import axios from 'axios'\nimport cookie from \"react-cookies\";\n\n\nconst request = function (options) {\n\n    const onSuccess = function (response) {\n        return response.data;\n    };\n\n    const onError = function (err) {\n\n        if (err.response) {\n            if(err.response.status===401){\n                cookie.remove(\"admin_token\", {\n                    path: \"/\",\n                });\n\n                window.location.reload()\n            }\n            // Request was made but server responded with something other than 2xx\n            // console.error('Status:', err.response.status);\n            // console.error('Data:', err.response.data);\n            // console.error('Headers:', err.response.headers);\n        } else {\n\n            // Something else happened while setting up the request triggered the error\n            console.error('Error Message:', err.message);\n        }\n\n        //return Promise.reject(err.response || err.message);\n        return Promise.reject(err);\n    };\n    const client = axios.create({ headers: { Authorization: cookie.load('admin_token') } });\n    return client(options)\n        .then(onSuccess)\n        .catch(onError);\n};\n\nexport default request;","import {BASE_URl} from './Constant'\nimport request from '../requests'\n\nfunction getProjectStatus() {\n    return request({\n        url: `${BASE_URl}admin/getallprojectstatus`,\n        method: 'GET'\n    })\n}\n\nfunction login(data) {\n    return request({\n        url: `${BASE_URl}admin/login`,\n        method: 'POST',\n        data\n    })\n}\n\nfunction forget(data){\n    return request({\n        url: `${BASE_URl}users/forgotPassword`,\n        method: 'POST',\n        data\n    })\n}\n\n\nfunction createUser(data){\n    return request({\n        url: `${BASE_URl}admin/createuser`,\n        method: 'POST',\n        data\n    })\n}\n\nfunction resetPassword(data){\n    return request({\n        url: `${BASE_URl}users/resetPassword`,\n        method: 'POST',\n        data\n    })\n}\nfunction logOut(){\n    return request({\n        url: `${BASE_URl}logout`,\n        method: 'POST',\n\n    })\n}\nfunction getName(){\n    return request({\n        url: `${BASE_URl}admin/getname`,\n        method: 'GET',\n    })\n}\nfunction getRoles(){\n    return request({\n        url: `${BASE_URl}admin/getroles`,\n        method: 'GET',\n    })\n}\nfunction getUserNames(){\n    return request({\n        url: `${BASE_URl}admin/getassignresources`,\n        method: 'GET',\n    })\n}\n\nfunction getUserProject(name){\n    return request({\n        url: `${BASE_URl}admin/getprojectresources/`+name,\n        method: 'GET',\n    })\n}\n\nfunction getBills(){\n    return request({\n        url: `${BASE_URl}admin/getallbills`,\n        method: 'GET',\n    })\n}\n\nfunction getPayments(){\n    return request({\n        url: `${BASE_URl}admin/getallpayments`,\n        method: 'GET',\n    })\n}\n\n\n function getUsers() {\n     return request({\n         url: `${BASE_URl}admin/getallusers`,\n         method: 'GET',\n     })\n }\nfunction createCustomer(data){\n    return request({\n        url: `${BASE_URl}admin/createcustomer`,\n        method: 'POST',\n        data\n    })\n}\n\nfunction getCustomer(id) {\n    return request({\n        url: `${BASE_URl}admin/geteditcustomer/`+id,\n        method: 'GET',\n    })\n}\nfunction editCustomer(data){\n    return request({\n        url: `${BASE_URl}admin/editcustomer/`+data.id,\n        method: 'POST',\n        data\n    })\n}\nfunction getUser(id) {\n    return request({\n        url: `${BASE_URl}admin/getedituser/`+id,\n        method: 'GET',\n    })\n}\nfunction geteditProfile(){\n    return request({\n        url: `${BASE_URl}users/getedit`,\n        method: 'GET',\n    })\n}\n\nfunction editUser(data){\n    return request({\n        url: `${BASE_URl}admin/edituser/`+data.id,\n        method: 'POST',\n        data\n    })\n}\n\nfunction editProfile(data){\n    return request({\n        url: `${BASE_URl}users/editprofile`,\n        method: 'POST',\n        data\n    })\n}\nfunction sendUser(data){\n    return request({\n        url: `${BASE_URl}users/editprofile`,\n        method: 'POST',\n        data\n    })\n}\n\nfunction assignResources(data){\n    return request({\n        url: `${BASE_URl}admin/assignresources`,\n        method: 'POST',\n        data\n    })\n}\nfunction createProject(data){\n    return request({\n        url: `${BASE_URl}admin/createproject`,\n        method: 'POST',\n        data\n    })\n}\n\n\nfunction getCustomers() {\n    return request({\n        url: `${BASE_URl}admin/getallcustomers`,\n        method: 'GET',\n    })\n}\n\nfunction getProjectCustomers() {\n    return request({\n        url: `${BASE_URl}admin/getcreateprojectdata`,\n        method: 'GET',\n    })\n}\n\nfunction getDiscounts() {\n    return request({\n        url: `${BASE_URl}admin/getalldiscounts`,\n        method: 'GET',\n    })\n}\nfunction getStatusKey(id) {\n    return request({\n        url: `${BASE_URl}admin/gettasks/${id}`,\n    })\n}\n const PresaleServices={\ngetProjectStatus,\n     login,\n     forget,\n     getUsers,\n     sendUser,\n     getStatusKey,\n     resetPassword,\n     getBills,\n     getName,\n     logOut,\n     getDiscounts,\n     getPayments,\n     getRoles,\n     getCustomers,\n     createUser,\n     getUser,\n     editUser,\n     getCustomer,\n     editCustomer,\n     createCustomer,\n     getUserNames,\n     assignResources,\n     getUserProject,\n     geteditProfile,\n     editProfile,\n     createProject,\n     getProjectCustomers\n};\n\n\nexport default PresaleServices","import React, {Component} from 'react';\nimport cookie from \"react-cookies\";\nimport Pagination from \"../Common/Pagination\";\nimport {Redirect} from 'react-router-dom'\nimport PresaleServices from '../Services/Api/Api';\nimport { FormOutlined,EyeOutlined } from '@ant-design/icons';\nexport default class Bill extends Component {\n    constructor(props) {\n        super(props);\n        let loggedIn = null;\n        this.state = {\n            loggedIn,\n            data: [],\n            filtered: [],\n            searched: [],\n            currentPage: 1,\n            itemsPerPage: 5,\n            searching:false,\n            loaded:false\n        };\n        this.props.setLocation(this.props.history.location.pathname)\n    }\n\n    onChangeHandler = e => {\n        e.preventDefault();\n        const {data, searched,itemsPerPage} = this.state;\n        const currentPage=1;\n        let value = e.target.value;\n        if(e.target.type==\"date\"){\n            let temp=value.split(\"-\")\n            temp=temp.reverse();\n            value=temp.join('/')\n        }\n        let filtered = [...data];\n        let key = e.target.name;\n        searched[key] = value;\n        for (key in searched) {\n            value = searched[key];\n            if (value !== \"\") {\n                filtered = filtered.filter(el => {\n                    const lc = el[key].toLowerCase();\n                    const filter = value.toLowerCase();\n                    return lc.includes(filter);\n                });\n            }\n        }\n        let searchingflag=false;\n        for (key in searched){\n\n            value=searched[key];\n            if(value!==\"\")\n                searchingflag=true\n        }\n        if(!searchingflag){\n            const indexOfLastItem = currentPage * itemsPerPage;\n            const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n            this.setState({\n                filtered: filtered.slice(\n                    indexOfFirstItem, indexOfLastItem\n                ),\n                searched: searched,\n                searching:false\n            });\n        }\n        else\n            this.setState({\n                filtered: filtered,\n                searched: searched,\n                searching:true\n            });\n    };\n\n    componentDidMount() {\n        PresaleServices.getBills()\n            .then(res =>  {\n\n                const { currentPage, itemsPerPage} = this.state;\n                const indexOfLastItem = currentPage * itemsPerPage;\n                const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n                let currentFiltered;\n                let data=res.data.cyber_security\n                data= data.concat(res.data.office365)\n\n                this.setState({\n                    data\n                },()=>{\n                    if(data.length){\n                        const temp = [...data];\n                        currentFiltered = temp.slice(\n                            indexOfFirstItem,\n                            indexOfLastItem\n                        );}\n                    else {\n                        currentFiltered=[]\n                    }\n                    this.setState({filtered: currentFiltered,loaded:true});\n                });\n            })\n            .catch(err => console.log(err));\n    }\n\n    paginate = pageNumber => {\n        const {data,itemsPerPage} = this.state;\n        const indexOfLastItem = pageNumber * itemsPerPage;\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n        const temp = [...data];\n        const currentFiltered = temp.slice(indexOfFirstItem, indexOfLastItem);\n        this.setState({currentPage: pageNumber, filtered: currentFiltered});\n    };\n\n    editQuotation=reference_no=>{\n        this.props.history.push(`/Edit/${reference_no}`)\n    };\n\n    render() {\n        const {filtered, itemsPerPage, data,searching,loaded} = this.state;\n\n        const tableRows = filtered.length ? (\n            filtered.map((item, index) => {\n                return (\n                    <tr className=\"text-left\" key={index}>\n                        <td>{item.name}</td>\n                        <td>{item.company_name}</td>\n                        <td>{item.amount}</td>\n                        <td>{item.status}</td>\n                        <td >{item.reference_no}</td>\n                        <td>{item.quoted_date}</td>\n                        <td>{item.payment_date}</td>\n                        {\n                            this.props.canWrite?<td>{\n                               item.status!==\"Paid\"? <FormOutlined onClick={() => this.editQuotation(item.reference_no)}/>\n                            : <EyeOutlined onClick={() => this.props.history.push(`/View/${item.reference_no}`)} />\n                            }\n                            </td>\n                        :null}</tr>\n                );\n            })\n        ) : (\n            loaded?<tr>\n                <td>\n                    <p className=\"text-danger\">No record found</p>\n                </td>\n            </tr>:null\n        );\n        return (\n            <div>\n                <div className=\"content search-table-wrapper\"\n                     id=\"main-content\"\n                     style={{clear: \"both\", width: \"90%\", marginLeft: \"8%\"}}\n                >\n                    <div class=\"card mt-3\">\n                        <div class=\"card-header text-bolder\">\n                            <h4 className=\"font-weight-bold mb-0\">Manage Bills And Payments</h4>\n                        </div>\n                        <div class=\"card-body\">\n                            <table class=\"table \">\n                                <thead>\n                                {/*                 <tr className=\"text-left\">\n                                <th >Customer Name</th>\n                                <th >Company Name</th>\n                                <th >Reference Number</th>\n                                <th >Amount</th>\n                                <th >Quotation date</th>\n\n                            </tr>*/}\n                                <tr>\n\n                                    <th>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"name\"\n                                            placeholder=\"Name\"\n                                            onChange={this.onChangeHandler}\n                                            required\n\n                                        />\n                                    </th>\n\n                                    <th width=\"170px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            placeholder=\"Company name\"\n                                            name=\"company_name\"\n                                            onChange={this.onChangeHandler}\n                                            required\n\n                                        />\n                                    </th>\n                                    <th width=\"180px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"amount\"\n                                            placeholder=\"amount\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                    <th width=\"180px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"status\"\n                                            placeholder=\"Status\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                    <th width=\"180px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"reference_no\"\n                                            placeholder=\"Reference number\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n\n                                    <th width=\"180px\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"quoted_date\"\n                                            placeholder=\"Quotation date\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                    <th width=\"180px\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control W-100 d-block\"\n                                        name=\"payment_date\"\n                                        placeholder=\"Payment date\"\n                                        onChange={this.onChangeHandler}\n                                        required\n                                    />\n                                </th>\n                                <th></th>\n                                </tr>\n                                <tr className=\"text-left\">\n                                    <th >Customer Name</th>\n                                    <th >Company name</th>\n                                    <th >Amount</th>\n                                    <th>Status</th>\n                                    <th>Reference Number</th>\n                                    <th >Quotation date</th>\n                                    <th>Payment date</th>\n\n                                </tr>\n                                </thead>\n                                <tbody className=\"text-center\">{tableRows}</tbody>\n                            </table>\n                            {!searching?\n                                <Pagination\n                                    itemsPerPage={itemsPerPage}\n                                    totalItems={data.length}\n                                    paginate={this.paginate}\n                                />:null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\n","import React, {Component} from 'react';\nimport cookie from \"react-cookies\";\nimport Pagination from \"../Common/Pagination\";\n\nimport PresaleServices from '../Services/Api/Api';\nimport {Button} from \"antd\";\nimport { EditOutlined } from '@ant-design/icons';\nexport default class Users extends Component {\n    constructor(props) {\n        super(props);\n        let loggedIn = null;\n        this.state = {\n            loggedIn,\n            data: [],\n            filtered: [],\n            searched: [],\n            currentPage: 1,\n            itemsPerPage: 5,\n            searching: false,\n            loaded: false\n        };\n        this.props.setLocation(this.props.history.location.pathname)\n    }\n\n    onChangeHandler = e => {\n        e.preventDefault();\n        const {data, searched, itemsPerPage} = this.state;\n        const currentPage = 1;\n        let value = e.target.value;\n        if (e.target.type == \"date\") {\n            let temp = value.split(\"-\")\n            temp = temp.reverse();\n            value = temp.join('/')\n        }\n        let filtered = [...data];\n        let key = e.target.name;\n        searched[key] = value;\n        for (key in searched) {\n            value = searched[key];\n            if (value !== \"\") {\n                filtered = filtered.filter(el => {\n                    const lc = el[key].toLowerCase();\n                    const filter = value.toLowerCase();\n                    return lc.includes(filter);\n                });\n            }\n        }\n        let searchingflag = false;\n        for (key in searched) {\n\n            value = searched[key];\n            if (value !== \"\")\n                searchingflag = true\n        }\n        if (!searchingflag) {\n            const indexOfLastItem = currentPage * itemsPerPage;\n            const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n            this.setState({\n                filtered: filtered.slice(\n                    indexOfFirstItem, indexOfLastItem\n                ),\n                searched: searched,\n                searching: false\n            });\n        } else\n            this.setState({\n                filtered: filtered,\n                searched: searched,\n                searching: true\n            });\n    };\n\n    componentDidMount() {\n        PresaleServices.getUsers()\n            .then(res => {\n\n                const {currentPage, itemsPerPage} = this.state;\n                const indexOfLastItem = currentPage * itemsPerPage;\n                const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n                let currentFiltered;\n                let data = res.data\n                this.setState({\n                    data\n                }, () => {\n                    if (data.length) {\n                        const temp = [...data];\n                        currentFiltered = temp.slice(\n                            indexOfFirstItem,\n                            indexOfLastItem\n                        );\n                    } else {\n                        currentFiltered = []\n                    }\n                    this.setState({filtered: currentFiltered, loaded: true});\n                });\n            })\n            .catch(err => console.log(err));\n    }\n\n    paginate = pageNumber => {\n        const {data, itemsPerPage} = this.state;\n        const indexOfLastItem = pageNumber * itemsPerPage;\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n        const temp = [...data];\n        const currentFiltered = temp.slice(indexOfFirstItem, indexOfLastItem);\n        this.setState({currentPage: pageNumber, filtered: currentFiltered});\n    };\n\n    addUserPage=()=>{\n        this.props.history.push('/AddUser');\n    };\n\n\n//editUser bhj\n    editUser=(id)=>{\n      this.props.history.push(`/EditUser/${id}`)\n    };\n    render() {\n        const { filtered, itemsPerPage, data, searching, loaded} = this.state;\n\n        const tableRows = filtered.length ? (\n            filtered.map((item, index) => {\n                return (\n                    <tr className=\"text-left\" key={index}>\n                        <td>{item.name}</td>\n                        <td>{item.email}</td>\n                        <td>{item.status}</td>\n                        <td>{item.role_name}</td>\n                        {this.props.canwrite?<td >\n                            {/*//<button className=\" btn btn-large green\" > update</button>*/}\n                            <EditOutlined onClick={()=>this.editUser(item.id)} />\n                        </td>:null}\n\n                    </tr>\n                );\n            })\n        ) : (\n            loaded ? <tr>\n                <td>\n                    <p className=\"text-danger\">No record found</p>\n                </td>\n            </tr> : null\n        );\n        return (\n            <div>\n\n\n                <div className=\"content search-table-wrapper\"\n                     id=\"main-content\"\n                     style={{clear: \"both\", width: \"90%\", marginLeft: \"8%\"}}\n                >\n                    <div className=\"container-fluid mt-5\">\n                        <div className=\"row\">\n\n                                <div className=\" col-md-12 card\">\n                                    <div className=\"card-body text-capitalize font-weight-bolder text-dark w-100\">\n                                        <h4 className=\"d-inline-block\">Users</h4>\n                                        {this.props.canwrite?\n                                        <span className=\"float-right\">\n                                            <Button  onClick={this.addUserPage} className=\"ant-btn ant-btn-primary w-100 \"> Add User</Button>\n                                        </span>:null}\n                                    </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card mt-3\">\n                        <div className=\"card-header text-bolder\">\n                            <h4 className=\"font-weight-bold mb-0\">Manage Users</h4>\n                        </div>\n                        {\n                            <div className=\"float-right\">\n                                {/*<AddUser addData={this.addHandler}/>*/}\n                            </div>\n\n                        }\n\n                        <div class=\"card-body\">\n                            <table class=\"table \">\n                                <thead>\n                                <tr>\n\n                                    <th>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"name\"\n                                            placeholder=\"Name\"\n                                            onChange={this.onChangeHandler}\n                                            required\n\n                                        />\n                                    </th>\n\n                                    <th width=\"170px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            placeholder=\"Email\"\n                                            name=\"email\"\n                                            onChange={this.onChangeHandler}\n                                            required\n\n                                        />\n                                    </th>\n                                    <th width=\"180px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"status\"\n                                            placeholder=\"Status\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                    <th width=\"180px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"role_name\"\n                                            placeholder=\"User Role\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                    <th></th>\n                                </tr>\n                                <tr className=\"text-left\">\n                                    <th>Name</th>\n                                    <th>Email</th>\n                                    <th>Status</th>\n                                    <th>User Role</th>\n                                    <th></th>\n                                </tr>\n                                </thead>\n                                <tbody className=\"text-center\">{tableRows}</tbody>\n                            </table>\n                            {!searching ?\n                                <Pagination\n                                    itemsPerPage={itemsPerPage}\n                                    totalItems={data.length}\n                                    paginate={this.paginate}\n                                /> : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\n","import React, {Component} from 'react';\nimport Pagination from \"../Common/Pagination\";\nimport {Redirect, Link} from 'react-router-dom'\nimport PresaleServices from '../Services/Api/Api';\n\n\nexport default class Discount extends Component {\n    constructor(props) {\n        super(props);\n        let loggedIn = null;\n        this.state = {\n            loggedIn,\n            data: [],\n            filtered: [],\n            searched: [],\n            currentPage: 1,\n            itemsPerPage: 5,\n            searching:false,\n            loaded:false\n        };\n        this.props.setLocation(this.props.history.location.pathname)\n    }\n\n    onChangeHandler = e => {\n        e.preventDefault();\n        const {data, searched,itemsPerPage} = this.state;\n        const currentPage=1;\n        let value = e.target.value;\n        if(e.target.type==\"date\"){\n            let temp=value.split(\"-\")\n            temp=temp.reverse();\n            value=temp.join('/')\n        }\n        let filtered = [...data];\n        let key = e.target.name;\n        searched[key] = value;\n        for (key in searched) {\n            value = searched[key];\n            if (value !== \"\") {\n                filtered = filtered.filter(el => {\n                    const lc = el[key].toLowerCase();\n                    const filter = value.toLowerCase();\n                    return lc.includes(filter);\n                });\n            }\n        }\n        let searchingflag=false;\n        for (key in searched){\n\n            value=searched[key];\n            if(value!==\"\")\n                searchingflag=true\n        }\n        if(!searchingflag){\n            const indexOfLastItem = currentPage * itemsPerPage;\n            const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n            this.setState({\n                filtered: filtered.slice(\n                    indexOfFirstItem, indexOfLastItem\n                ),\n                searched: searched,\n                searching:false\n            });\n        }\n        else\n            this.setState({\n                filtered: filtered,\n                searched: searched,\n                searching:true\n            });\n    };\n\n    componentDidMount() {\n        PresaleServices.getPayments()\n            .then(res =>  {\n\n                const { currentPage, itemsPerPage} = this.state;\n                const indexOfLastItem = currentPage * itemsPerPage;\n                const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n                let currentFiltered;\n                let data=res.data\n                this.setState({\n                    data\n                },()=>{\n                    if(data.length){\n                        const temp = [...data];\n                        currentFiltered = temp.slice(\n                            indexOfFirstItem,\n                            indexOfLastItem\n                        );}\n                    else {\n                        currentFiltered=[]\n                    }\n                    this.setState({filtered: currentFiltered,loaded:true});\n                });\n            })\n            .catch(err => console.log(err));\n    }\n\n    paginate = pageNumber => {\n        const {data,itemsPerPage} = this.state;\n        const indexOfLastItem = pageNumber * itemsPerPage;\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n        const temp = [...data];\n        const currentFiltered = temp.slice(indexOfFirstItem, indexOfLastItem);\n        this.setState({currentPage: pageNumber, filtered: currentFiltered});\n    };\n\n\n    render() {\n        const {filtered, itemsPerPage, data,searching,loaded} = this.state;\n\n        const tableRows = filtered.length ? (\n            filtered.map((item, index) => {\n                return (\n                    <tr className=\"text-left\" key={index}>\n                        <td>{item.name}</td>\n                        <td>{item.company_name}</td>\n                        <td>{item.reference_no}</td>\n                        <td>{item.amount}</td>\n                        <td>{item.quoted_date}</td>\n                        <td>{item.payment_date}</td>\n                        <td style={{textAlign: \"center\"}}>\n                            <div className=\"row\">\n                                <div className=\"col-md-3\">\n                                    {//<EditUser item={item} editData={this.editHandler}/>\n                                    }</div>\n\n                            </div>\n                        </td>\n\n                    </tr>\n                );\n            })\n        ) : (\n            loaded?<tr>\n                <td>\n                    <p className=\"text-danger\">No record found</p>\n                </td>\n            </tr>:null\n        );\n        return (\n            <div>\n                <div className=\"content search-table-wrapper\"\n                     id=\"main-content\"\n                     style={{clear: \"both\", width: \"90%\", marginLeft: \"8%\"}}\n                >\n                    <div class=\"card mt-3\">\n                        <div class=\"card-header text-bolder\">\n                            <h4 className=\"font-weight-bold mb-0\">Manage Payments</h4>\n                        </div>\n                        <div class=\"card-body\">\n                            <table class=\"table \">\n                                <thead>\n                                {/*                 <tr className=\"text-left\">\n                                <th >Customer Name</th>\n                                <th >Company Name</th>\n                                <th >Reference Number</th>\n                                <th >Amount</th>\n                                <th >Quotation date</th>\n\n                            </tr>*/}\n                                <tr>\n\n                                    <th>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"name\"\n                                            placeholder=\"Customer Name\"\n                                            onChange={this.onChangeHandler}\n                                            required\n\n                                        />\n                                    </th>\n\n                                    <th  >\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            placeholder=\"Company Name\"\n                                            name=\"company_name\"\n                                            onChange={this.onChangeHandler}\n                                            required\n\n                                        />\n                                    </th>\n                                    <th >\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"reference_no\"\n                                            placeholder=\"Reference Number\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                    <th >\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"amount\"\n                                            placeholder=\"Amount\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                    <th  >\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"quoted_date\"\n                                            placeholder=\"Quotation date\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                    <th >\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"payment_date\"\n                                            placeholder=\"payment_date\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                </tr>\n                                <tr className=\"text-left\">\n                                    <th >Customer Name</th>\n                                    <th >Company Name</th>\n                                    <th >Reference Number</th>\n                                    <th>Amount</th>\n                                    <th>Quotation Date</th>\n                                    <th>Payment Date</th>\n                                </tr>\n                                </thead>\n                                <tbody className=\"text-center\">{tableRows}</tbody>\n                            </table>\n                            {!searching?\n                                <Pagination\n                                    itemsPerPage={itemsPerPage}\n                                    totalItems={data.length}\n                                    paginate={this.paginate}\n                                />:null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\n","import React, {Component} from 'react';\nimport Pagination from \"../Common/Pagination\";\n\nimport PresaleServices from '../Services/Api/Api';\nimport {EyeOutlined, FormOutlined} from \"@ant-design/icons\";\n\n\nexport default class Discount extends Component {\n    constructor(props) {\n        super(props);\n        let loggedIn = null;\n\n        this.state = {\n            loggedIn,\n            data: [],\n            filtered: [],\n            searched: [],\n            currentPage: 1,\n            itemsPerPage: 5,\n            searching:false,\n            loaded:false\n        };\n        this.props.setLocation(this.props.history.location.pathname)\n    }\n\n    onChangeHandler = e => {\n        e.preventDefault();\n        const {data, searched,itemsPerPage} = this.state;\n        const currentPage=1;\n        let value = e.target.value;\n        if(e.target.type===\"date\"){\n            let temp=value.split(\"-\")\n            temp=temp.reverse();\n            value=temp.join('/')\n        }\n        let filtered = [...data];\n        let key = e.target.name;\n        searched[key] = value;\n        for (key in searched) {\n            value = searched[key];\n            if (value !== \"\") {\n                filtered = filtered.filter(el => {\n                    const lc = el[key].toLowerCase();\n\n                    const filter = value.toLowerCase();\n                    return lc.includes(filter);\n                });\n            }\n        }\n        let searchingflag=false;\n        for (key in searched){\n\n            value=searched[key];\n            if(value!==\"\")\n                searchingflag=true\n        }\n        if(!searchingflag){\n            const indexOfLastItem = currentPage * itemsPerPage;\n            const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n            this.setState({\n                filtered: filtered.slice(\n                    indexOfFirstItem, indexOfLastItem\n                ),\n                searched: searched,\n                searching:false\n            });\n        }\n        else\n            this.setState({\n                filtered: filtered,\n                searched: searched,\n                searching:true\n            });\n    };\n\n    componentDidMount() {\n        PresaleServices.getDiscounts()\n            .then(res =>  {\n\n                const { currentPage, itemsPerPage} = this.state;\n                const indexOfLastItem = currentPage * itemsPerPage;\n                const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n                let currentFiltered;\n                let data=res.data\n                this.setState({\n                    data\n                },()=>{\n                    if(data.length){\n                        const temp = [...data];\n                        currentFiltered = temp.slice(\n                            indexOfFirstItem,\n                            indexOfLastItem\n                        );}\n                    else {\n                        currentFiltered=[]\n                    }\n                    this.setState({filtered: currentFiltered,loaded:true});\n                });\n            })\n            .catch(err => console.log(err));\n    }\n\n    paginate = pageNumber => {\n        const {data,itemsPerPage} = this.state;\n        const indexOfLastItem = pageNumber * itemsPerPage;\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n        const temp = [...data];\n        const currentFiltered = temp.slice(indexOfFirstItem, indexOfLastItem);\n        this.setState({currentPage: pageNumber, filtered: currentFiltered});\n    };\n    editQuotation=reference_no=>{\n        this.props.history.push(`/Edit/${reference_no}/discount`)\n    };\n\n\n    render() {\n        const {filtered, itemsPerPage, data,searching,loaded} = this.state;\n\n        const tableRows = filtered.length ? (\n            filtered.map((item, index) => {\n                return (\n                    <tr className=\"text-left\" key={index}>\n                        <td>{item.name}</td>\n                        <td>{item.company_name}</td>\n                        <td>{item.reference_no}</td>\n                        <td>{item.amount}</td>\n                        <td>{item.quoted_date}</td>\n                        <td>{item.status}</td>\n                        {\n                            this.props.canWrite?<td>{\n                                    item.status!==\"Paid\"? <FormOutlined onClick={() => this.editQuotation(item.reference_no)}/>\n                                        : <EyeOutlined onClick={() => this.props.history.push(`/View/${item.reference_no}/discount`)} />\n                                }\n                                </td>\n                                :null}\n\n                    </tr>\n                );\n            })\n        ) : (\n            loaded?<tr>\n                <td>\n                    <p className=\"text-danger\">No record found</p>\n                </td>\n            </tr>:null\n        );\n        return (\n            <div>\n\n                <div className=\"content search-table-wrapper\"\n                     id=\"main-content\"\n                     style={{clear: \"both\", width: \"90%\", marginLeft: \"8%\"}}\n                >\n                    <div className=\"card mt-3\">\n                        <div className=\"card-header text-bolder\">\n                            <h4 className=\"font-weight-bold mb-0\">Manage Discount</h4>\n                        </div>\n                        <div className=\"card-body\">\n                            <table className=\"table \">\n                                <thead>\n                                <tr>\n                                    <th>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"name\"\n                                            placeholder=\"Customer Name\"\n                                            onChange={this.onChangeHandler}\n                                            required\n\n                                        />\n                                    </th>\n\n                                    <th width=\"170px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            placeholder=\"Company Name\"\n                                            name=\"company_name\"\n                                            onChange={this.onChangeHandler}\n                                            required\n\n                                        />\n                                    </th>\n                                    <th width=\"180px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"reference_no\"\n                                            placeholder=\"Reference Number\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                    <th width=\"180px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"amount\"\n                                            placeholder=\"Amount\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n\n                                    <th width=\"180px\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"quoted_date\"\n                                            placeholder=\"Quotation date\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                    <th width=\"180px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"status\"\n                                            placeholder=\"Status\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                </tr>\n                                <tr className=\"text-left\">\n                                    <th >Customer Name</th>\n                                    <th >Company Name</th>\n                                    <th >Reference Number</th>\n                                    <th>Amount</th>\n                                    <th>Payment Date</th>\n                                    <th>Status</th>\n                                </tr>\n                                </thead>\n                                <tbody className=\"text-center\">{tableRows}</tbody>\n                            </table>\n                            {!searching?\n                                <Pagination\n                                    itemsPerPage={itemsPerPage}\n                                    totalItems={data.length}\n                                    paginate={this.paginate}\n                                />:null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\n","import React, {Component} from 'react';\nimport {Avatar, Menu} from 'antd';\nimport {Link, Redirect} from 'react-router-dom'\n\nconst SubMenu = Menu.SubMenu;\n\n\nclass RightMenu extends Component {\n    constructor(props) {\n        super(props);\n        let loggedIn = true;\n        this.state = {\n            loggedIn,\n            name:this.props.name\n        };\n\n\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.state.name!==this.props.name)\n            this.setState({name:this.props.name})\n    }\n\n    remove = () => {\n        this.setState({\n            loggedIn:false\n        })\n\n    };\n\n    render() {\n\n        const {loggedIn, name} = this.state\n        if (!loggedIn)\n            return <Redirect to='/logout'/>;\n        return (\n            <Menu mode=\"horizontal\">\n                <SubMenu\n                    title={\n                        <span className=\"submenu-title-wrapper\">\n                            <div className=\"customer-name\">\n                                {name}\n                                <br/><a href=\"javascript:void(0)\">View Profile</a>\n                    </div>\n\n\n            </span>\n                    }\n                >\n                    <Menu.ItemGroup>\n                        <Menu.Item key=\"setting:1\">\n                            <Link to={'/EditProfile'}> Edit Profile\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"setting:2\">\n                            <a onClick={this.remove}> LogOut</a>\n                        </Menu.Item>\n                    </Menu.ItemGroup>\n                </SubMenu>\n            </Menu>\n        );\n    }\n}\n\nexport default RightMenu;","import React, {Component} from 'react'\nimport 'antd/dist/antd.css'\nimport socketio from 'socket.io-client';\nimport Echo from \"laravel-echo\";\nimport axios from 'axios'\nimport {Modal} from \"antd\";\nimport {withRouter} from \"react-router\"\nimport mp3_file from './tune.mp3';\n\nclass UserStatus extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            myId: this.props.id,\n            callVisible: false,\n            options: {\n                client: socketio,\n                broadcaster: 'socket.io',\n                host: window.location.hostname + ':5555', // this is laravel-echo-server host\n                forceTLS: true,\n                encrypted: false,\n                //authEndpoint is your apiUrl + /broadcasting/auth\n                authEndpoint: \"/broadcasting/auth\",\n                // As I'm using JWT tokens, I need to manually set up the headers.\n                auth: {\n                    headers: {\n                        'Authorization': \"Bearer \" + this.props.token,\n                        Accept: \"application/json\"\n                    }\n                }\n            }, api: {\n                Authorization: \"Bearer \" + this.props.token\n            },\n            callFrom: '',\n            redirect: false,\n            audio : new Audio(mp3_file)\n\n\n        }\n        this.state.audio.loop = true;\n    }\n\n    handleOk = e => {\n        e.preventDefault()\n        this.setState({\n            callVisible: false\n        });\n        // return  <a href={'/video'}/>\n    };\n\n    calling = () => {\n        const {api, room,audio} = this.state\n        axios.put('/dashboard/api/acceptcall/' + room, null, {headers: api}).then(\n            () => {\n                this.setState({\n                    callVisible: false\n                })\n                let url = \"/dashboard/#/openvideo/\"+this.state.room+\"/\"+this.state.callFrom\n                const iframe = '<html><body><iframe width=\"900px\" height=\"900px\" src=\"'+url+'\" ></iframe></body></html>';\n                const win = window.open(\"\", \"\", \"width=900px,height=900px,toolbar=no,menubar=no,resizable=yes\");\n                win.document.write(iframe);\n               audio.pause()\n                audio.currentTime = 0;\n\n            })\n    }\n\n\n    handleCancel = () => {\n\n        const {api, room,audio} = this.state\n        axios.put('/dashboard/api/rejectcall/' + room, null, {headers: api}).then(\n            () => {\n                this.setState({\n                    callVisible: false\n                }, () => {\n                    audio.pause()\n                    audio.currentTime = 0;\n\n                })\n            })\n    };\n    push = () => {\n        this.setState({\n            callVisible: false\n        });\n    };\n\n    componentDidMount() {\n\n        const echo = new Echo(this.state.options);\n        const {api} = this.state\n        const {myId} = this.state;\n        if (myId !== -1) {\n            echo.private('startchat.' + myId)\n                .listen('TestEvent', e => {\n\n                    this.setState({\n                        room: e.room,\n                        callFrom: e.name\n                    })\n                }).on('error', (e) => {\n                console.log(\"error:\")\n                console.error(e)\n            });\n        }\n        echo.join(\"chat\").joining((user) => {\n\n            axios.put('/dashboard/api/user/' + user.id + '/online', null, {headers: api});\n\n        })\n            .leaving((user) => {\n                axios.put('/dashboard/api/user/' + user.id + '/offline', null, {headers: api});\n\n            })\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.id !== this.props.id && this.props.id !== -1) {\n            const echo = new Echo(this.state.options);\n            const myId = this.props.id;\n            const {audio}=this.state\n            echo.private('startchat.' + myId)\n                .listen('TestEvent', e => {\n\n                    this.setState({\n                        callVisible: true,\n                        callFrom: e.name,\n                        room: e.vcall.room\n                    })\n                    audio.play();\n\n                }).listen('EndCall', e => {\n\n                this.setState({\n                    callVisible: false,\n                })\n                audio.pause()\n                audio.currentTime = 0;\n            })\n                .on('error', (e) => {\n                    console.log(\"error:\")\n                    console.error(e)\n                });\n\n        }\n    }\n\n    render() {\n\n        return <div>\n\n            <Modal\n                title=\"Video Call From...\"\n                visible={this.state.callVisible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n            >\n\n\n\n                <div className=\"text-center\">\n                    <h4 className=\"text-center\">{this.state.callFrom}</h4>\n                    {/*  <p onClick={this.push}>\n                        <Link  to={'/video'} > Video Call</Link></p>*/}\n                    <a href=\"javascript:void(0)\" onClick={this.calling} className=\"ant-btn  ant-btn-primary m-2\">Accept\n                        Call</a>\n                    <a href=\"javascript:void(0)\" onClick={this.handleCancel}\n                       className=\"ant-btn ant-btn-primary ant-btn-gray m-2\">Cancel Call</a>\n                </div>\n            </Modal>\n        </div>\n    }\n}\n;\nexport default withRouter(UserStatus)\n","import \"antd/dist/antd.css\";\n\nimport React, {Component} from 'react';\nimport '../Main/style.scss'\nimport RightMenu from './RightMenu'\nimport {Link} from \"react-router-dom\"\nimport {Button, Drawer} from 'antd';\nimport UserStatus from \"../Common/UserStatus\";\n\nclass Navbarz extends Component {\n    state = {\n        current: 'mail',\n        visible: false,\n        callVisible: false\n    };\n    showModal = () => {\n        this.setState({\n            callVisible: true\n        });\n    };\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n            name:\"\"\n        });\n    };\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.state.name!==this.props.name)\n            this.setState({name:this.props.name})\n    }\n    handleOk = e => {\n        e.preventDefault()\n        this.setState({\n            callVisible: false\n        });\n    // return  <a href={'/video'}/>\n    };\n\n    handleCancel = e => {\n        e.preventDefault()\n        this.setState({\n            callVisible: false\n        });\n    };\npush=()=>{\n        this.setState({\n            callVisible: false\n        });\n    };\n    render() {\n        return (\n            <nav className=\"menuBar\">\n                <div className=\"logo\">\n                    <Link to={'/'}><img src=\"images/logo.png\" alt=\"image\"/> </Link>\n                </div>\n                <div className=\"menuCon\">\n                    <div className=\"leftMenu\">\n                        <UserStatus token={this.props.token} id={this.props.id}\n                        history={this.props.history}\n                        />\n                    </div>\n                    <div className=\"rightMenu\">\n                        <RightMenu name={this.props.name} />\n                    </div>\n                    <Button className=\"barsMenu\" type=\"primary\" onClick={this.showDrawer}>\n                        <span className=\"barsBtn\"></span>\n                    </Button>\n                    <Drawer\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                    >\n\n                        <RightMenu name={this.state.name} />\n                    </Drawer>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbarz;","import React, {Component} from 'react';\nimport {Menu} from 'antd';\nimport {Link} from \"react-router-dom\";\n\nclass Signin extends Component {\n    render() {\n        return (\n            <Menu mode=\"horizontal\">\n                <Menu mode=\"horizontal\">\n                    <Menu.Item key=\"mail\">\n                        <Link to={'/'}>Login</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"app\">\n                        <Link  to={'/forget'}>Forgot Password?</Link>\n                    </Menu.Item>\n                </Menu>\n            </Menu>\n        );\n    }\n}\n\nexport default Signin;","import '../Main/style.scss'\n\nimport React, {Component} from 'react';\nimport \"antd/dist/antd.css\";\nimport Signin from './Signin'\nimport {Link} from \"react-router-dom\"\nimport {Button, Drawer} from 'antd';\n\n\nclass Navbarz extends Component {\n    state = {\n        current: 'mail',\n        visible: false,\n        collapsed:this.props.collapsed\n    };\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n\n    render() {\n\n        return (\n\n            <nav className=\"menuBar\">\n\n                <div className=\"logo\">\n                    <Link to={'/Main'}><img src=\"images/logo.png\" alt=\"image\"/> </Link>\n                </div>\n                <div className=\"menuCon\">\n                    <div className=\"leftMenu\">\n                        {null}\n                    </div>\n                    <div className=\"rightMenu\">\n                       <Signin/>\n                    </div>\n                    <Button className=\"barsMenu\" type=\"primary\" onClick={this.showDrawer}>\n                        <span className=\"barsBtn\"></span>\n                    </Button>\n                    <Drawer\n                        title=\"Basic Drawer\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                    >\n\n                        <Signin/>\n                    </Drawer>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbarz;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport cookie from \"react-cookies\";\nimport { Card, message} from \"antd\";\nimport PresaleServices from '../Services/Api/Api'\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            loading: false,\n            setToken: this.props.setToken,\n            token:cookie.load('admin_token')\n        };\n\n    }\ncomponentDidMount() {\n        const {token}=this.state\nif(token!==undefined&&token!==\"\"){\n    this.props.setToken(token)\n    this.props.history.push('/')\n}\n}\n\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n    onInput=e=>{\n        if(e.target.type===\"email\")\n        {\n            if(!e.target.value.toLowerCase().includes('vaporvm')){\n                message.error(\"Please enter valid credentials to login\");\n            }\n        }\n    }\n    onSubmit = e => {\n        e.preventDefault();\n        this.setState({\n            loading: true\n        });\n        const {email, password,} = this.state;\n        if (email !== \"\" && password !== \"\") {\n            if(!email.toLowerCase().includes('vaporvm')){\n            message.error(\"Please enter valid credentials to login\");\n                this.setState({loading: false});\n            }else{\n            PresaleServices.login(this.state)\n                .then(res => {\n                    if (res&&res.api_key) {\n                        cookie.save(\"admin_token\", res.api_key, {\n                            path: \"/\",\n                            maxAge: 5 * 3600\n                        });\n                        this.setState({loading: false});\n                        this.state.setToken(res.api_key);\n                        this.props.history.push(\"/\")\n                    }\n                })\n                .catch(err => {\n                    if(err.toString().includes(401)){\n                        message.error(\"User is Inactive\");\n\n                    }\n                    else\n                    message.error(\"Please enter valid credentials to login\");\n                    this.setState({loading: false});\n                })\n        }\n        }\n        else{\n            message.error(\"Please enter valid credentials to login\");\n            this.setState({\n                loading: false\n            })\n        }\n    };\n\n    render() {\n\n        const {email, password, loading} = this.state;\n        return (\n            <div>\n                <div className=\"container login-wrapper mt-5\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-5\">\n                            <Card loading={loading} className=\"card mt-3\">\n                                <div className=\"card-header\"><h2 className=\"text-center\">Login to your account</h2>\n                                </div>\n                                <form className=\"was-validated mx-4 my-4\">\n                                    <div className=\"form-group\">\n\n                                        <input\n                                            type=\"email\"\n                                            className=\"form-control\"\n                                            placeholder=\"Enter Email\"\n                                            name=\"email\"\n                                            required\n                                            onChange={this.onChange}\n                                            value={email}\n                                            pattern=\"^[a-zA-Z]+.*@[A-Za-z]+([.][a-zA-Z]+)+$\"\n                                            onBlur={this.onInput}\n                                        />\n                                        <div className=\"valid-feedback\"></div>\n                                        <div className=\"invalid-feedback\">\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n\n                                        <input\n                                            type=\"password\"\n                                            className=\"form-control\"\n                                            placeholder=\"Enter password\"\n                                            name=\"password\"\n                                            required\n                                            onChange={this.onChange}\n                                            value={password}\n                                            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$\"\n                                        />\n                                    </div>\n                                    <Link\n                                        className=\"forgot my-2 text-success fade-in float-right\"\n                                        to=\"/Forget\"\n                                    >\n                                        Forgot Password?\n                                    </Link>\n                                    <button type=\"submit\" className=\" ant-btn ant-btn-primary btn-success btn-block \"\n                                            onClick={this.onSubmit}>\n                                        Login\n                                    </button>\n\n                                </form>\n                            </Card>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login\n","import React, {Component} from 'react';\n\nimport {Card} from 'antd';\n\nconst data = [\n    {\n        title: \"Title 1\"\n    },\n    {\n        title: \"Title 2\"\n    },\n    {\n        title: \"Title 3\"\n    },\n\n];\n\nclass Progress extends Component {\n\n    render() {\n        const {progress,total,complete,loading}=this.props;\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <Card loading={loading}>\n                        <img src=\"images/in-progress.png\" alt=\"Projects In-Progress\"/>\n                        <div className=\"summary-info\">\n                            <p>Projects In-progress</p>\n                            <h2 className=\"blue-text\">{progress}</h2>\n                        </div>\n                    </Card>\n                </div>\n                <div className=\"col-md-4\">\n                    <Card loading={loading}>\n                        <img src=\"images/completed.png\" alt=\"Project Completed\"/>\n                        <div className=\"summary-info\">\n                            <p>Completed Tasks</p>\n                            <h2 className=\"green-text\">{complete}</h2>\n                        </div>\n                    </Card>\n                </div>\n\n                <div className=\"col-md-4\">\n                    <Card loading={loading}>\n                        <img src=\"images/task-inprogress.png\" alt=\"Tasks Progress\"/>\n                        <div className=\"summary-info\">\n                            <p>Tasks In-Progress</p>\n                            <h2 className=\"yellow-text\">{total}</h2>\n                        </div>\n\n                    </Card>\n                </div>\n\n            </div>\n        )\n\n\n    }\n}\n\nexport default Progress\n","import React, {Component} from 'react'\nimport {Spin} from \"antd\";\n\nclass AssignedAdmin extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: this.props.users\n        }\n    }\n\ncomponentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.users!==this.props.users){\n            this.setState({\n                users:this.props.users\n            })\n        }\n}\n\n    render() {\n\n        const {users,} = this.state;\n        let myUser = users&&users.length ? users.map(e => {\n            return <div className=\"user-info\">\n                <div className=\"user-name\">{e.name}</div>\n\n\n            </div>\n        }) : <p>No admin is assigned</p>;\n        const v = (this.props.loaded?\n            <div className=\"user-status-wrapper\"> {myUser}\n            </div>:<Spin size={\"large\"}/>\n        )\n\n\n        return v\n\n    };\n}\n\nexport default AssignedAdmin\n","import React, {Component} from 'react';\nimport {Card, Collapse, Progress, Spin, Upload, message} from \"antd\";\nimport {UploadOutlined} from '@ant-design/icons'\nimport PresaleServices from '../Services/Api/Api'\nimport cookie from \"react-cookies\";\nimport {DownCircleOutlined, UpCircleOutlined} from '@ant-design/icons';\nimport AssignedAdmin from  './AssignedAdmin'\nconst {Panel} = Collapse;\n\nconst props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n        Authorization: cookie.load('admin_token')\n    },\n\n};\nconst GenExtra = (props) => (\n    !props.collapsed ?\n        <DownCircleOutlined style={{fontSize: '23px', color: '#b1c63d'}}\n        /> :\n        <UpCircleOutlined style={{fontSize: '23px', color: '#b1c63d'}}\n        />\n);\nconst MyProject = (props) => {\n\n    return <div>{\n        props.data && props.data.map(e => {\n            return <div>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                {e.name}\n                            </div>\n                            {/*<div className=\"col-md-4\">*/}\n                            {/*    {e.due_date}*/}\n                            {/*</div>*/}\n                            {/*<div className=\"col-md-4\">*/}\n                            {/*    {*/}\n                            {/*        <Progress percent={props.percentage}/>*/}\n                            {/*    }*/}\n                            {/*</div>*/}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        })\n    }</div>\n}\nconst ProjectComp = (props) => {\n\n    const canWrite = props.canWrite;\n    const history = props.history;\n    const token = props.token\n    return <div>{\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <div className=\"row\">\n                    <div className=\"col-md-2\">\n                        {props.name}\n                    </div>\n                    <div className=\"col-md-2\">\n                        <div className=\"small\">Expected Completion Date</div>\n                        {props.due_date}\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"small\">Progress</div>\n                        {props.percentage !== \"\" ?\n                            <Progress strokeColor={{\n                                '0%': '#108ee9',\n                                '100%': '#87d068',\n                            }} percent={props.percentage}\n                                      className=\"m-0 custom-space g\"\n                                      status=\"active\"\n                            />: null\n                        }\n                    </div>\n\n                    <div className=\"col-md-2\">\n                        {props.percentage === 100 ? (\n\n                            <Upload name={'file'}\n                                    action={'/api-gateway/admin/uploadprojectfile/' + props.name}\n                                    headers={{\n                                        Authorization: token\n                                    }}\n                                    onChange={props.changeFile}\n\n                            >\n                                <a >\n                                    <UploadOutlined/> Upload report\n                                </a>\n                            </Upload>\n                        ) : null\n\n                        }\n                    </div>\n                    <div className=\"col-md-2\">\n                        {canWrite ? <a className=\"font-weight-bolder\" style={{color: \"#85c63d\", fontSize: 15}}\n                                       onClick={e => {\n                                           e.stopPropagation()\n                                           history.push(`/Resource/${props.name}`)\n                                       }}>\n                                Assign Resource\n                            </a>\n                            : null\n                        }\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    }</div>\n\n}\n\nclass Projects extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            percentage: [],\n            projectData: [],\n            fetching: false,\n            first: true,\n            collapsed: [],\n            due_date: [],\n            users:[],\n            loaded:false\n        };\n\n    }\n     changeFile=(info) =>{\n        if (info.file.status !== 'uploading') {\n            console.log(info.file, info.fileList);\n        }\n        if (info.file.status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully`);\n        } else if (info.file.status === 'error') {\n            message.error(`${info.file.name} file upload failed.`);\n        }\n    }\n\n\n    onChange = (key) => {\n\n        let {collapsed} = this.state\n        if (key === undefined) {\n            collapsed = []\n        } else {\n            collapsed = []\n            collapsed[key] = true\n        }\n        this.setState({\n            collapsed: collapsed\n        })\n        if (key !== undefined) {\n            this.setState({\n                fetching: true\n            });\n            PresaleServices.getStatusKey(key).then(res => {\n\n                    const {percentage, due_date} = this.state\n                    percentage[key] = res.percentage\n                    due_date[key] = res.due_date\n\n                    this.setState({\n                        projectData: res.tasks,\n                        users:res.users,\n                        fetching: false,\n                        percentage: percentage,\n                        due_date: due_date,\n                        loaded:true\n\n                    })\n\n                }\n            ).catch(err => console.log(err))\n        }\n\n    };\n\n\n    render() {\n\n        let {fetching, projectData, percentage, due_date,users} = this.state;\n\n        const {loading} = this.props;\n        let view = <Collapse\n            accordion={true}\n            onChange={this.onChange}\n\n        >\n            {\n                this.props.data && this.props.data.map((e) => {\n\n                    return <Panel showArrow={false}\n                                  header={<ProjectComp name={e.name} due_date={due_date[e.key] ?\n                                      due_date[e.key] : ''\n\n\n                                  } percentage={e.key in percentage ?\n                                      percentage[e.key] : ''}\n                                                       canWrite={this.props.canWrite}\n                                                       history={this.props.history}\n                                                       changeFile={this.changeFile}\n                                                       token={this.props.token}\n\n                                  />\n                                  }\n                                  key={e.key} extra={<GenExtra collapsed={e.key in this.state.collapsed}/>}>\n\n                        <div className=\"row\">\n                            <div className=\"col-md-8\">\n                                {\n                                    fetching ? <Spin size=\"large\" className=\"ml-5\"/> :\n                                        <div>\n                                            <MyProject data={projectData}\n                                            />\n                                        </div>\n\n                                }\n                            </div>\n                            <div className=\"col-md-4\">\n                                <AssignedAdmin users={users} loaded={this.state.loaded}/>\n                            </div>\n                        </div>\n                    </Panel>\n                })\n            }\n        </Collapse>;\n        return (\n            <div className=\"row \">\n                <div className=\"col-md-12 \">\n                    <Card loading={loading}>\n                        {view}\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Projects\n","import React, {Component} from 'react';\nimport Progress from \"./Progress\";\n\nimport PresaleServices from '../Services/Api/Api'\nimport {Redirect} from 'react-router-dom'\nimport './style.scss'\nimport Projects from './Projects'\nimport Pagination from \"../Common/Pagination\";\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n        let loggedIn = null;\n        this.state = {\n            loggedIn,\n            data: [],\n            loading: true,\n            taskInProgress: null,\n            taskComplete: null,\n            ProjectComplete: null,\n            name: this.props.name,\n            company_name: this.props.company_name,\n            token:this.props.token,\n            project_data:[],\n            filtered:[],\n            searched:[],\n            searching:false,\n            itemsPerPage:5,\n            currentPage: 1,\n        };\n\n        if(this.state.token!==\"\"&&this.state.token!==undefined) {\n            this.state.loggedIn = true;\n        }\n\n        this.props.setLocation(this.props.history.location.pathname)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.name !== this.state.name || this.props.company_name !== this.state.company_name) {\n            this.setState({\n                name: this.props.name,\n                company_name: this.props.company_name\n            })\n\n        }\n    }\n    onChangeHandler = e => {\n        e.preventDefault();\n\n        const {data, searched,itemsPerPage,project_data} = this.state;\n        const currentPage=1;\n        let value = e.target.value;\n        if(e.target.type===\"date\"){\n            let temp=value.split(\"-\")\n            temp=temp.reverse();\n            value=temp.join('/')\n        }\n        let filtered = [...project_data];\n        let key = e.target.name;\n        searched[key] = value;\n        for (key in searched) {\n            value = searched[key];\n            if (value !== \"\") {\n                filtered = filtered.filter(el => {\n                    const lc = el[key].toLowerCase();\n                    const filter = value.toLowerCase();\n                    return lc.includes(filter);\n                });\n            }\n        }\n        let searchingflag=false;\n        for (key in searched){\n\n            value=searched[key];\n            if(value!==\"\")\n                searchingflag=true\n        }\n        if(!searchingflag){\n            const indexOfLastItem = currentPage * itemsPerPage;\n            const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n            this.setState({\n                filtered: filtered.slice(\n                    indexOfFirstItem, indexOfLastItem\n                ),\n                searched: searched,\n                searching:false\n            });\n        }\n        else\n            this.setState({\n                filtered: filtered,\n                searched: searched,\n                searching:true\n            });\n    };\n\n    componentDidMount() {\n        const { currentPage, itemsPerPage} = this.state;\n        const indexOfLastItem = currentPage * itemsPerPage;\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n        let currentFiltered;\n        PresaleServices.getProjectStatus()\n            .then(response => {\n                this.setState({\n                    data: response.data,\n                    loading: false,\n                    project_data:response.data.Project_Data\n                },()=>{\n                        if(this.state.project_data){\n                            const temp = [...this.state.project_data];\n                            currentFiltered = temp.slice(\n                                indexOfFirstItem,\n                                indexOfLastItem\n                            );\n}\n                        else {\n                            currentFiltered=[]\n                        }\n                    this.setState({filtered: currentFiltered});\n                })\n\n            }).catch(err => console.log(err))\n\n\n    }\n    paginate = pageNumber => {\n        const {project_data,itemsPerPage} = this.state;\n        const indexOfLastItem = pageNumber * itemsPerPage;\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n        const temp = [...project_data];\n        const currentFiltered = temp.slice(indexOfFirstItem, indexOfLastItem);\n        this.setState({currentPage: pageNumber, filtered: currentFiltered});\n    };\n//token\n    render() {\n        const {loggedIn} = this.state;\n        if (loggedIn === false || loggedIn === null) {\n            return <Redirect to=\"/\"/>;\n        }\n        const {data, loading,project_data,searching,itemsPerPage,filtered} = this.state;\n        return <div>\n            <section className=\"dashboard-section\">\n                <div className=\"container mt-4\">\n\n                    <Progress progress={data.Total_Projects} complete={data.Tasks_Completed}\n                              total={data.Tasks_In_Progress} loading={loading}/>\n\n                    <div className=\"row\">\n                        <div className=\"col-md-12 \">\n                            <card className=\"row ant-card ant-card-bordered my-3 p-3\">\n                                <div className=\"col-md-4\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control mt-2\"\n                                        name=\"name\"\n                                        placeholder=\"Search Project\"\n                                        onChange={this.onChangeHandler}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"col-md-3 offset-md-5\">\n                                    {this.props.canCreateProject?<button className=\"ant-btn ant-btn-primary float-right\" onClick={()=>this.props.history.push('/AddProject')}>\n                                      Add Project\n                                    </button>:null}\n                                </div>\n                            </card>\n                        </div>\n                    </div>\n                    <Projects loading={loading} data={filtered}\n                              canWrite={this.props.canWrite} history={this.props.history}\n                              token={this.props.token}\n                    />\n                    <div className=\"col-md-12 p-0\">\n                        <card className=\"d-block text-center ant-card ant-card-bordered my-3 p-3\">\n                    {!searching?\n\n                        <Pagination\n                            itemsPerPage={itemsPerPage}\n                            totalItems={project_data?project_data.length:0}\n                            paginate={this.paginate}\n                        />:null}\n                        </card>\n                    </div>\n                </div>\n            </section>\n        </div>\n    }\n}\n\nexport default Index\n","import React, {Component} from 'react';\n\nclass EmailVerified extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email:this.props.match.params.email,\n        };\n\n    }\n    render() {\n        return (\n            <div>\n\n                <div className=\"container login-wrapper mt-5\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8\">\n                            <div className=\"card text-center\">\n                                <div className=\"card-header\">\n                                    <h2 className=\"text-center my-3\">Email Address Verified</h2>\n                                </div>\n                                <div className=\"card-body\">\n                                    <p>\n                                        Thank you for verifying your email address.\n                                        Please\n                                        <a href=\"javascript:void(0)\"\n                                           onClick={()=>this.props.history.push(\"/Login\")}\n                                        > Click here </a><br/>\n                                        to login\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EmailVerified;\n","import React, {Component} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport cookie from \"react-cookies\";\nimport PresaleServices from '../Services/Api/Api'\nimport {message} from \"antd\";\nimport axios from \"axios\";\n\nclass LogOut extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            setToken: this.props.setToken\n        };\n\n    }\n\n    componentWillMount() {\n        const api = {\n            Authorization: \"Bearer \" + this.props.token\n\n        }\n\n        axios.put('/dashboard/api/user/' + this.props.id + '/offline', null, {headers: api})\n            .then(() => {\n                PresaleServices.logOut(this.state)\n                    .then(res => {\n\n                        if (res) {\n                            cookie.remove(\"admin_token\", {\n                                path: \"/\",\n                            });\n                            this.setState({loading: false});\n                            this.props.setToken(\"\");\n                            this.setState({loading: false});\n                        }\n                    })\n                    .catch(() => {\n                        message.error(\"Email or password not valid\");\n                        this.setState({loading: false});\n                    })\n            })\n    }\n\n    render() {\n        return <Redirect To={\"/Login\"}/>\n    }\n}\n\nexport default LogOut;","import React, {Component} from 'react';\n\nimport PresaleServices from '../Services/Api/Api'\n\nimport {Link} from \"react-router-dom\";\nimport {message} from \"antd\";\n\nexport default class Forget extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n        };\n\n    }\n\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n    onSubmit = e => {\n        e.preventDefault();\n        if (!this.state.email.toLowerCase().includes('vaporvm')) {\n            message.error(\"this email is not registered with us.\");\n            this.setState({loading: false});\n        } else {\n            PresaleServices.forget(this.state).then(res => {\n                this.props.history.push('/Message')\n            }).catch(err => {\n                message.error(\"this email is not registered with us.\")\n            })\n        }\n    };\n\n    render() {\n        const {email} = this.state;\n\n        return (\n            <div>\n\n                <div className=\"container login-wrapper mt-5\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-5\">\n                            <div className=\"card mt-3 \">\n                                <form className=\"was-validated mx-4 my-4\">\n                                    <div className=\"form-group \">\n\n                                        <input\n                                            type=\"email\"\n                                            className=\"form-control\"\n                                            id=\"email\"\n                                            placeholder=\"Enter email\"\n                                            name=\"email\"\n                                            required\n                                            onChange={this.onChange}\n                                            value={email}\n                                            pattern=\"^[a-zA-Z]+.*@[A-Za-z]+([.][a-zA-Z]+)+$\"\n                                        />{this.state.email !== \"\" ? <div>\n                                        <div className=\"valid-feedback\">Valid.</div>\n                                        <div className=\"invalid-feedback\">\n                                            Please fill out this field.\n                                        </div>\n                                    </div> : null}\n                                    </div>\n                                    <button\n                                        value={\"Reset password\"}\n                                        onClick={this.onSubmit}\n                                        className=\"ant-btn ant-btn-primary w-100 mt-3\"\n                                    >\n                                        Request Reset link\n                                    </button>\n                                    <Link\n                                        className=\"forgot w-100 text-center m-auto d-block pt-3\"\n                                        to=\"/Login\"\n                                    >\n                                        Back to Login\n                                    </Link>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\n\nclass Message extends Component {\n\n    render() {\n\n        return (\n            <div>\n\n                <div className=\"container login-wrapper mt-5\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8\">\n                            <div className=\"card text-center\">\n                                <div className=\"card-header\">\n                                    <h2 className=\"text-center my-3\">Reset Your Password</h2>\n                                </div>\n\n                                <div className=\"card-body\">\n\n                                    <p>We have sent you an email with password reset link. Please check your inbox to reset your password.\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Message\n\n","import React, {Component} from 'react';\n\n\nimport {message} from \"antd\";\nimport PresaleServices from '../Services/Api/Api';\n\nexport default class Reset extends Component {\n    state = {\n        token: this.props.match.params.token,\n        password: \"\",\n        password_confirmation: \"\",\n        errors: {},\n        success: \"\"\n    };\n\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n    onInput = e => {\n        const password = e.target.value;\n        if (!password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\")) {\n            message.error(\"password must be 8 characters long and should have at least one capital letter and one digit in it.\")\n        }\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        if(this.state.password!==this.state.password_confirmation){\n            message.error(\"Password and Confirm Password do not match\")\n        }\n        else if(this.state.password.length<8){\n            message.error(\"Password must be at least 8 characters long with at least one number and one capital letter\")\n        }\n        else if(!this.state.password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\")){\n            message.error(\"Password must be at least 8 characters long with at least one number and one capital letter\")\n        }\n        else {\n            const data = this.state;\n            PresaleServices.resetPassword({\n                password: data.password,\n                repassword: data.password_confirmation\n                , token: data.token\n            }).then(() => this.props.history.push(\"/ResetLink\")).catch(err =>\n                message.error(\"Can't reset password\"))\n\n        }\n    };\n\n    render() {\n        const {password_confirmation, password, errors} = this.state;\n        return (\n            <div>\n\n                <div className=\"container login-wrapper mt-5\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-5\">\n                            <div className=\"card mt-3\">\n                                <form className=\"was-validated mx-4 my-4\" onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"password\"\n                                            className=\"form-control\"\n                                            placeholder=\"Enter Password\"\n                                            name=\"password\"\n                                            onChange={this.onChange}\n                                            value={password}\n                                            onBlur={e => this.OnInput(e)}\n                                            required\n                                        />\n                                        <small id=\"passwordHelp\" className=\"form-text text-danger\">\n                                            {errors.password}\n                                        </small>\n                                        <small\n                                            id=\"passwordHelp\"\n                                            className=\"form-text text-success text-bold\"\n                                        >\n                                            {this.state.success}\n                                        </small>\n                                        {/*<div className=\"valid-feedback\">{this.state.success}</div>*/}\n                                        {/*<div className=\"invalid-feedback\">*/}\n                                        {/*    {errors.password}*/}\n                                        {/*</div>*/}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"password\"\n                                            className=\"form-control\"\n                                            placeholder=\"Confirm password\"\n                                            name=\"password_confirmation\"\n                                            onChange={this.onChange}\n                                            value={password_confirmation}\n                                            required\n                                        />\n                                        <div className=\"valid-feedback\">{this.state.success}</div>\n                                        <div className=\"invalid-feedback\">\n                                            {errors.password}\n                                        </div>\n                                    </div>\n                                    {/*<Link*/}\n                                    {/*    className=\"forgot my-2 text-primary fade-in\"*/}\n                                    {/*    to=\"/Login\"*/}\n                                    {/*>*/}\n                                    {/*    Back to login*/}\n                                    {/*</Link>*/}\n                                    <button className=\"ant-btn ant-btn-primary w-100 d-block\">\n                                        change password\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\n\nimport {Link, } from \"react-router-dom\";\n\nexport default class ResetLink extends Component {\n    render() {\n        return (\n            <div>\n\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8\">\n                            <div className=\"card mt-3\">\n                                <div className=\"card-body mx-3 my-3 text-center\">\n                                    <p>your password has been changed successfully</p>\n                                    <p>Please <span><Link to={'/Login'}>Login</Link> </span> to continue</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\n\nimport PresaleServices from '../Services/Api/Api'\nimport {Button, message, Card} from \"antd\";\n\nexport default class EditProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            password: \"\",\n            setName: this.props.setName,\n            repassword: \"\",\n            loading: false\n        }\n    }\n\n    onInput = e => {\n        const password = e.target.value;\n        if (password !== \"\") {\n            if (password.length < 8 || !password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\")) {\n                message.error(\"Password must be at least 8 characters long with at least one number and one capital letter\")\n            }\n        }\n    }\n    onSubmit = e => {\n        let flag = true\n        this.setState({\n            loading: true\n        });\n\n        e.preventDefault();\n        if (this.state.name === \"\") {\n            flag = false\n            message.error(\"name is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.password != this.state.repassword) {\n            flag = false\n            message.error(\"Password and Confirm Password do not match\")\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.password.length > 0 && this.state.password.length < 8) {\n            flag = false\n            message.error(\"Password must be at least 8 characters long with at least one number and one capital letter \")\n            this.setState({\n                loading: false\n            })\n\n        }\n\n        if (this.state.password !== \"\" && !this.state.password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\")) {\n            {\n                flag = false\n                message.error(\"Password must be at least 8 characters long with at least one number and one capital letter\")\n\n                this.setState({\n                    loading: false\n                })\n            }\n        }\n        if (flag) {\n\n            PresaleServices.editProfile(this.state).then(\n                res => {\n                    this.props.setName(this.state.name);\n\n                    this.props.history.push('/EditProfile');\n                    message.success(\"profile has been updated\")\n                    this.setState({\n                        loading: false\n                    })\n                }).catch(err => {\n                    message.error(\"can't update user\");\n                    this.setState({\n                        loading: false\n                    })\n                }\n            )\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    componentDidMount() {\n        this.setState({loading: true});\n        PresaleServices.geteditProfile().then(res => {\n                if (res) {\n                    this.setState({\n                        name: res.name,\n                        email: res.email,\n\n                        loading: false\n                    })\n\n                } else {\n                    //message.error(\"Profile not updated\");\n                    this.setState({\n                        loading: false\n                    })\n                }\n            }\n        ).catch(err => {\n            message.error(err);\n        });\n    }\n\n    onChangeHandler = e => {\n        if (e.target.type !== \"email\") {\n            e.preventDefault();\n            this.setState({\n                [e.target.name]: e.target.value\n            });\n        }\n    }\n\n    render() {\n        const {name, email, password, repassword, loading} = this.state;\n        return (\n            <div>\n\n                <div className=\"container login-wrapper mt-5\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8\">\n                            <Card className=\"card\" loading={loading}>\n                                <div className=\"card-header\"><h2>Personal Details</h2></div>\n                                <div className=\"card-body row\">\n                                    <div className=\"form-group col-md-6\">\n                                        <label>Full Name</label>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Full Name\"\n                                            name=\"name\"\n                                            value={name}\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group col-md-6\">\n                                        <label>Email Address</label>\n                                        <input\n                                            type=\"email\"\n                                            className=\"form-control\"\n                                            placeholder=\"Email Address\"\n                                            name=\"email\"\n                                            value={email}\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </div>\n                                    <div className=\"form-group col-md-6\">\n                                        <label>New Password</label>\n                                        <input\n                                            type=\"password\"\n                                            name=\"password\"\n                                            className=\"form-control\"\n                                            placeholder=\"New Password\"\n                                            value={password}\n                                            onBlur={this.onInput}\n                                            onChange={this.onChangeHandler}\n                                        />\n                                    </div>\n                                    <div className=\"form-group col-md-6\">\n                                        <label>Confirm Password</label>\n                                        <input\n                                            type=\"password\"\n                                            name=\"repassword\"\n                                            className=\"form-control\"\n                                            placeholder=\"Confirm Password\"\n                                            value={repassword}\n                                            onChange={this.onChangeHandler}\n                                        />\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <Button type=\"primary\" className=\"ant-btn ant-btn-primary mt-3 float-right\"\n                                                onClick={this.onSubmit}>\n                                            Update\n                                        </Button>\n                                    </div>\n                                </div>\n                            </Card>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport Pagination from \"../Common/Pagination\";\nimport PresaleServices from '../Services/Api/Api';\nimport {Button} from \"antd\";\nimport { EditOutlined } from '@ant-design/icons';\n\nexport default class Customers extends Component {\n    constructor(props) {\n        super(props);\n        let loggedIn = null;\n        this.state = {\n            loggedIn,\n            data: [],\n            filtered: [],\n            searched: [],\n            currentPage: 1,\n            itemsPerPage: 5,\n            searching:false,\n            loaded:false\n        };\n        this.props.setLocation(this.props.history.location.pathname)\n    }\n\n    onChangeHandler = e => {\n        e.preventDefault();\n        const {data, searched,itemsPerPage} = this.state;\n        const currentPage=1;\n        let value = e.target.value;\n        if(e.target.type==\"date\"){\n            let temp=value.split(\"-\")\n            temp=temp.reverse();\n            value=temp.join('/')\n        }\n        let filtered = [...data];\n        let key = e.target.name;\n        searched[key] = value;\n        for (key in searched) {\n            value = searched[key];\n            if (value !== \"\") {\n                filtered = filtered.filter(el => {\n                    const lc = el[key].toLowerCase();\n                    const filter = value.toLowerCase();\n                    return lc.includes(filter);\n                });\n            }\n        }\n        let searchingflag=false;\n        for (key in searched){\n\n            value=searched[key];\n            if(value!==\"\")\n                searchingflag=true\n        }\n        if(!searchingflag){\n            const indexOfLastItem = currentPage * itemsPerPage;\n            const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n            this.setState({\n                filtered: filtered.slice(\n                    indexOfFirstItem, indexOfLastItem\n                ),\n                searched: searched,\n                searching:false\n            });\n        }\n        else\n            this.setState({\n                filtered: filtered,\n                searched: searched,\n                searching:true\n            });\n    };\n\n    componentDidMount() {\n        PresaleServices.getCustomers()\n            .then(res =>  {\n                const { currentPage, itemsPerPage} = this.state;\n                const indexOfLastItem = currentPage * itemsPerPage;\n                const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n                let currentFiltered;\n                let data=res.data\n                this.setState({\n                    data\n                },()=>{\n                    if(data.length){\n                        const temp = [...data];\n                        currentFiltered = temp.slice(\n                            indexOfFirstItem,\n                            indexOfLastItem\n                        );}\n                    else {\n                        currentFiltered=[]\n                    }\n                    this.setState({filtered: currentFiltered,loaded:true});\n                });\n            })\n            .catch(err => console.log(err));\n    }\n\n    paginate = pageNumber => {\n        const {data,itemsPerPage} = this.state;\n        const indexOfLastItem = pageNumber * itemsPerPage;\n        const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n        const temp = [...data];\n        const currentFiltered = temp.slice(indexOfFirstItem, indexOfLastItem);\n        this.setState({currentPage: pageNumber, filtered: currentFiltered});\n    };\n    addCustomerPage=()=>{\n        this.props.history.push('/AddCustomer');\n    };\n    editUser=(id)=>{\n        this.props.history.push(`/EditCustomer/${id}`)\n    };\n    render() {\n        const {filtered, itemsPerPage, data,searching,loaded} = this.state;\n\n        const tableRows = filtered.length ? (\n            filtered.map((item, index) => {\n                return (\n                    <tr className=\"text-left\" key={index}>\n                        <td>{item.name}</td>\n                        <td>{item.email}</td>\n                        <td>{item.phone}</td>\n                        <td>{item.company_name}</td>\n                        <td style={{textAlign: \"center\"}}>\n                            {this.props.canwrite?<span >\n                                {/*<button className=\" btn btn-large green\"> update</button>*/}\n                                <EditOutlined  onClick={()=>this.editUser(item.id)}/>\n                            </span>:null}\n                        </td>\n\n                    </tr>\n                );\n            })\n        ) : (\n            loaded?<tr>\n                <td>\n                    <p className=\"text-danger\">No record found</p>\n                </td>\n            </tr>:null\n        );\n        return (\n            <div>\n                {/*<Header HeaderText={\"Billings and Purchased\"}/>*/}\n                <div className=\"content search-table-wrapper\"\n                     id=\"main-content\"\n                     style={{clear: \"both\", width: \"90%\", marginLeft: \"8%\"}}\n                >\n                    <div className=\"container-fluid mt-5\">\n                        <div className=\"row\">\n                                <div className=\"col-md-12 card\">\n                                    <div className=\"card-body text-capitalize font-weight-bolder text-dark w-100\">\n                                        <h4 className=\"d-inline-block\">Customers</h4>\n                                        {this.props.canwrite?\n                                            <span className=\"float-right\">\n                                           {this.props.canwrite?\n                                               <span className=\"float-right\">\n                                            <Button  onClick={this.addCustomerPage} className=\"ant-btn ant-btn-primary w-100 \"> Add Customer</Button>\n                                        </span>:null}\n                                        </span>:null}\n                                    </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card mt-3\">\n                        <div className=\"card-header text-bolder\">\n                            <h4 className=\"font-weight-bold mb-0\"> Manage Customers</h4>\n                        </div>\n                        <div className=\"card-body\">\n                            <table className=\"table \">\n                                <thead>\n\n                                <tr>\n\n                                    <th>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"name\"\n                                            placeholder=\"Name\"\n                                            onChange={this.onChangeHandler}\n                                            required\n\n                                        />\n                                    </th>\n\n                                    <th width=\"170px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            placeholder=\"Email\"\n                                            name=\"email\"\n                                            onChange={this.onChangeHandler}\n                                            required\n\n                                        />\n                                    </th>\n                                    <th width=\"180px\">\n                                        <input\n                                            type=\"number\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"phone\"\n                                            placeholder=\"Phone Number\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                    <th width=\"190px\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control W-100 d-block\"\n                                            name=\"company_name\"\n                                            placeholder=\"Company Name\"\n                                            onChange={this.onChangeHandler}\n                                            required\n                                        />\n                                    </th>\n                                    <th></th>\n                                </tr>\n                                <tr className=\"text-left\">\n                                    <th >Name</th>\n                                    <th >Email</th>\n                                    <th >Phone Number</th>\n                                    <th>Company Name</th>\n                                    <th></th>\n\n                                </tr>\n                                </thead>\n                                <tbody className=\"text-center\">{tableRows}</tbody>\n                            </table>\n                            {!searching?\n                                <Pagination\n                                    itemsPerPage={itemsPerPage}\n                                    totalItems={data.length}\n                                    paginate={this.paginate}\n                                />:null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\n","import React, {Component} from \"react\";\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nclass Phone extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            value:this.props.initial!==undefined?this.props.initial:\"\"\n        }\n\n\n    }\n    setValue=e=>{\n        this.setState({\n            value:e\n        })\n        this.props.setValue(e)\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.initial!==this.props.initial)\n        {\n            this.setState({\n                value:this.props.initial\n            })\n        }\n    }\n\n    render() {\n        return(\n            <PhoneInput\n                placeholder=\"Enter phone number\"\n                value={this.state.value}\n                onChange={this.setValue}\n                className={\"form-control\"}/>\n        )}\n}\nexport default Phone","import React, {Component} from \"react\";\nimport {Button, message} from \"antd\";\nimport PresaleServices from \"../Services/Api/Api\";\nimport Phone from \"../Common/Phone\";\n\nexport default class AddUser extends Component {\n    state = {\n        email: \"\", password: \"\", repassword: \"\", company_name: \"\", phone: \"\", name: \"\", loading: false\n    };\n    onChangeHandler = e => {\n        e.preventDefault();\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n    setPhone = phone => {\n        this.setState({\n            phone: phone\n        })\n    }\n    onSubmitHandler = e => {\n        this.setState({\n            loading: true\n        });\n        e.preventDefault();\n        let flag = false\n\n        if (this.state.name === \"\") {\n            flag = true;\n            message.error(\"Name is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.email === \"\") {\n            flag = true;\n            message.error(\"Email is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.phone === \"\") {\n            flag = true;\n            message.error(\"Phone is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.company_name === \"\") {\n            flag = true;\n            message.error(\"Company name is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.password !== this.state.repassword) {\n            flag = true\n            message.error(\"Password and Confirm Password do not match\")\n            this.setState({\n                loading: false\n            })\n        }\n\n        if (this.state.password === \"\") {\n            flag = true;\n            message.error(\"Password is required\");\n            this.setState({\n                loading: false\n            })\n        }\n\n        if (this.state.repassword === \"\") {\n            flag = true;\n            message.error(\"Confirm Password is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.password !== \"\") {\n\n            if (this.state.password.length < 8 || !this.state.password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\")) {\n                {\n                    flag = true;\n                    message.error(\"password must be 8 characters long and should have at least one capital letter and one digit in it.\")\n\n                    this.setState({\n                        loading: false\n                    })\n                }\n            }\n        }\n        if (!flag) {\n            PresaleServices.createCustomer(this.state).then(() => {\n                message.success(\"Costumer created successfully.\");\n                this.setState({\n                    loading: false,\n                });\n                this.props.history.push('/Customers')\n            }).catch(() => {\n                message.error(\"can't create user.\")\n                this.setState({\n                    loading: false,\n                });\n            })\n\n        }\n    };\n    onCancel = () => {\n        this.props.history.push('/Customers')\n    }\n\n    render() {\n        const {email, password, repassword, company_name, phone, name, loading} = this.state;\n        return (\n            <div>\n\n                <div className=\"container\">\n                    <div className=\"row mt-2\">\n                        <div className=\" col-md-12 \">\n                            <div className=\" card\">\n                                <div className=\"card-body text-capitalize font-weight-bolder text-dark w-100\">\n                                    <h1>Add Customer</h1>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card mt-5\">\n                                <div className=\"card-body\">\n                                    <form onSubmit={this.onSubmitHandler}>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Name:</label>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"username\"\n                                                name=\"name\"\n                                                required\n                                                value={name}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Email:</label>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"Email\"\n                                                name=\"email\"\n                                                required\n                                                value={email}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Company Name:</label>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"Company\"\n                                                name=\"company_name\"\n                                                required\n                                                value={company_name}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Phone:</label>\n                                            <Phone setValue={this.setPhone} initial={phone}/>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Password:</label>\n                                            <input\n                                                type=\"password\"\n                                                className=\"form-control\"\n                                                placeholder=\"Password\"\n                                                name=\"password\"\n                                                required\n                                                value={password}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Confirm Password:</label>\n                                            <input\n                                                type=\"password\"\n                                                className=\"form-control\"\n                                                placeholder=\"Confirm Password\"\n                                                name=\"repassword\"\n                                                required\n                                                value={repassword}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <span className=\"float-right\">\n                                             <Button loading={loading} onClick={this.onSubmitHandler}\n                                                     className=\"ant-btn ant-btn-primary w-100 \"> Submit</Button>\n\n                                        </span>\n                                        <span className=\"float-right\">\n                                             <Button onClick={this.onCancel}\n                                                     className=\"ant-btn ant-btn-primary ant-btn-gray w-100 \"> cancel</Button>\n                                        </span>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {Button, message} from \"antd\";\nimport PresaleServices from \"../Services/Api/Api\";\nimport Phone from \"../Common/Phone\";\n\nexport default class EditUser extends Component {\n    state = {\n        loading: false,\n        id: this.props.match.params.id,\n        email: \"\", password: \"\", repassword: \"\", company_name: \"\", name: \"\",\n        phone: \"\"\n    };\n    setPhone=phone=>{\n        this.setState({\n            phone: phone\n        })\n    }\n    onChangeHandler = e => {\n        if (e.target.name !== \"email\") {\n            e.preventDefault();\n            this.setState({\n                [e.target.name]: e.target.value\n            });\n        }\n    };\n\n    componentDidMount() {\n        PresaleServices.getCustomer(this.state.id).then(res => {\n            if (res) {\n                this.setState({\n                    email: res.data.email, password: \"\",\n                    repassword: \"\", company_name: res.data.company_name,\n                    phone: res.data.phone, name: res.data.name,\n                });\n\n            }\n\n        });\n\n    }\n\n    onSubmitHandler = e => {\n        e.preventDefault();\n        this.setState({\n            loading: true\n        })\n        let flag = false\n\n        if (this.state.name === \"\") {\n            flag = true\n            message.error(\"name is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.email === \"\") {\n            flag = true\n            message.error(\"email is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.phone === \"\") {\n            flag=true;\n            message.error(\"Phone is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.company_name === \"\") {\n            flag=true;\n            message.error(\"Company name is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        \n        if (this.state.password !== this.state.repassword) {\n            flag = true\n            message.error(\"Password and Confirm Password do not match\")\n            this.setState({\n                loading: false\n            })\n        }\n\n        if (this.state.password.length) {\n            if (!this.state.password || (this.state.password.length < 8 || !this.state.password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\"))) {\n                {\n                    flag = true\n                    message.error(\"password must be 8 characters long and should have at least one capital letter and one digit in it.\")\n\n                    this.setState({\n                        loading: false\n                    })\n                }\n            }\n        }\n        if (!flag) {\n            PresaleServices.editCustomer(this.state).then(() => {\n                message.success(\"Customer Updated successfully.\");\n                this.setState({\n                    loading: false\n                });\n                this.props.history.push('/Customers')\n            }).catch(() => {\n                message.error(\"can't update user.\")\n                this.setState({\n                    loading: false\n                });\n            })\n\n        }\n    };\n    onCancel = () => {\n\n        this.props.history.push('/Customers')\n\n    }\n\n    render() {\n        const {email, password, repassword, company_name, phone, name, loading} = this.state;\n        \n\n        return (\n            <div>\n\n                <div className=\"container\">\n                    <div className=\"row mt-2\">\n                        <div className=\" col-md-12 \">\n                            <div className=\"card\">\n                                <div className=\"card-body text-capitalize font-weight-bolder text-dark w-100\">\n                                    <h1>Edit Customer</h1>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card mt-5\">\n                                <div className=\"card-body\">\n                                    <form onSubmit={this.onSubmitHandler}>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Name:</label>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"username\"\n                                                name=\"name\"\n                                                required\n                                                value={name}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Email:</label>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"Email\"\n                                                name=\"email\"\n                                                required\n                                                value={email}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"phone\">Phone:</label>\n                                            <Phone setValue={this.setPhone} initial={phone}/>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Company Name:</label>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"Company Name\"\n                                                name=\"company_name\"\n                                                required\n                                                value={company_name}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Password:</label>\n                                            <input\n                                                type=\"password\"\n                                                className=\"form-control\"\n                                                placeholder=\"Password\"\n                                                name=\"password\"\n                                                required\n                                                value={password}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Confirm Password:</label>\n                                            <input\n                                                type=\"password\"\n                                                className=\"form-control\"\n                                                placeholder=\"Confirm Password\"\n                                                name=\"repassword\"\n                                                required\n                                                value={repassword}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n\n                                        <span className=\"float-right\">\n                                             <Button loading={loading} onClick={this.onSubmitHandler}\n                                                     className=\"ant-btn ant-btn-primary w-100 \"> Submit</Button>\n                                        </span>\n                                        <span className=\"float-right\">\n                                             <Button onClick={this.onCancel}\n                                                     className=\"ant-btn ant-btn-primary w-100 \"> cancel</Button>\n                                        </span>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {Button, message} from \"antd\";\nimport PresaleServices from \"../Services/Api/Api\";\n\nexport default class AddUser extends Component {\n    state = {\n        email: \"\", password: \"\", repassword: \"\", role_name: \"\", status: \"\", name: \"\",\n        roles: [{value: \"\", display: \"Select role\"}],\n        statuses: [{value: \"\", display: \"Select status\"}, {value: \"Active\", display: \"Active\"}, {\n            value: \"Inactive\",\n            display: \"Inactive\"\n        }],\n        fetching: false\n    };\n\n    onChangeHandler = e => {\n        e.preventDefault();\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n    onSubmitHandler = e => {\n        this.setState({\n            fetching: true\n        });\n        e.preventDefault();\n        let flag = false\n        if (this.state.name === \"\") {\n            flag = true;\n\n            message.error(\"name is required\");\n            this.setState({\n                fetching: false\n            })\n        }\n        if (this.state.email !== \"\") {\n            if (!this.state.email.toLowerCase().includes('vaporvm')) {\n                flag = true\n\n                message.error(\"can't create user\");\n                this.setState({\n                    fetching: false\n                })\n            }\n        }\n        if (this.state.email === \"\") {\n            flag = true\n\n            message.error(\"email is required\");\n            this.setState({\n                fetching: false\n            })\n        }\n\n        if (this.state.status === \"\") {\n            flag = true;\n            message.error(\"Status is required\");\n            this.setState({\n                fetching: false\n            })\n        }\n        if (this.state.role_name === \"\") {\n            flag = true\n            message.error(\"User role name is required\");\n            this.setState({\n                fetching: false\n            })\n        }\n        if (this.state.password !== this.state.repassword) {\n            message.error(\"Password and Confirm Password do not match\")\n            flag = true\n            this.setState({\n                fetching: false\n            })\n        }\n        if (this.state.password === \"\") {\n            flag = true\n            message.error(\"Password is required\");\n            this.setState({\n                fetching: false\n            })\n        }\n        if (this.state.repassword === \"\") {\n            flag = true;\n\n            message.error(\"Confirm Password is required\");\n            this.setState({\n                fetching: false\n            })\n        }\n        if (this.state.password !== \"\") {\n            if (this.state.password.length < 8 || !this.state.password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\")) {\n                {\n                    flag = true\n                    message.error(\"password must be 8 characters long and should have at least one capital letter and one digit in it.\")\n                    this.setState({\n                        fetching: false\n                    })\n                }\n            }\n        }\n        if (!flag) {\n            PresaleServices.createUser(this.state).then(() => {\n                this.setState({\n                    fetching: false\n                });\n                message.success(\"User created successfully.\")\n                this.props.history.push('/Users')\n            }).catch(() => {\n                message.error(\"can't create user.\")\n                this.setState({\n                    fetching: false\n                });\n            })\n\n        }\n    };\n\n    componentDidMount() {\n        PresaleServices.getRoles().then(res => {\n            if (res) {\n                let rolesFetched = res.map(role => {\n                    return {value: role, display: role};\n                });\n                rolesFetched = [{value: \"\", display: \"Select Role\"}].concat(\n                    rolesFetched\n                );\n                this.setState({roles: rolesFetched});\n            }\n        });\n    }\n\n    onCancel = () => {\n\n        this.props.history.push('/Users')\n    }\n\n    render() {\n        const {statuses, roles, email, password, repassword, role_name, status, name, fetching} = this.state;\n        return (\n            <div>\n\n                <div className=\"container\">\n                    <div className=\"row mt-2\">\n                        <div className=\"col-md-12\">\n                            <div className=\" card\">\n                                <div className=\"card-body text-capitalize font-weight-bolder text-dark w-100\">\n                                    <h1>User</h1>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\" card mt-5\">\n                                <div className=\"card-body\">\n                                    <form onSubmit={this.onSubmitHandler}>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Name:</label>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"Name\"\n                                                name=\"name\"\n                                                required\n                                                value={name}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Email:</label>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"Email\"\n                                                name=\"email\"\n                                                required\n                                                value={email}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"Select status\">Select status</label>\n                                            <select\n                                                className=\"form-control\"\n                                                name=\"status\"\n                                                value={status}\n                                                onChange={this.onChangeHandler}\n                                                required\n                                            >\n                                                {statuses.map(_status => (\n                                                    <option key={_status.value} value={_status.value}>\n                                                        {_status.display}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"Select hospital\">Select Role</label>\n                                            <select\n                                                className=\"form-control\"\n                                                name=\"role_name\"\n                                                value={role_name}\n                                                onChange={this.onChangeHandler}\n                                                required\n                                            >\n                                                {roles.map(_role => (\n                                                    <option key={_role.value} value={_role.value}>\n                                                        {_role.display}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Password:</label>\n                                            <input\n                                                type=\"password\"\n                                                className=\"form-control\"\n                                                placeholder=\"Password\"\n                                                name=\"password\"\n                                                required\n                                                value={password}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Confirm Password:</label>\n                                            <input\n                                                type=\"password\"\n                                                className=\"form-control\"\n                                                placeholder=\"Confirm Password\"\n                                                name=\"repassword\"\n                                                required\n                                                value={repassword}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n\n                                        <span className=\"float-right\">\n                                             <Button loading={fetching} onClick={this.onSubmitHandler}\n                                                     className=\"ant-btn ant-btn-primary w-100 \"> Submit</Button>\n                                        </span>\n                                        <span className=\"float-right mx-md-2 mx-sm-0\">\n                                             <Button onClick={this.onCancel}\n                                                     className=\"ant-btn ant-btn-primary ant-btn-gray w-100 \"> cancel</Button>\n                                        </span>\n                                    </form>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {Button, message} from \"antd\";\nimport PresaleServices from \"../Services/Api/Api\";\n\nexport default class EditUser extends Component {\n    state = {\n        loading: false,\n        id: this.props.match.params.id,\n        email: \"\", password: \"\", repassword: \"\", role_name: \"\", status: \"\", name: \"\",\n        roles: [{value: \"\", display: \"Select role\"}],\n        statuses: [{value: \"\", display: \"Select status\"}, {value: \"Active\", display: \"Active\"}, {\n            value: \"Inactive\",\n            display: \"Inactive\"\n        }],\n\n    };\n    onChangeHandler = e => {\n        if (e.target.name !== \"email\") {\n            e.preventDefault();\n            this.setState({\n                [e.target.name]: e.target.value\n            });\n        }\n        ;\n    }\n\n    componentDidMount() {\n        PresaleServices.getUser(this.state.id).then(res => {\n            if (res) {\n                let rolesFetched = res.roles.map(role => {\n                    return {value: role, display: role};\n                });\n                rolesFetched = [{value: \"\", display: \"Select Role\"}].concat(\n                    rolesFetched\n                );\n                this.setState({\n                    roles: rolesFetched,\n                    email: res.users.data.email, password: \"\",\n                    repassword: \"\", role_name: res.users.data.role_name,\n                    status: res.users.data.status, name: res.users.data.name,\n                });\n                localStorage.setItem(\"data\", JSON.stringify(res.users.data))\n\n            }\n        });\n    }\n\n    onSubmitHandler = e => {\n        this.setState({\n            loading: true\n        });\n        e.preventDefault();\n        let flag = false\n        if (this.state.name === \"\") {\n            flag = true\n\n            message.error(\"Name is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.email === \"\") {\n            flag = true\n\n            message.error(\"Email is required\");\n            this.setState({\n                loading: false\n            })\n        }\n\n        if (this.state.status === \"\") {\n            flag = true\n\n            message.error(\"Status is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.user_role === \"\") {\n            flag = true\n\n            message.error(\"User role name is required\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.password !== this.state.repassword) {\n            message.error(\"Password and Confirm Password do not match\")\n            flag = true\n            this.setState({\n                loading: false\n            })\n        }\n\n        if (!this.state.email.toLowerCase().includes('vaporvm')) {\n            flag = true\n\n            message.error(\"Can't create user\");\n            this.setState({\n                loading: false\n            })\n        }\n        if (this.state.password.length > 0) {\n            if (!this.state.password || ((this.state.password.length < 8)\n                || !this.state.password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).+$\"))) {\n                {\n                    flag = true\n\n                    message.error(\"password must be 8 characters long and should have at least one capital letter and one digit in it.\")\n\n                    this.setState({\n                        loading: false\n                    })\n                }\n            }\n        }\n        if (!flag) {\n            PresaleServices.editUser(this.state).then(() => {\n                message.success(\"User is updated .\");\n                this.setState({\n                    loading: false\n                });\n                this.props.history.push('/Users')\n            }).catch(() => {\n                message.error(\"Can't update user.\");\n                this.setState({\n                    loading: false\n                });\n            })\n\n        }\n    };\n    onCancel = () => {\n\n        this.props.history.push('/Users')\n\n    }\n\n    render() {\n        const {statuses, roles, email, password, repassword, role_name, status, name, loading} = this.state;\n        return (\n            <div>\n\n                <div className=\"container\">\n                    <div className=\"row mt-2\">\n                        <div className=\" col-md-12 \">\n                            <div className=\"card\">\n                                <div className=\"card-body text-capitalize font-weight-bolder text-dark w-100\">\n                                    <h1>Edit User</h1>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card mt-5\">\n                                <div className=\"card-body\">\n                                    <form onSubmit={this.onSubmitHandler}>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Name:</label>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"username\"\n                                                name=\"name\"\n                                                required\n                                                value={name}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Email:</label>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"Email\"\n                                                name=\"email\"\n                                                required\n                                                value={email}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"Select hospital\">Select status</label>\n                                            <select\n                                                className=\"form-control\"\n                                                name=\"status\"\n                                                value={status}\n                                                onChange={this.onChangeHandler}\n                                                required\n                                            >\n                                                {statuses.map(_status => (\n                                                    <option key={_status.value} value={_status.value}>\n                                                        {_status.display}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"Select hospital\">Select Role</label>\n                                            <select\n                                                className=\"form-control\"\n                                                name=\"role_name\"\n                                                value={role_name}\n                                                onChange={this.onChangeHandler}\n                                                required\n                                            >\n                                                {roles.map(_role => (\n                                                    <option key={_role.value} value={_role.value}>\n                                                        {_role.display}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Password:</label>\n                                            <input\n                                                type=\"password\"\n                                                className=\"form-control\"\n                                                placeholder=\"Password\"\n                                                name=\"password\"\n                                                required\n                                                value={password}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Confirm Password:</label>\n                                            <input\n                                                type=\"password\"\n                                                className=\"form-control\"\n                                                placeholder=\"Confirm Password\"\n                                                name=\"repassword\"\n                                                required\n                                                value={repassword}\n                                                onChange={this.onChangeHandler}\n                                            />\n                                        </div>\n\n                                        <span className=\"float-right\">\n                                             <Button loading={loading} onClick={this.onSubmitHandler}\n                                                     className=\"ant-btn ant-btn-primary w-100 \"> Submit</Button>\n\n                                        </span>\n                                        <span className=\"float-right\">\n                                             <Button onClick={this.onCancel}\n                                                     className=\"ant-btn ant-btn-primary ant-btn-gray w-100 \"> cancel</Button>\n                                        </span>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Button, message, Card} from \"antd\";\nimport PresaleServices from \"../Services/Api/Api\";\nimport {Select} from 'antd';\nimport 'antd/dist/antd.css';\nimport {Redirect} from \"react-router-dom\";\n\nconst {Option} = Select;\n\nclass ResourceAssignment extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            usersFetched: [],\n            projects: [],\n            selected: [],\n            projectsFetched: [],\n            empty: [],\n            project: this.props.match.params.projectName ? this.props.match.params.projectName : \"\"\n        }\n        this.props.setLocation(this.props.history.location.pathname)\n    }\n\n\n    onSubmit = e => {\n        e.preventDefault();\n        const {selected, project} = this.state\n        if (selected.length === 0) {\n            message.error(\"Please select User\")\n        } else if (project === \"\") {\n            message.error(\"Please select Project.\")\n        } else {\n            PresaleServices.assignResources(\n                {\n                    users: this.state.selected,\n                    project: project\n                }\n            ).then(() => {\n                message.success(\"Resource (s) Assigned.\")\n\n            }).catch(() => {\n                message.error(\"can't assign resources.\")\n            })\n\n        }\n    }\n    handleChange = value => {\n        this.setState({\n            selected: value\n        })\n    }\n\n    componentDidMount() {\n\n        PresaleServices.getUserNames().then(res => {\n                localStorage.setItem(\"data\", JSON.stringify(res))\n                let projectsFetched;\n                if (res) {\n                    let usersFetched = res.users.map(user => {\n                        return {value: user.id, display: user.name};\n                    });\n                    usersFetched = [].concat(\n                        usersFetched\n                    );\n\n                    projectsFetched = res.projects.map(project => {\n                        return {value: project.name, display: project.name, users: project.selected};\n                    });\n                    projectsFetched = [].concat(\n                        projectsFetched\n                    );\n\n\n                    let users = []\n                    for (let i = 0; i < usersFetched.length; i += 1) {\n                        users.push(\n                            <Option key={usersFetched[i].value}> {usersFetched[i].display}</Option>\n                        )\n                    }\n                    let projects = []\n\n                    for (let i = 0; i < projectsFetched.length; i += 1) {\n                        projects.push(\n                            <Option key={projectsFetched[i].value}> {projectsFetched[i].display}</Option>\n                        )\n                    }\n                    this.setState({\n                            usersFetched: users,\n                            projectsFetched: projects,\n                            projects: projectsFetched,\n\n                        },\n                        () => {\n\n                            let index = -1\n                            const {projects} = this.state\n                            if (this.state.projectName !== \"\") {\n                                for (let i = 0; i < projects.length; i++) {\n\n                                    if (this.state.project === projects[i].value)\n                                        index = i\n                                }\n                                if (index !== -1) {\n                                    const users = this.state.projects[index].users\n                                    for (let i = 0; i < users.length; i++) {\n                                        users[i] = users[i] + \"\"\n                                    }\n                                    this.setState({\n                                        selected: users,\n\n                                    })\n                                } else {\n\n                                    this.setState({\n                                        selected: this.state.empty,\n\n                                    })\n                                }\n                            }\n                        }\n                    )\n                }\n\n            }\n        )\n    }\n\n    onChangeHandler = e => {\n        let index = -1;\n        const {projects} = this.state;\n        for (let i = 0; i < projects.length; i++) {\n            if (e === projects[i].value)\n                index = i\n        }\n        const users = projects[index].users\n        for (let i = 0; i < users.length; i++) {\n            users[i] = users[i] + \"\"\n        }\n        this.setState({\n            selected: users,\n            project: e\n        })\n    }\n    onCancel = () => {\n        if( this.props.match.params.projectName ){\n        let projectsFetched;\n        const res = JSON.parse(localStorage.getItem(\"data\"))\n        let usersFetched = res.users.map(user => {\n            return {value: user.id, display: user.name};\n        });\n        usersFetched = [].concat(\n            usersFetched\n        );\n\n        projectsFetched = res.projects.map(project => {\n            return {value: project.name, display: project.name, users: project.selected};\n        });\n        projectsFetched = [].concat(\n            projectsFetched\n        );\n\n\n        let users = []\n        for (let i = 0; i < usersFetched.length; i += 1) {\n            users.push(\n                <Option key={usersFetched[i].value}> {usersFetched[i].display}</Option>\n            )\n        }\n        let projects = []\n\n        for (let i = 0; i < projectsFetched.length; i += 1) {\n            projects.push(\n                <Option key={projectsFetched[i].value}> {projectsFetched[i].display}</Option>\n            )\n        }\n        this.setState({\n                usersFetched: users,\n                projectsFetched: projects,\n                projects: projectsFetched,\n\n            },\n            () => {\n\n                let index = -1\n                const {projects} = this.state\n                if (this.state.projectName !== \"\") {\n                    for (let i = 0; i < projects.length; i++) {\n\n                        if (this.state.project === projects[i].value)\n                            index = i\n                    }\n                    if (index !== -1) {\n                        const users = this.state.projects[index].users\n                        for (let i = 0; i < users.length; i++) {\n                            users[i] = users[i] + \"\"\n                        }\n                        this.setState({\n                            selected: users,\n\n                        })\n                    } else {\n\n                        this.setState({\n                            selected: this.state.empty,\n\n                        })\n                    }\n                }\n            }\n        )}\n        else {\n            this.setState({\n                projetName:\"\",\n                selected:[],\n                project:\"\"\n            })\n        }\n    }\n\n    render() {\n        const {usersFetched, projectsFetched, project, selected} = this.state\n        return (\n            <div className=\"col-md-6 offset-md-3\">\n                <h3 className=\"mt-5\">Resource Assignment</h3>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"Select Project\">Select Project</label>\n                    <Select\n                        showSearch\n                        className=\"form-control\"\n                        placeholder=\"Please select users\"\n                        style={{width: '100%'}}\n                        defaultValue={\"Please Select Project\"}\n                        optionFilterProp=\"children\"\n                        onChange={this.onChangeHandler}\n                        filterOption={(input, option) =>\n                            option.props.children[1].toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                        value={project}\n                    >\n                        {projectsFetched}\n                    </Select>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"Select hospital\">Select Users</label>\n                    <Select\n                        showSearch\n                        className=\"form-control\"\n                        mode=\"multiple\"\n                        optionFilterProp=\"children\"\n                        style={{width: '100%'}}\n                        placeholder=\"Please select users\"\n                        onChange={this.handleChange}\n                        value={selected}\n                        allowClear\n                        filterOption={(input, option) =>\n                            option.props.children[1].toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                        // onSearch={this.onSearch}\n\n                    >\n                        {usersFetched}\n                    </Select>\n                </div>\n                <Button className=\" ant-btn btn-success ant-btn-primary float-right \"\n                        onClick={this.onSubmit}>\n                    Assign User\n                </Button>\n\n                <Button className=\" ant-btn btn-success ant-btn-primary ant-btn-gray float-right\"\n                        onClick={this.onCancel}>\n                    Cancel\n                </Button>\n            </div>\n        );\n\n    }\n}\n\nexport default ResourceAssignment;","import request from '../requests'\nimport {BASE_URl} from './Constant'\n\nfunction getQuestionAns() {\n    return request({\n        url: `${BASE_URl}api/getQA`,\n        method: 'GET'\n    })\n}\n\nfunction sendAnswer(data) {\n    return request({\n        url: `${BASE_URl}office365/add`,\n        method: 'POST',\n        data,\n    })\n}\nfunction sendAnswerln(data) {\n    return request({\n        url: `${BASE_URl}office365/addln`,\n        method: 'POST',\n        data,\n    })\n}\n\nfunction sendAnswerFacebook(data) {\n    return request({\n        url: `${BASE_URl}office365/addf`,\n        method: 'POST',\n        data,\n    })\n}\nfunction sendCyberAnswerFacebook(data) {\n    return request({\n        url: `${BASE_URl}cyber/addf`,\n        method: 'POST',\n        data,\n    })\n}\nfunction sendAnswerGoogle(data) {\n    return request({\n        url: `${BASE_URl}office365/addg`,\n       // url: `auth/google`,\n        method: 'POST',\n        data,\n    })\n}\n\nfunction sendCyberAnswerGoogle(data) {\n    return request({\n        url: `${BASE_URl}cyber/addg`,\n       // url: `auth/google`,\n        method: 'POST',\n        data,\n    })\n}\n\nfunction getAnswerDetail(id) {\n    return request({\n        url: `${BASE_URl}admin/viewquotation/${id}`,\n        method: 'GET'\n    });\n}\nfunction sendCyberPayments(data) {\n    return request({\n        url: `${BASE_URl}cyberpayment`,\n        method: 'POST',\n        data\n    });\n}\n\n    function sendEditAnswer(data) {\n        return request({\n            url: `${BASE_URl}admin/editquotation`,\n            method: 'POST',\n            data,\n        })\n    }\n\n    function getCyberQuestionAns() {\n        return request({\n            url: `${BASE_URl}api/getQA/1`,\n            method: 'GET'\n        })\n    }\n\n    function sendCyberAnswer(data) {\n        return request({\n            url: `${BASE_URl}cyber/add`,\n            method: 'POST',\n            data,\n        })\n    }\nfunction sendCyberAnswerln(data) {\n    return request({\n        url: `${BASE_URl}cyber/addln`,\n        method: 'POST',\n        data,\n    })\n}\n\n\nfunction getCyberAnswerDetail(id) {\n    return request({\n        url: `${BASE_URl}cyber/detail/${id}`,\n        method: 'GET'\n    })\n}\n\nfunction sendCyberEditAnswer(data) {\n    return request({\n        url: `${BASE_URl}cyber/edit`,\n        method: 'POST',\n        data,\n    })\n}\n\nfunction login(data) {\n    return request({\n        url: `${BASE_URl}login`,\n        method: 'POST',\n        data\n    })\n}\n\nfunction  getCyberPrice(id){\n    return request({\n        url: `${BASE_URl}cyber/quotation/${id}`,\n        method: 'GET',\n    })\n}\nfunction getOfficePrice(id){\n    return request({\n        url: `${BASE_URl}office365/quotation/${id}`,\n        method: 'GET',\n    })\n}\nfunction officePaymentRef(data) {\n    return request({\n        url: `${BASE_URl}office365/donePayment`,\n        method: 'POST',\n        data\n    })\n}\nfunction CyberPaymentRef(data) {\n    return request({\n        url: `${BASE_URl}cyber/donePayment`,\n        method: 'POST',\n        data\n    })\n}\n\nfunction officePayment(data) {\n    return request({\n        url: `${BASE_URl}admin/editquotation`,\n        //url: `${BASE_URl}office365/payment`,\n        method: 'POST',\n        data\n    })\n}\n\nfunction OfficeSurveyPaymnet(data) {\n    return request({\n        url: `/dashboard/api/pay/token`,\n        //url: `${BASE_URl}office365/payment`,\n        method: 'POST',\n        data\n    })\n}\nconst ServeyServics = {\n    OfficeSurveyPaymnet,\n    getQuestionAns,\n    sendAnswer,\n    sendAnswerGoogle,\n    sendCyberAnswerGoogle,\n    sendCyberAnswerln,\n    sendAnswerln,\n    sendAnswerFacebook,\n    sendCyberAnswerFacebook,\n    getAnswerDetail,\n    sendCyberAnswer,\n    getCyberQuestionAns,\n    sendEditAnswer,\n    getCyberAnswerDetail,\n    sendCyberEditAnswer,\n    login,\n    getCyberPrice,\n    getOfficePrice,\n    officePayment,\n   // CyberPaymment,\n   // OfficeSurveyRef,\n    officePaymentRef,\n    CyberPaymentRef\n};\n\n\nexport default ServeyServics\n","import React from \"react\";\nimport Button from \"antd/es/button\";\nimport {Col, Collapse, Icon, message, Row, Spin, Card} from 'antd'\nimport SurveyServics from '../Services/Api/Survey'\n\nconst {Panel} = Collapse;\nconst GenExtra = (props) => {\n    return <div>\n        <p className=\"font-weight-bolder\" style={{fontSize: 10}}>\n            <span className=\"ant-typography-ellipsis-single-line\"> {props.question}</span>\n            {!props.disabled ?\n                <Icon title=\"edit\"  style={{fontSize: 20}} type=\"edit\"/>\n                : null}\n        </p>\n    </div>\n};\n\nclass Edit extends React.Component {\n    state = {\n        loading: true,\n        editData: [],\n        checked: [],\n        ans: \"\",\n        refrence_no: this.props.match.params.refrenceNo,\n        customer_name: \"\",\n        company_name: \"\",\n        status: \"\",\n        quotation_date: \"\",\n        payment_date: \"\",\n        disabled: this.props.history.location.pathname.toLowerCase().includes(\"view\"),\n        price: 0,\n        pricelabel: 0\n    };\n\n    componentDidMount() {\n        if (this.props.match.params.path)\n            this.props.setLocation('/Discounts')\n        else\n            this.props.setLocation('/Quotations')\n        this.getAnsDetail();\n\n    }\n\n\n    onChange = (e, el) => {\n        if (e.target.type === \"number\") {\n            let number = e.target.value;\n            if (number.match(\"^([0-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|1000)$\")) {\n                let editQuestion = this.state.editData;\n                let $r = Object.values(editQuestion).map(q => {\n                    if (q.id === el.id) {\n                        q['selected_ans'] = e.target.value;\n                        return q;\n                    }\n                    return q;\n                });\n                this.setState({editData: $r});\n            } else {\n                message.error(\"Quantity must be between 0 and 1000\");\n                let editQuestion = this.state.editData;\n                let $r = Object.values(editQuestion).map(q => {\n                    if (q.id === el.id) {\n                        q['selected_ans'] = \"\";\n                        return q;\n                    }\n                    return q;\n                });\n                this.setState({editData: $r});\n            }\n        }\n        if (e.target.type === \"radio\") {\n            let editQuestion = this.state.editData;\n            let $r = Object.values(editQuestion).map(q => {\n                if (q.id === el.id) {\n                    q['selected_ans'] = e.target.value;\n                    return q;\n                }\n                return q;\n            });\n            this.setState({editData: $r});\n            //localStorage.setItem(\"data\",JSON.stringify($r))\n        }\n        if (e.target.type === \"checkbox\") {\n            if (e.target.checked) {\n                let question = this.state.editData;\n                let $r = Object.values(question).map(q => {\n                    if (q.id === el.id) {\n                        q['selected_ans'] = e.target.value;\n                        return q;\n                    }\n                    return q;\n                });\n                this.setState({Questions: $r});\n                // localStorage.setItem(\"data\",JSON.stringify($r))\n\n            } else {\n                let question = this.state.editData;\n                let $r = Object.values(question).map(q => {\n                    if (q.id === el.id) {\n                        q['selected_ans'] = \"\";\n                        return q;\n                    }\n                    return q;\n                });\n                this.setState({Questions: $r});\n                // localStorage.setItem(\"data\",JSON.stringify($r));\n            }\n        }\n\n    };\n\n    onSaveHandler = () => {\n        if (!this.state.disabled) {\n            if (this.state.survey_type === \"Office 365\") {\n                if (this.state.checked.length === 0) {\n                    message.error(\"services options are necessary\")\n                    return\n                }\n            }\n            this.setState({loading: true});\n            let reference_no = this.props.match.params.refrenceNo;\n            const selectedAnswers = {reference_no};\n            Object.values(this.state.editData).forEach((q, index) => {\n                if (q.selected_ans !== undefined) {\n                    selectedAnswers[q.tag] = q.selected_ans;\n                }\n            });\n            setTimeout(() => {\n                this.setState({\n                    loading: false,\n                })\n            }, 400);\n            message.success(\"item have been updated\")\n        }\n    };\n    onSubmitHandler = () => {\n        if (!this.state.disabled) {\n            if (this.state.survey_type === \"Office 365\") {\n                if (this.state.checked.length === 0) {\n                    message.error(\"services options are necessary\")\n                    return\n                }\n            }\n            let refrence_no = this.props.match.params.refrenceNo;\n            let price = this.state.price\n            const selectedAnswers = {refrence_no, price};\n\n            Object.values(this.state.editData).forEach((q, index) => {\n                if (q.selected_ans !== undefined) {\n                    selectedAnswers[q.tag] = q.selected_ans;\n                }\n            });\n            this.postAns(selectedAnswers);\n            this.setState({btnloading: true})\n        }\n    };\n    postAns = (selectedAnswers) => {\n        if (this.state.survey_type === \"Office 365\") {\n            if (this.state.checked.length === 0) {\n                message.error(\"Services options are necessary\")\n                return\n            }\n        }\n        const {history, match} = this.props;\n        let id = match.params.refrenceNo;\n        this.setState({loading: true});\n\n        SurveyServics.sendEditAnswer(selectedAnswers)\n            .then(response => {\n\n                if (response.data.success) {\n\n                    this.getAnsDetail();\n\n                }\n            })\n            .catch(err => message.error(\"quotation can not be updated\"));\n\n    };\n\n    check = e => {\n        if (!this.state.disabled) {\n            let {editData} = this.state\n\n            if (e.target.type === \"checkbox\") {\n\n                if (this.state.checked.includes(e.target.name)) {\n\n                    const {checked} = this.state\n                    checked.splice(checked.indexOf(e.target.name), 1);\n                    editData[7].selected_ans = checked.join()\n\n                    this.setState({\n                        checked: checked,\n                        editData: editData\n                    })\n\n                } else {\n                    if (e.target.name === \"None\") {\n                        let checked = []\n                        checked.push(e.target.name)\n                        editData[7].selected_ans = checked.join()\n\n                        this.setState({\n                            checked: checked,\n                            editData: editData\n                        })\n                    } else {\n                        let {checked} = this.state\n                        if (checked.includes(\"None\")) {\n                            checked = []\n                        }\n                        checked.push(e.target.name)\n                        editData[7].selected_ans = checked.join()\n                        this.setState({\n                            checked: checked,\n                            editData: editData\n                        })\n                    }\n                }\n            }\n        }\n    }\n\n\n    getAnsDetail = () => {\n        let id = this.props.match.params.refrenceNo;\n        this.setState({\n            loading: true\n        });\n        SurveyServics.getAnswerDetail(id).then(response => {\n            this.setState({\n                editData: response.data.survey_questions,\n                loading: false,\n                survey_type: response.data.survey_type,\n                customer_name: response.data.customer_name,\n                company_name: response.data.company_name,\n                quotation_date: response.data.quoted_date,\n                payment_date: response.data.payment_date,\n                status: response.data.status,\n                pricelabel: response.data.price ? response.data.price : 0,\n                price: ''\n            }, () => {\n                if (this.state.status === \"Paid\" && !this.state.disabled) {\n                    this.setState({\n                        disabled: true\n                    })\n                }\n                if (this.state.survey_type === \"Office 365\") {\n                    const ans=this.state.editData[7].selected_ans\n                    let answers = ans.split(\",\")\n                    const checked = []\n                    for (let i = 0; i < answers.length; i += 1) {\n                        checked.push(answers[i])\n                    }\n                    this.setState({\n                        checked: checked,\n                        loading:false\n                    })\n                    message.success(\"quotation updated successfully\")\n                }\n            });\n            localStorage.setItem(\"data\", JSON.stringify(response.data.survey_questions))\n        })\n\n    };\n    onCrossHandler = () => {\n\n        this.setState({\n            editData: JSON.parse(localStorage.getItem(\"data\"))\n        }, () => {\n            let {editData} = this.state\n            let ans = editData[7].selected_ans\n            let answers = ans.split(\",\")\n            const checked = []\n            for (let i = 0; i < answers.length; i += 1) {\n                checked.push(answers[i])\n            }\n            editData[7].selected_ans = ans\n            this.setState({\n                checked: checked,\n                editData: editData\n            })\n\n        })\n    };\n    change = e => {\n        if (!this.state.disabled) {\n            this.setState({\n                [e.target.name]: e.target.value\n            })\n        }\n    }\n\n    render() {\n        const {\n            loading, refrence_no,\n            customer_name,\n            company_name,\n            status,\n            quotation_date,\n            payment_date,\n            disabled,\n            price,\n            pricelabel\n        } = this.state;\n\n        const view = this.state.editData && this.state.editData.map(el => {\n            if (el.q_visible) {\n                return <Collapse\n                >\n                    <Panel header={el.question} showArrow={false}\n                           extra={<GenExtra disabled={disabled} question={el.selected_ans}/>}>\n                        <div>\n                            <span className=\"right-tick\">\n                                {!disabled ? <Icon title={\"save\"} type=\"check\" onClick={this.onSaveHandler}\n                                                   theme={\"outlined\"}\n                                                   className=\"mr-3\"\n                                                   style={{\n                                                       color: \"#85c63d\", fontSize: \"20px\", border: \"2px solid\",\n                                                       borderRadius: \"50%\", padding: \"5px\"\n                                                   }}\n                                /> : null}\n                                {!disabled ? <Icon title={\"cross\"} type=\"cross\" onClick={this.onCrossHandler}\n                                                   theme={\"outlined\"}\n                                                   style={{\n                                                       color: \"red\", fontSize: \"20px\", border: \"2px solid\",\n                                                       borderRadius: \"50%\", padding: \"5px\"\n                                                   }}\n                                /> : null}\n                            </span>\n                            {el.ans.map((val, e) => <Row>\n                                    <fieldset id={el.tag} onChange={e => this.onChange(e, el)}>\n                                        <Col span={24}>\n                                            <div className=\"inputGroup\">\n                                                {el.tag !== \"additional_cloud_migration\" ?\n                                                    <input className=\"form-control\" value={val}\n                                                           id={el.tag + val}\n                                                           disabled={disabled}\n                                                           checked={el.selected_ans === val}\n                                                        // defaultChecked={el.selected_ans === val }\n                                                           name={el.tag} type={el.type}/> :\n                                                    <input value={val}\n                                                           disabled={disabled}\n                                                           checked={this.state.checked.includes(val)}\n                                                           id={el.tag + val}\n                                                           name={val}\n                                                           type={el.type}\n                                                           onInput={this.check}\n                                                    />\n                                                }\n                                                <label htmlFor={el.tag + val}>{val}</label>\n                                            </div>\n                                        </Col>\n                                    </fieldset>\n                                </Row>\n                            )}\n                        </div>\n                    </Panel>\n                </Collapse>\n            } else {\n                if (el.q_disabled) {\n                    return <Collapse\n                    >\n                        <Panel header={el.question} showArrow={false} extra={<GenExtra question={el.selected_ans} disabled={disabled}/>}>\n                            <div>\n                            <span className=\"right-tick\">\n                                {!disabled ? <Icon title={\"save\"} type=\"check\" onClick={this.onSaveHandler}\n                                                   theme={\"outlined\"}\n                                                   className=\"mr-3\"\n                                                   style={{\n                                                       color: \"#85c63d\", fontSize: \"20px\", border: \"2px solid\",\n                                                       borderRadius: \"50%\", padding: \"5px\"\n                                                   }}\n                                /> : null}\n                                {!disabled ? <Icon title={\"cross\"} type=\"cross\" onClick={this.onCrossHandler}\n                                                   theme={\"outlined\"}\n                                                   style={{\n                                                       color: \"red\", fontSize: \"20px\", border: \"2px solid\",\n                                                       borderRadius: \"50%\", padding: \"5px\"\n                                                   }}\n                                /> : null}\n                            </span>\n                                <Row>\n                                    <fieldset id={el.tag}>\n                                        <Col span={24}>\n                                            <input className=\"form-control\"\n                                                   disabled={disabled}\n                                                   name={el.tag}\n                                                   value={el.selected_ans}\n                                                   placeholder={el.selected_ans === null ? 0 : el.selected_ans}\n                                                   type={el.type}\n                                                   onChange={e => this.onChange(e, el)}/>\n                                        </Col>\n                                    </fieldset>\n                                </Row>\n\n                            </div>\n                        </Panel>\n                    </Collapse>\n                }\n            }\n        });\n        return <section className=\"edit-collapse-section\">\n            <div className=\"container mt-2\">\n                <Card loading={loading}>\n                    <div className=\"row\">\n                        <div className=\"col-md-2\">\n                            <p>Customer Name</p>\n                            <p>{customer_name}</p>\n                        </div>\n                        <div className=\"col-md-2\">\n                            <p>Company Name</p>\n                            <p>{company_name}</p>\n                        </div>\n                        <div className=\"col-md-2\">\n                            <p>Refrence No</p>\n                            <p>{refrence_no}</p>\n                        </div>\n                        <div className=\"col-md-2\">\n                            <p>Quotation Date</p>\n                            <p>{quotation_date}</p>\n                        </div>\n                        <div className=\"col-md-2\">\n                            <p>Payment Date</p>\n                            <p>{payment_date}</p>\n                        </div>\n                        <div className=\"col-md-1\">\n                            <p>Status </p>\n                            <p>{status}</p>\n                        </div>\n\n                        <div className=\"col-md-2\">\n                            <p>Price </p>\n                            <p>{pricelabel}</p>\n                        </div>\n                        <div className=\"col-md-1\">\n                            <p>Price</p>\n                            <div style={{width: \"100%\"}}>\n                                <input type=\"text\" className=\"form-control\" value={price} name=\"price\"\n                                       onChange={this.change}/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"row float-right mt-4\"}>\n                        <Button className={\"float-right\"} loading={loading} type=\"primary\"\n                                onClick={() => this.props.history.push( this.props.match.params.path?'/Discounts':'/Quotations')}>\n                            Back\n                        </Button>\n                    </div>\n                </Card>\n            </div>\n            <div className=\"container\">\n                <div className=\"row mt-5\">\n                    <div className=\"col-md-10 offset-1\">\n                        {loading ? <div className=\"text-center mt-5\"><Spin size=\"large\"/></div> : view}\n                        <div className=\"mt-3 float-right\">\n                            {!disabled ? <Button loading={loading} type=\"primary\" onClick={this.onSubmitHandler}>\n                                Update\n                            </Button> : null\n                            }\n                        </div>\n                    </div>\n                    <br/>\n                </div>\n                <div className=\"row\">\n                </div>\n            </div>\n        </section>\n    }\n}\n\nexport default Edit;\n","import React, {Component} from 'react';\nimport {Button, message, Card} from \"antd\";\nimport PresaleServices from \"../Services/Api/Api\";\nimport {Select} from 'antd';\nimport 'antd/dist/antd.css';\n\n\nclass AddProject extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            customersFetched: [],\n            types: [{value: \"\", display: \"Select type\"}, {value: \"Office 365\", display: \"Office 365\"}, {\n                value: \"Cyber\",\n                display: \"Cyber\"\n            }, {\n                value: \"Manage Services\",\n                display: \"Manage Services\"\n            }],\n            customer_id: \"\",\n            project_name: \"\",\n            project_type: \"\"\n\n        }\n\n        this.props.setLocation('/Main')\n    }\n\n\n    onSubmit = e => {\n        e.preventDefault();\n        const {customer_id, project_name, project_type,} = this.state\n        let flag=false\n        if (customer_id==\"\") {\n            message.error(\"please Choose user\")\n            flag=true\n        }\n        if (project_name === \"\") {\n            message.error(\"Project name is necessary\")\n            flag=true\n        }\n        if (project_type === \"\") {\n            message.error(\"Project type is necessary\")\n            flag=true\n        }\n        if(!flag) {\n            PresaleServices.createProject(\n                {\n                    id:customer_id,\n                    name:project_name,\n                    project_type:project_type\n                }\n            ).then(() => {\n                message.success(\"Project created successfully.\")\n                this.props.history.push('/')\n            }).catch(() => {\n                message.error(\"name already taken.\")\n            })\n\n        }\n    }\n\n    componentDidMount() {\n        PresaleServices.getProjectCustomers().then(res => {\n            if (res) {\n                if(res.length===0){\n                    message.error(\"please create customer first\")\n                }\n                let customersFetched = res.map(customer => {\n                    return {value: customer.id, display: customer.name};\n                });\n                customersFetched = [{value: \"\", display: \"Select Customer\"}].concat(\n                    customersFetched\n                );\n                this.setState({customersFetched: customersFetched});\n            }\n        });\n    }\n\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })}\n    onCancel=()=>{\n        this.props.history.push('/')\n    }\n\n\n    render() {\n        const {\n            customer_id, types,\n            project_name, project_type, customersFetched\n\n        } = this.state\n        return (\n            <div className=\"col-md-6 offset-md-3\">\n\n                <h3 className=\"mt-5\">Add Project</h3>\n                <div className=\"form-group\">\n\n                    <input\n                        type=\"project\"\n                        className=\"form-control\"\n                        placeholder=\"Project Name\"\n                        name=\"project_name\"\n                        required\n                        onChange={this.onChange}\n                        value={project_name}\n\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"Select status\">select Type</label>\n                    <select\n                        className=\"form-control\"\n                        name=\"project_type\"\n                        value={project_type}\n                        onChange={this.onChange}\n                        required\n                    >\n                        {types.map(type => (\n                            <option key={type.value} value={type.value}>\n                                {type.display}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"Select status\">select Customer</label>\n                    <select\n                        className=\"form-control\"\n                        name=\"customer_id\"\n                        value={customer_id}\n                        onChange={this.onChange}\n                        required\n                    >\n                        {customersFetched.map(customer => (\n                            <option key={customer.value} value={customer.value}>\n                                {customer.display}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <Button className=\" ant-btn btn-success ant-btn-primary float-right \"\n                        onClick={this.onSubmit}>\n                   Create Project\n                </Button>\n\n                <Button className=\" ant-btn btn-success ant-btn-primary ant-btn-gray float-right\"\n                        onClick={this.onCancel} >\n                    Cancel\n                </Button>\n            </div>\n        );\n\n    }\n}\n\nexport default AddProject;","import React, {Component} from \"react\";\nclass NotFound extends Component {\n\n\n    onSubmit=()=>{\n        this.props.history.push(\"/\")\n    };\n    render() {\n        return<div className=\"page-wrap d-flex flex-row align-items-center\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-12 text-center\">\n                        <span className=\"display-1 d-block\">404</span>\n                        <div className=\"mb-4 lead\">The page you are looking for was not found.</div>\n                        <button type=\"submit\" className=\" ant-btn ant-btn-primary btn-success btn-block \"\n                                onClick={this.onSubmit}>\n                             back to Home Page\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n}\nexport default NotFound","import React, {Component} from 'react'\nimport cookie from \"react-cookies\";\nimport Bill from '../Bills/Bill'\nimport Users from '../User/User'\nimport Payments from '../Payments/Payment'\nimport Discounts from '../Discount/Discount'\nimport Navbarz from '../Menu/Navbarz'\nimport 'antd/dist/antd.css'\nimport '../Main/style.scss'\nimport Navbary from '../Menu/Navbary'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport Login from \"../Auth/Login\";\nimport Main from '../Main/Main'\nimport EmailVerified from \"../Auth/EmailVerified\";\nimport Logout from \"../Auth/Logout\";\nimport Forget from \"../Auth/Forget\";\nimport Message from '../Auth/Message'\nimport Reset from \"../Auth/Reset\";\nimport ResetLink from '../Auth/ResetLink';\nimport PresaleServices from \"../Services/Api/Api\";\nimport EditProfile from \"../Common/EditProfile\";\nimport Customers from \"../Customer/Customer\";\nimport AddCustomer from \"../Customer/AddCustomer\";\nimport EditCustomer from \"../Customer/EditCustomer\";\nimport AddUser from \"../User/AddUser\";\nimport EditUser from \"../User/EditUser\";\nimport ResourceAssignment from \"../Common/ResourceAssignment\";\nimport EditQuotation from '../Bills/EditQuotation'\nimport AddProject from \"../Common/AddProject\";\nimport NotFound from '../Common/NotFound'\nimport {message} from \"antd\";\nimport axios from \"axios\";\n\nclass PrivateRoutes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: cookie.load(\"admin_token\"),\n            name: \"\",\n            id: -1,\n            company_name: \"VaporVM\",\n            location: \"\",\n\n            permissions: [],\n            users: {\n                read: false,\n                write: false\n            }, payments: {\n                read: false,\n                write: false\n            }, quotations: {\n                read: false,\n                write: false\n            }, discounts: {\n                read: false,\n                write: false\n            },\n            customers: {\n                read: false,\n                write: false\n            },\n            projects: {\n                read: false,\n                write: false\n            },\n            permissionsSet: false,\n\n            resourceAssign: false\n        }\n        this.props.setToken(this.state.token)\n\n    }\n\n    setPermissions = () => {\n        let users = [], payments = [], quotations = [], discounts = [], customers = [], resourceAssign = false,\n            projects = []\n        this.state.permissions.forEach(e => {\n            if (e.includes(\"users\")) {\n                if (e.includes(\"create\")) {\n                    users['read'] = true\n                    users['write'] = true\n                } else {\n                    users['read'] = true\n                    users['write'] = false\n                }\n            }\n            if (e.includes(\"payments\")) {\n                if (e.includes(\"create\")) {\n                    payments['read'] = true\n                    payments['write'] = true\n                } else {\n                    payments['read'] = true\n                    payments['write'] = false\n                }\n            }\n            if (e.includes(\"quotations\")) {\n                if (e.includes(\"create\")) {\n                    quotations['read'] = true\n                    quotations['write'] = true\n                } else {\n                    quotations['read'] = true\n                    quotations['write'] = false\n                }\n            }\n            if (e.includes(\"discounts\")) {\n                if (e.includes(\"create\")) {\n                    discounts['read'] = true\n                    discounts['write'] = true\n                } else {\n                    discounts['read'] = true\n                    discounts['write'] = false\n                }\n            }\n            if (e.includes(\"customers\")) {\n                if (e.includes(\"create\")) {\n                    customers['read'] = true\n                    customers['write'] = true\n                } else {\n                    customers['read'] = true\n                    customers['write'] = false\n                }\n            }\n            if (e.includes(\"projects\")) {\n                if (e.includes(\"create\")) {\n                    projects['read'] = true\n                    projects['write'] = true\n                } else {\n                    projects['read'] = true\n                    projects['write'] = false\n                }\n            }\n            if (e.includes(\"resource-assignment\")) {\n                resourceAssign = true\n            }\n\n        })\n        this.setState({\n\n            users: users,\n            payments: payments,\n            quotations: quotations,\n            discounts: discounts,\n            customers: customers,\n            resourceAssign: resourceAssign,\n            projects: projects,\n            permissionsSet: true\n        }, () => {\n            this.props.setPermissions(this.state.users, this.state.customers, this.state.quotations,\n                this.state.discounts, this.state.payments, this.state.resourceAssign\n            )\n        })\n    }\n    setToken = token => {\n\n        this.setState({\n            token: token,\n        });\n        if (token === \"\") {\n            this.setState({\n                name: \"\",\n                company_name: \"\"\n            })\n        }\n        this.props.setToken(token)\n    }\n    setName = name => {\n\n        this.setState({\n            name: name,\n        });\n\n    }\n\n    setLocation = location => {\n\n        this.setState({\n            location: location\n        });\n        this.props.setKey(location)\n\n    }\n\n    componentWillMount() {\n        if (this.state.token !== \"\"&&this.state.token !==undefined)\n            PresaleServices.getName().then(res => {\n                    this.setState({\n                            name: res.name,\n                            permissions: res.permissions,\n                            id: res.id\n                        }\n\n                        , () => {\n                            const api = {\n                                Authorization: \"Bearer \" + this.state.token\n                            }\n\n                            axios.put('/dashboard/api/user/' + res.id + '/online', null, {headers: api});\n                            if (this.state.permissions.length === 0) {\n                                message.error('you do not have enough rights')\n\n                            } else\n                                this.setPermissions();\n                        })\n\n                }\n            ).catch(() => {\n                cookie.remove(\"admin_token\", {\n                    path: \"/\",\n                });\n\n                this.setToken(\"\")\n                this.props.setToken(\"\")\n                this.props.history.push('/Login')\n            });\n    }\n\n    setLocation = location => {\n\n        this.setState({\n            location: location\n        });\n        this.props.setKey(location);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.token !== \"\" && this.state.token !== prevState.token && this.props.calling !== true) {\n            PresaleServices.getName().then(res => {\n                    const api = {\n                        Authorization: \"Bearer \" + this.state.token\n                    }\n                    axios.put('/dashboard/api/user/' + res.id + '/online', null, {headers: api});\n                    this.setState({\n                            name: res.name,\n                            permissions: res.permissions,\n                            id: res.id\n                        }\n                    )\n                    this.setPermissions();\n\n                }\n            ).catch(() => {\n                cookie.remove(\"admin_token\", {\n                    path: \"/\",\n                });\n                this.setToken(\"\")\n\n                this.props.setToken(\"\")\n                this.props.history.push('/Login')\n            });\n        }\n    }\n\n    render() {\n\n        window.scrollTo(0, 0)\n        let {\n            token, name, location, users, customers, quotations, discounts, projects,\n            payments, resourceAssign\n        } = this.state;\n\n        if (token === undefined)\n            token = \"\";\n\n        let condition = token !== undefined && token !== \"\" &&\n            (!this.state.permissionsSet || this.state.permissions.length !== 0);\n        return condition ?\n            <HashRouter>\n                <Navbarz name={name} location={location} token={this.state.token} history={this.props.history}\n                         id={this.state.id}\n                />\n                <div>\n                    <Switch>\n\n\n                        />\n                        <Route path={'//dashboard'} render={(props) => <Main{...props}\n                                                                                       name={this.state.name}\n                                                                                       company_name={this.state.company_name}\n                                                                                       setLocation={this.setLocation}\n                                                                                       canWrite={resourceAssign}\n                                                                                       token={this.state.token}\n                                                                                       canCreateProject={this.state\n                                                                                           .projects['write']}\n                        />}/>\n                        <Route path={'/Login'} render={(props) => <Main{...props}\n                                                                       name={this.state.name}\n                                                                       company_name={this.state.company_name}\n                                                                       setLocation={this.setLocation}\n                                                                       canWrite={resourceAssign}\n                                                                       token={this.state.token}\n                                                                       canCreateProject={this.state\n                                                                           .projects['write']}\n                        />}/>\n                        <Route\n\n                            exact path={'/EditProfile'} render={(props) => <EditProfile{...props}\n                                                                                       setName={this.setName}\n\n\n                        />}/>\n                        {users['write'] ?\n                            <Route\n                                exact path={'/AddUser'} render={(props) => <AddUser{...props}\n                                                                                   setName={this.setName}\n\n\n                            />}/> : null}\n                        {users['write'] ?\n                            <Route\n                                exact path={'/EditUser/:id'} render={(props) => <EditUser{...props}\n                                                                                         setName={this.setName}\n\n\n                            />}/> : null}\n                        {customers['write'] ?\n                            <Route\n                                exact path={'/AddCustomer'} render={(props) => <AddCustomer{...props}\n                                                                                           setName={this.setName}\n\n\n                            />}/>\n                            : null}\n                        {projects['write'] ?\n                            <Route\n                                exact path={'/AddProject'} render={(props) => <AddProject{...props}\n                                                                                         setLocation={this.setLocation}\n\n\n                            />}/>\n                            : null}\n                        {customers['write'] ?\n                            <Route\n                                exact path={'/EditCustomer/:id'} render={(props) => <EditCustomer{...props}\n                                                                                                 setName={this.setName}\n\n\n                            />}/> : null\n                        }{projects['read'] ?\n                        <Route\n                            exact path={'/'} render={(props) => <Main{...props}\n                                                                     name={this.state.name}\n                                                                     company_name={this.state.company_name}\n                                                                     setLocation={this.setLocation}\n                                                                     canWrite={resourceAssign}\n                                                                     token={this.state.token}\n                                                                     canCreateProject={this.state\n                                                                         .projects['write']}\n                        />\n                        }\n                        /> : null}\n                        {users['read'] ?\n                            <Route\n                                exact path={'/Users'} render={(props) => <Users{...props}\n                                                                               setLocation={this.setLocation}\n                                                                               canwrite={users['write']}\n                            />}\n\n                            /> : null}\n\n                        {resourceAssign ?\n                            <Route\n                                exact path={'/Resource'} render={(props) => <ResourceAssignment{...props}\n                                                                                               setLocation={this.setLocation}\n                                                                                               canwrite={users['write']}\n                            />}\n\n                            /> : null}\n                        {resourceAssign ?\n                            <Route\n                                exact path={'/Resource/:projectName'} render={(props) => <ResourceAssignment{...props}\n                                                                                                            setLocation={this.setLocation}\n                                                                                                            canwrite={users['write']}\n                            />}\n\n                            /> : null}\n                        {payments['read'] ?\n                            <Route\n                                exact path={'/Payments'} render={(props) => <Payments{...props}\n                                                                                     setLocation={this.setLocation}\n                            />}\n\n                            />\n                            : null}\n                        {discounts['read'] ?\n                            <Route\n                                exact path={'/Discounts'} render={(props) => <Discounts{...props}\n                                                                                       setLocation={this.setLocation}\n                                                                                       canWrite={discounts['write']}\n                            />}\n\n                            /> : null\n                        }\n                        {customers['read'] ?\n                            <Route\n                                exact path={'/Customers'} render={(props) => <Customers{...props}\n                                                                                       setLocation={this.setLocation}\n                                                                                       canwrite={customers['write']}\n                            />}\n\n                            /> : null}\n                        {quotations['read'] ?\n\n                            <Route\n                                exact path={'/Quotations'} render={(props) => <Bill{...props}\n                                                                                   setLocation={this.setLocation}\n\n                                                                                   canWrite={quotations['write']}\n                            />}\n\n                            /> : null}\n\n                        {quotations['write'] ?\n\n                            <Route\n                                exact path={'/Edit/:refrenceNo/:path'} render={(props) => <EditQuotation{...props}\n                                                                                                        setLocation={this.setLocation}\n                            />}\n\n                            /> : null}\n\n                        {quotations['write'] ?\n\n                            <Route\n                                exact path={'/View/:refrenceNo/:path'} render={(props) => <EditQuotation{...props}\n                                                                                                        setLocation={this.setLocation}\n                            />}\n\n                            /> : null}\n\n                        {quotations['write'] ?\n\n                            <Route\n                                exact path={'/Edit/:refrenceNo/'} render={(props) => <EditQuotation{...props}\n                                                                                                   setLocation={this.setLocation}\n                            />}\n\n                            /> : null}\n\n                        {quotations['write'] ?\n\n                            <Route\n                                exact path={'/View/:refrenceNo/'} render={(props) => <EditQuotation{...props}\n                                                                                                   setLocation={this.setLocation}\n                            />}\n\n                            /> : null}\n                        <Route\n                            exact path={'/logout'} render={(props) => <Logout{...props}\n                                                                             setToken={this.setToken}\n                                                                             token={this.state.token}\n                                                                             id={this.state.id}\n                        />}\n\n                        />\n\n                        {this.state.permissions.length ? <Route component={NotFound}/> : null}\n                    </Switch>\n                </div>\n            </HashRouter>\n            : <HashRouter>\n                <Navbary/>\n                <div>\n                    <Switch>\n                        < Route\n                            exact path={'/Login'} render={(props) => <Login{...props} setToken={this.setToken}\n                        />}\n                        />\n                        <Route path={'/VerifyEmail/:email'} component={EmailVerified}/>\n                        <Route path={'/Forget'} component={Forget}/>\n                        <Route path={'/Message'} component={Message}/>\n                        <Route exact path={'/Reset/:token'} component={Reset}/>\n                        <Route exact path={'/ResetLink'} component={ResetLink}/>\n                        <Route\n                            render={(props) => <Login{...props}\n                                                     setToken={this.setToken}\n                            />}/>\n                    </Switch>\n                </div>\n            </HashRouter>\n    }\n\n}\n\nexport default PrivateRoutes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Link, HashRouter} from \"react-router-dom\"\nimport \"antd/dist/antd.css\";\nimport \"../index.css\";\nimport {Layout, Menu} from \"antd\";\nimport {\n  PayCircleOutlined,\n    WalletOutlined,\n    UserAddOutlined,\n    ProfileOutlined,\nUsergroupAddOutlined,\n   ReconciliationOutlined\n} from \"@ant-design/icons\";\nimport PrivateRoutes from \"../Routes/PrivateRoutes\";\nimport cookie from \"react-cookies\";\n\nconst {Header, Sider, Content,Footer} = Layout;\nconst {SubMenu} = Menu;\n\nclass MainLayOut extends React.Component {\n\n    onCollapse = collapsed => {\n\n        this.setState({collapsed});\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: \"\",\n            collapsed: false,\n            key: \"/\",\n            calling:false,\n            called:false,\n            users:{\n                read:false,\n                write:false\n            },payments:{\n                read:false,\n                write:false\n            },quotations:{\n                read:false,\n                write:false\n            },discounts:{\n                read:false,\n                write:false\n            },\n            customers:{\n                read:false,\n                write:false\n            },\n            resourceAssignment:false\n        }\n    }\n\n    setKey = key => {\n        this.setState({\n            key: key\n        })\n    }\n    setToken = token => {\n        this.setState({\n            token: token,\n            calling:true\n        });\n        if(token===\"\")\n            this.setState({\n                calling:false\n            })\n\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    };\n    setPermissions=(users,customers,quotations,discounts,payments,resourceAssignment)=>{\n        this.setState({\n            users:users,customers:customers,quotations:quotations,\n            discounts:discounts,payments:payments,resourceAssignment:resourceAssignment\n            ,called:true\n        })\n\n    }\n\n    render() {\n        const {token,users,customers,quotations,discounts,payments,resourceAssignment} = this.state;\n        let{key}=this.state;\n        return (token ? <Layout>\n                    <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n                        <HashRouter>\n                            <Menu className=\"mt-5\" theme=\"dark\" mode=\"inline\" selectedKeys={[key]}>\n                                    <Menu.Item key=\"/\">\n                                        <ProfileOutlined style={{fontSize: '36px', color: '#a8c438'}}/>\n                                        <span style={{fontSize: '16px', color: '#a8c438'}}>\n                                <Link to={'/'}> Projects\n                                </Link>\n                            </span>\n                                    </Menu.Item>\n                                {users['read']?\n                                    <Menu.Item key=\"/Users\">\n                                    <UserAddOutlined style={{ fontSize: '36px', color: '#a8c438' }} />\n                                    <span>\n                                 <Link to={'/Users'}> Users\n                            </Link>\n                            </span>\n\n                                </Menu.Item>:null}\n                                {customers['read']?\n                                    <Menu.Item key=\"/Customers\">\n                                    <UsergroupAddOutlined style={{fontSize: '36px', color: '#a8c438'}}/>\n                                    <span>\n                                <Link to={'/Customers'}> Customers\n                            </Link>\n                            </span>\n                                </Menu.Item>:null\n                                }\n                                {payments['read']?\n                                    <Menu.Item key=\"/Payments\">\n                                    <WalletOutlined style={{fontSize: '36px', color: '#a8c438'}}/>\n                                    <span>\n                                  <Link to={'/Payments'}> Payments\n                            </Link>\n                            </span>\n                                </Menu.Item>:null\n                                }\n                                {discounts['read']?\n                                <Menu.Item key=\"/Discounts\">\n                                    <PayCircleOutlined style={{fontSize: '36px', color: '#a8c438'}}/>\n                                    <span>\n                                        <Link to={'/Discounts'}> Discounts\n                                    </Link>\n                                    </span>\n                                </Menu.Item>:null\n                            }\n                            {quotations['read']?\n                                <Menu.Item key=\"/Quotations\">\n                                    <ReconciliationOutlined style={{fontSize: '36px', color: '#a8c438'}}/>\n                                    <span>\n                                         <Link to={'/Quotations'}> Quotations\n                                    </Link>\n                                    </span>\n                                </Menu.Item>:null\n                            }\n                                {resourceAssignment?\n                                    <Menu.Item key=\"/Resource\">\n                                        <ReconciliationOutlined style={{fontSize: '36px', color: '#a8c438'}}/>\n                                        <span>\n                                         <Link to={'/Resource'}> Resource Assignment\n                                    </Link>\n                                    </span>\n                                    </Menu.Item>:null\n                                }\n                            </Menu>\n                        </HashRouter>\n                    </Sider>\n\n                    <Layout className=\"site-layout\">\n                    <Content\n                            className=\"site-layout-background\"\n                            style={{\n                                //margin: \"24px 16px\",\n                                padding: 0,\n                                minHeight: 980\n                            }}\n\n                        >\n                            <PrivateRoutes token={this.state.token} setToken={this.setToken}\n                                           setKey={this.setKey} setPermissions={this.setPermissions}\n                                           calling={this.state.calling}\n                                           history={this.props.history}\n                            />\n                        </Content>\n                        <Footer style={{ textAlign: 'center' }}>CopyRights © Vaporvm.com 2020</Footer>\n                    </Layout>\n                </Layout> :\n                <PrivateRoutes token={this.state.token} setToken={this.setToken} setKey={this.setKey}\n                               setPermissions={this.setPermissions}\n                               calling={this.state.calling}\n                />\n        )\n    }\n\n}\n\nexport default MainLayOut;\n","import React from 'react';\nimport './App.css';\nimport '../src/Main/style.scss'\nimport MainLayOut from \"./Common/Layout\";\nimport 'antd/dist/antd.css'\nimport {HashRouter, Route,Switch} from 'react-router-dom'\nfunction App() {return(\n  <HashRouter>\n\n    <Route component={MainLayOut}/>\n\n    </HashRouter>\n)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}